Graph(
	nodes = listOf(org.joda.time.format.PeriodFormatterBuilder$Literal:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), org.joda.time.LocalDate:minusYears(int), org.joda.time.convert.PeriodConverter:getPeriodType(java.lang.Object), org.joda.time.field.SkipUndoDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField-int), org.joda.time.format.DateTimeFormatterBuilder:appendFixedSignedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.format.ISODateTimeFormat:basicTTime(), org.joda.time.field.DividedDateTimeField:addWrapField(long-int), java.io.DataOutput:writeByte(int), org.joda.time.format.PeriodFormatterBuilder:clearPrefix(), org.joda.time.field.ScaledDurationField:getValue(long-long), org.joda.time.DateMidnight:withDayOfYear(int), org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration), org.joda.time.Years:multipliedBy(int), org.joda.time.format.DateTimeFormatterBuilder:appendMinuteOfHour(int), org.joda.time.DateTimeFieldType:millisOfDay(), org.joda.time.DateMidnight:minus(org.joda.time.ReadablePeriod), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-java.lang.String-java.util.Locale), org.joda.time.format.ISODateTimeFormat$Constants:access$4200(), org.joda.time.chrono.IslamicChronology:getYearMillis(int), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.chrono.BasicWeekyearDateTimeField:readResolve(), org.joda.time.format.DateTimeFormatterBuilder:appendClockhourOfDay(int), org.joda.time.Instant:<clinit>(), org.joda.time.format.PeriodFormatterBuilder$Separator:finish(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.format.DateTimeFormatterBuilder:csStartsWithIgnoreCase(java.lang.CharSequence-int-java.lang.String), org.joda.time.LocalDate:withDayOfMonth(int), org.joda.time.LocalDateTime:weekOfWeekyear(), org.joda.time.convert.ReadablePeriodConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat$Constants:hourElement(), org.joda.time.MutableInterval:setPeriodBeforeEnd(org.joda.time.ReadablePeriod), org.joda.time.Period:parse(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$TextField:<clinit>(), org.joda.time.chrono.BaseChronology:weekOfWeekyear(), org.joda.time.convert.ReadablePartialConverter:<init>(), org.joda.time.tz.DateTimeZoneBuilder$OfYear:previous(long-int-int), org.joda.time.base.AbstractDuration:isLongerThan(org.joda.time.ReadableDuration), org.joda.time.field.BaseDurationField:compareTo(java.lang.Object), org.joda.time.chrono.BasicFixedMonthChronology:getDayOfMonth(long), org.joda.time.LocalDateTime:getHourOfDay(), org.joda.time.base.AbstractDateTime:getWeekOfWeekyear(), org.joda.time.chrono.JulianChronology:minuteOfHour(), org.joda.time.base.AbstractPartial:toDateTime(org.joda.time.ReadableInstant), org.joda.time.MutableDateTime$Property:addWrapField(int), org.joda.time.Minutes:toStandardDuration(), org.joda.time.DateMidnight:withChronology(org.joda.time.Chronology), org.joda.time.chrono.JulianChronology:hourOfHalfday(), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:previousTransition(long), org.joda.time.base.BasePartial:getField(int), org.joda.time.DateTimeZone:setNameProvider(org.joda.time.tz.NameProvider), org.joda.time.Minutes:minus(org.joda.time.Minutes), org.joda.time.Chronology:getZone(), org.joda.time.YearMonthDay:<init>(long-org.joda.time.Chronology), org.joda.time.field.DecoratedDurationField:getMillis(long-long), org.joda.time.MutableDateTime:millisOfDay(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:create(java.lang.String-boolean-java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$DSTZone), org.joda.time.chrono.LimitChronology$LimitDurationField:add(long-int), java.util.HashSet:<init>(), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:<init>(), org.joda.time.MutableDateTime:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.LocalDate$Property:getMaximumValue(), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfYear(int), org.joda.time.Partial$Property:get(), org.joda.time.base.AbstractPeriod:get(org.joda.time.DurationFieldType), org.joda.time.format.PeriodFormat:retrieveVariants(java.util.ResourceBundle), org.joda.time.format.ISODateTimeFormat:year(), org.joda.time.format.ISODateTimeFormat$Constants:access$400(), org.joda.time.chrono.BasicChronology:getDaysInMonthMax(long), org.joda.time.Partial:<init>(), org.joda.time.MutableDateTime:setDate(long), org.joda.time.format.PeriodFormat$DynamicWordBased:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getMillis(int-long), org.joda.time.Partial$Property:setCopy(int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(org.joda.time.Chronology-long), org.joda.time.chrono.GJYearOfEraDateTimeField:roundCeiling(long), org.joda.time.DateTime:<init>(long), org.joda.time.format.PeriodFormatterBuilder$Literal:<clinit>(), org.joda.time.base.AbstractDateTime:getDayOfWeek(), org.joda.time.chrono.EthiopicChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.MonthDay:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.DateTime:minusMinutes(int), org.joda.time.field.ZeroIsMaxDateTimeField:roundFloor(long), org.joda.time.Minutes:dividedBy(int), org.joda.time.field.MillisDurationField:add(long-long), org.joda.time.base.AbstractInterval:isBefore(org.joda.time.ReadableInstant), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.chrono.BaseChronology:halfdayOfDay(), org.joda.time.LocalDateTime:year(), org.joda.time.format.PeriodFormatterBuilder:toParser(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String), org.joda.time.field.DecoratedDateTimeField:getRangeDurationField(), org.joda.time.DateTimeZone$LazyInit:buildFormatter(), org.joda.time.format.DateTimeParserBucket:setZone(org.joda.time.DateTimeZone), org.joda.time.MutablePeriod:addHours(int), org.joda.time.MutableDateTime:setSecondOfMinute(int), org.joda.time.chrono.LimitChronology$LimitDurationField:getMillis(long-long), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.field.UnsupportedDurationField:compareTo(org.joda.time.DurationField), org.joda.time.LocalTime:toDateTimeToday(org.joda.time.DateTimeZone), org.joda.time.chrono.GJLocaleSymbols:getDayOfWeekMaxShortTextLength(), org.joda.time.PeriodType:withMillisRemoved(), org.joda.time.YearMonth:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.field.DelegatedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.chrono.ZonedChronology$ZonedDurationField:isPrecise(), org.joda.time.Days:toString(), org.joda.time.Days:days(int), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldValue(org.joda.time.ReadablePeriod), org.joda.time.DurationField:add(long-long), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMinimumValue(long), org.joda.time.MonthDay:<init>(int-int-org.joda.time.Chronology), org.joda.time.DateTime:withEarlierOffsetAtOverlap(), org.joda.time.chrono.BasicChronology:getApproxMillisAtEpochDividedByTwo(), org.joda.time.format.ISODateTimeFormat$Constants:yearMonthDay(), org.joda.time.format.DateTimeFormatter:withPivotYear(java.lang.Integer), org.joda.time.tz.Provider:getAvailableIDs(), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int), org.joda.time.LocalDateTime:plusWeeks(int), org.joda.time.field.BaseDurationField:getMillis(int), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.Weeks:minus(org.joda.time.Weeks), org.joda.time.DateTimeField:add(long-long), org.joda.time.field.OffsetDateTimeField:roundHalfFloor(long), org.joda.time.convert.DateConverter:<clinit>(), org.joda.time.YearMonth$Property:setCopy(int), org.joda.time.LocalTime$Property:withMaximumValue(), org.joda.time.convert.ConverterManager:getPeriodConverters(), org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial), org.joda.time.chrono.CopticChronology:dayOfMonth(), java.lang.StringBuffer:insert(int-java.lang.String), org.joda.time.MutableDateTime:weekyear(), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.StringBuffer-long), org.joda.time.DateMidnight:getZone(), org.joda.time.format.ISODateTimeFormat$Constants:access$300(), org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.field.UnsupportedDateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.MutableDateTime:hourOfDay(), org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(), org.joda.time.ReadableInstant:get(org.joda.time.DateTimeFieldType), org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser(), org.joda.time.format.ISODateTimeFormat$Constants:basicTTime(), org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(char-int-int-int-boolean-int), org.joda.time.chrono.BasicGJChronology:toString(), java.lang.Long:toString(long), org.joda.time.chrono.GJChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:<init>(int-int-int-boolean-int-org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix), org.joda.time.format.ISODateTimeFormat$Constants:dayOfMonthElement(), org.joda.time.Chronology:hourOfDay(), org.joda.time.tz.CachedDateTimeZone:getUncachedZone(), org.joda.time.tz.ZoneInfoProvider:readZoneInfoMap(java.io.DataInputStream-java.util.Map), org.joda.time.DateTimeField:getMinimumValue(long), java.util.List:add(java.lang.Object), org.joda.time.field.SkipUndoDateTimeField:set(long-int), org.joda.time.Period:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatterBuilder:appendHalfdayOfDayText(), org.joda.time.Seconds:readResolve(), java.util.regex.Pattern:matcher(java.lang.CharSequence), org.joda.time.Period:withSeconds(int), org.joda.time.format.ISODateTimeFormat$Constants:access$3300(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsText(int-java.util.Locale), org.joda.time.LocalDateTime$Property:setCopy(java.lang.String), java.util.List:iterator(), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getDifferenceAsLong(long-long), org.joda.time.base.AbstractInstant:toDateTime(), org.joda.time.base.AbstractPeriod:indexOf(org.joda.time.DurationFieldType), org.joda.time.field.BaseDateTimeField:getType(), org.joda.time.PeriodType:withHoursRemoved(), org.joda.time.field.UnsupportedDateTimeField:addWrapField(long-int), org.joda.time.LocalDate:<init>(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.field.UnsupportedDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField), java.io.DataOutputStream:flush(), org.joda.time.DurationField:getValue(long-long), org.joda.time.format.PeriodFormatterBuilder:appendField(int), org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.field.DividedDateTimeField:remainder(long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:hashCode(), org.joda.time.chrono.BasicYearDateTimeField:roundCeiling(long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(org.joda.time.Chronology-long), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTime$Property:roundFloorCopy(), org.joda.time.YearMonthDay$Property:getMaximumValue(), org.joda.time.Chronology:weekyearOfCentury(), org.joda.time.format.ISOPeriodFormat:<init>(), org.joda.time.field.UnsupportedDurationField:getMillis(int-long), org.joda.time.tz.ZoneInfoProvider:loadZoneInfoMap(java.io.InputStream), org.joda.time.field.AbstractPartialFieldProperty:getMinimumValue(), java.lang.Appendable:append(char), org.joda.time.chrono.BaseChronology:weeks(), org.joda.time.base.AbstractDateTime:getDayOfMonth(), org.joda.time.PeriodType:years(), org.joda.time.field.AbstractReadableInstantFieldProperty:compareTo(org.joda.time.ReadableInstant), org.joda.time.PeriodType:weeks(), org.joda.time.format.ISOPeriodFormat:alternateExtended(), org.joda.time.DateMidnight:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.ReadWritableInstant:setMillis(long), org.joda.time.tz.ZoneInfoProvider$1:run(), java.util.Set:contains(java.lang.Object), org.joda.time.LocalDateTime:<init>(org.joda.time.Chronology), org.joda.time.DateTime:withMonthOfYear(int), java.lang.Class:isAssignableFrom(java.lang.Class), org.joda.time.convert.ConverterSet:copyInto(org.joda.time.convert.Converter[]), org.joda.time.chrono.BaseChronology:get(org.joda.time.ReadablePartial-long), org.joda.time.LocalTime:<init>(int-int-int-int), org.joda.time.format.ISODateTimeFormat$Constants:access$200(), org.joda.time.base.BaseSingleFieldPeriod:isSupported(org.joda.time.DurationFieldType), org.joda.time.chrono.BasicWeekyearDateTimeField:getMinimumValue(), org.joda.time.Period:toStandardMinutes(), org.joda.time.Period:normalizedStandard(org.joda.time.PeriodType), org.joda.time.Partial$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.tz.NameProvider:getShortName(java.util.Locale-java.lang.String-java.lang.String), org.joda.time.format.DateTimePrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePartial-java.util.Locale), java.util.regex.Matcher:matches(), org.joda.time.chrono.BasicGJChronology:getYearMillis(int), org.joda.time.LocalTime:getSecondOfMinute(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:set(long-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:finish(java.util.Set), java.io.DataInput:readInt(), org.joda.time.Instant:plus(org.joda.time.ReadableDuration), org.joda.time.ReadWritablePeriod:setMonths(int), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePartial), org.joda.time.chrono.ISOYearOfEraDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.ScaledDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType-int), org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:estimateParsedLength(), java.lang.String:valueOf(java.lang.Object), org.joda.time.base.BasePeriod:toDurationTo(org.joda.time.ReadableInstant), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:writeZoneInfoMap(java.io.DataOutputStream-java.util.Map), org.joda.time.Interval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant), org.joda.time.MutableInterval:getEndMillis(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DurationFieldType-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.chrono.BasicWeekyearDateTimeField:add(long-int), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int), org.joda.time.format.InternalPrinter:estimatePrintedLength(), org.joda.time.format.DateTimeFormatter:printTo(java.io.Writer-org.joda.time.ReadablePartial), org.joda.time.convert.ReadablePartialConverter:<clinit>(), org.joda.time.chrono.JulianChronology:getMinimumDaysInFirstWeek(), org.joda.time.YearMonthDay$Property:getField(), java.lang.InternalError:<init>(java.lang.String), org.joda.time.field.ImpreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-long), org.joda.time.Period:<init>(long-org.joda.time.PeriodType), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.LocalDate:dayOfWeek(), org.joda.time.Minutes:multipliedBy(int), org.joda.time.TimeOfDay:minus(org.joda.time.ReadablePeriod), org.joda.time.format.DateTimeFormatterBuilder$TextField:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.GJYearOfEraDateTimeField:remainder(long), java.io.FileOutputStream:<init>(java.io.File), org.joda.time.ReadablePeriod:getValue(int), java.lang.InternalError:<init>(), org.joda.time.format.PeriodFormat:buildWordBased(java.util.Locale), org.joda.time.chrono.GJChronology:<init>(org.joda.time.Chronology-org.joda.time.chrono.JulianChronology-org.joda.time.chrono.GregorianChronology-org.joda.time.Instant), org.joda.time.Period:withWeeks(int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:toString(), org.joda.time.format.DateTimeFormatterBuilder:appendFraction(org.joda.time.DateTimeFieldType-int-int), org.joda.time.tz.DateTimeZoneBuilder:buildFixedZone(java.lang.String-java.lang.String-int-int), java.lang.Character:digit(char-int), org.joda.time.chrono.GJChronology:readResolve(), java.text.DateFormatSymbols:<init>(java.util.Locale), org.joda.time.field.AbstractReadableInstantFieldProperty:getAsText(java.util.Locale), org.joda.time.field.DelegatedDurationField:getValue(long), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getDifference(long-long), org.joda.time.chrono.GJLocaleSymbols:getEraMaxTextLength(), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:roundFloor(long), org.joda.time.field.AbstractReadableInstantFieldProperty:getMinimumValue(), org.joda.time.format.ISODateTimeFormat$Constants:access$3200(), org.joda.time.format.ISODateTimeFormat$Constants:access$1100(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-java.lang.String-boolean-int-int), org.joda.time.Partial:indexOf(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeComparator:toString(), org.joda.time.field.DelegatedDateTimeField:getLeapDurationField(), org.joda.time.chrono.JulianChronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[]), org.joda.time.MonthDay:getValue(int), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial), org.joda.time.field.BaseDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Minutes:minutes(int), org.joda.time.tz.Provider:getZone(java.lang.String), org.joda.time.LocalDateTime:minusWeeks(int), org.joda.time.Interval:toDurationMillis(), java.util.Map:entrySet(), org.joda.time.chrono.GJCacheKey:equals(java.lang.Object), org.joda.time.field.DelegatedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.format.DateTimeFormat:mediumTime(), org.joda.time.chrono.StrictChronology:withUTC(), org.joda.time.MutableDateTime:addMinutes(int), org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.DateTime:withDurationAdded(org.joda.time.ReadableDuration-int), org.joda.time.ReadablePartial:getValue(int), org.joda.time.LocalDateTime:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.DateTime:toDateTime(org.joda.time.DateTimeZone), org.joda.time.Period:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.PeriodType), org.joda.time.chrono.CopticChronology:isLeapYear(int), org.joda.time.convert.StringConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology), org.joda.time.LocalDateTime:fromCalendarFields(java.util.Calendar), org.joda.time.Chronology:minutes(), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object), org.joda.time.field.UnsupportedDurationField:compareTo(java.lang.Object), org.joda.time.field.UnsupportedDurationField:getDifferenceAsLong(long-long), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(long-int-int), org.joda.time.field.PreciseDurationDateTimeField:roundCeiling(long), org.joda.time.Period:negated(), org.joda.time.tz.ZoneInfoCompiler$Rule:<init>(java.util.StringTokenizer), org.joda.time.field.BaseDateTimeField:getMaximumValue(), org.joda.time.field.DecoratedDateTimeField:getMinimumValue(), org.joda.time.field.AbstractPartialFieldProperty:getAsText(), org.joda.time.MutableDateTime:monthOfYear(), org.joda.time.MonthDay:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.field.DecoratedDurationField:getValueAsLong(long-long), org.joda.time.convert.ReadablePartialConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:writeTo(java.io.DataOutput), org.joda.time.format.DateTimeFormat:forStyle(java.lang.String), org.joda.time.field.BaseDateTimeField:addWrapField(long-int), org.joda.time.LocalTime:<init>(java.lang.Object), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.chrono.BasicYearDateTimeField:roundFloor(long), org.joda.time.ReadablePeriod:size(), org.joda.time.TimeOfDay:withMinuteOfHour(int), org.joda.time.chrono.BasicFixedMonthChronology:hashCode(), org.joda.time.DateMidnight:<init>(int-int-int-org.joda.time.DateTimeZone), org.joda.time.Months:negated(), org.joda.time.chrono.BuddhistChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:toString(), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant), java.lang.StringBuilder:setCharAt(int-char), java.lang.Object:toString(), org.joda.time.PeriodType:indexOf(org.joda.time.DurationFieldType), org.joda.time.tz.ZoneInfoCompiler:<init>(), org.joda.time.LocalDate:<init>(long), org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.LocalTime:equals(java.lang.Object), org.joda.time.DateMidnight:<init>(org.joda.time.Chronology), org.joda.time.chrono.CopticChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.DateTime:withYear(int), java.util.ArrayList:remove(int), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Duration:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey:equals(java.lang.Object), org.joda.time.base.AbstractInterval:isAfter(org.joda.time.ReadableInterval), java.lang.Integer:toString(int), org.joda.time.DateTimeField:getAsShortText(int-java.util.Locale), org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isZero(org.joda.time.ReadablePeriod), org.joda.time.ReadablePartial:size(), org.joda.time.Period:minusSeconds(int), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField), org.joda.time.chrono.JulianChronology:getDateTimeMillis(int-int-int-int-int-int-int), java.lang.IllegalArgumentException:<init>(), org.joda.time.convert.StringConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket:setOffset(java.lang.Integer), org.joda.time.MutablePeriod:getMinutes(), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int), org.joda.time.DateMidnight$Property:readObject(java.io.ObjectInputStream), org.joda.time.tz.DateTimeZoneBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneName(java.util.Map), org.joda.time.Weeks:toString(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:roundFloor(long), org.joda.time.YearMonth:toInterval(org.joda.time.DateTimeZone), org.joda.time.DateTime:withLaterOffsetAtOverlap(), org.joda.time.tz.ZoneInfoCompiler$RuleSet:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-int-java.lang.String), org.joda.time.tz.DefaultNameProvider:getName(java.util.Locale-java.lang.String-java.lang.String), org.joda.time.format.ISODateTimeFormat:timeElementParser(), org.joda.time.LocalDateTime:withWeekyear(int), org.joda.time.DateTimeFieldType:access$1800(), org.joda.time.LocalDate:fromDateFields(java.util.Date), org.joda.time.format.DateTimeFormat$StyleFormatter:getPattern(java.util.Locale), org.joda.time.chrono.IslamicChronology:getYear(long), org.joda.time.TimeOfDay$Property:withMinimumValue(), java.lang.System:currentTimeMillis(), org.joda.time.field.DelegatedDateTimeField:getAsText(int-java.util.Locale), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.chrono.JulianChronology:hashCode(), org.joda.time.TimeOfDay:indexOf(org.joda.time.DurationFieldType), org.joda.time.YearMonth:property(org.joda.time.DateTimeFieldType), java.util.HashMap:put(java.lang.Object-java.lang.Object), org.joda.time.DateMidnight:<init>(long-org.joda.time.Chronology), java.lang.StringBuffer:<init>(int), org.joda.time.field.ZeroIsMaxDateTimeField:addWrapField(long-int), org.joda.time.field.MillisDurationField:getUnitMillis(), org.joda.time.chrono.GregorianChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.Period:minusMinutes(int), org.joda.time.Hours:hoursBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.Partial:getChronology(), org.joda.time.TimeOfDay:plusHours(int), org.joda.time.tz.DateTimeZoneBuilder:writeTo(java.lang.String-java.io.OutputStream), java.lang.Object:<init>(), org.joda.time.field.RemainderDateTimeField:roundCeiling(long), org.joda.time.Period:plusHours(int), org.joda.time.LocalDateTime:toString(), org.joda.time.chrono.GJChronology$CutoverField:getDifference(long-long), org.joda.time.Seconds:toStandardMinutes(), org.joda.time.DateMidnight:plus(org.joda.time.ReadableDuration), java.io.DataOutput:writeUTF(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.DateMidnight:withMonthOfYear(int), org.joda.time.field.LenientDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.Chronology), org.joda.time.chrono.BasicYearDateTimeField:getMaximumValue(), org.joda.time.tz.FixedDateTimeZone:hashCode(), org.joda.time.LocalDate:toString(java.lang.String), org.joda.time.format.ISODateTimeFormat:checkNotStrictISO(java.util.Collection-boolean), org.joda.time.format.ISODateTimeFormat:ordinalDateTimeNoMillis(), java.io.DataInput:readUnsignedByte(), org.joda.time.YearMonthDay:getFieldTypes(), org.joda.time.base.AbstractInstant:isEqual(long), org.joda.time.format.PeriodFormatterBuilder:createComposite(java.util.List), org.joda.time.field.OffsetDateTimeField:roundHalfCeiling(long), org.joda.time.YearMonthDay:<init>(int-int-int), org.joda.time.DateMidnight:<init>(long), org.joda.time.chrono.GJEraDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.PeriodType:yearMonthDay(), org.joda.time.format.DateTimeFormatter:withDefaultYear(int), org.joda.time.Days:plus(int), org.joda.time.DateTime$Property:roundHalfEvenCopy(), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMaximumValue(long), org.joda.time.chrono.GJDayOfWeekDateTimeField:readResolve(), org.joda.time.DateTime$Property:readObject(java.io.ObjectInputStream), org.joda.time.chrono.AssembledChronology:getDateTimeMillis(int-int-int-int), org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.YearMonth:year(), org.joda.time.TimeOfDay:fromMillisOfDay(long-org.joda.time.Chronology), org.joda.time.Period:plusMinutes(int), org.joda.time.Period:withHours(int), org.joda.time.MutableInterval:setDurationBeforeEnd(org.joda.time.ReadableDuration), org.joda.time.chrono.JulianChronology:halfdayOfDay(), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial), java.lang.String:startsWith(java.lang.String), org.joda.time.tz.ZoneInfoProvider:access$000(org.joda.time.tz.ZoneInfoProvider), org.joda.time.DateTimeFieldType:hourOfHalfday(), org.joda.time.LocalTime:plusSeconds(int), org.joda.time.LocalTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), org.joda.time.convert.ReadableDurationConverter:getDurationMillis(java.lang.Object), org.joda.time.DurationField:getMillis(int-long), org.joda.time.LocalDateTime:withCenturyOfEra(int), org.joda.time.base.BaseDuration:toPeriodFrom(org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.field.AbstractReadableInstantFieldProperty:toString(), org.joda.time.Period:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType), org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.Duration:withDurationAdded(long-int), org.joda.time.Months:dividedBy(int), org.joda.time.chrono.BaseChronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.MutableDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone), java.text.DateFormatSymbols:getShortMonths(), org.joda.time.TimeOfDay$Property:setCopy(int), org.joda.time.DurationFieldType:seconds(), org.joda.time.MutablePeriod:<init>(long-long), java.util.Date:<init>(long), org.joda.time.DateTimeComparator:<clinit>(), org.joda.time.chrono.BasicYearDateTimeField:getLeapAmount(long), org.joda.time.TimeOfDay:minusHours(int), java.io.DataOutputStream:writeUTF(java.lang.String), org.joda.time.chrono.GJChronology$LinkedDurationField:getDifferenceAsLong(long-long), org.joda.time.Minutes:isGreaterThan(org.joda.time.Minutes), org.joda.time.base.AbstractDateTime:getYear(), org.joda.time.chrono.IslamicChronology:getMonthOfYear(long-int), org.joda.time.TimeOfDay$Property:get(), org.joda.time.DateTime$Property:writeObject(java.io.ObjectOutputStream), org.joda.time.field.FieldUtils:safeSubtract(long-long), org.joda.time.DurationField:getValue(long), org.joda.time.base.AbstractPartial:getValues(), org.joda.time.field.AbstractReadableInstantFieldProperty:getChronology(), org.joda.time.base.AbstractInstant:isBeforeNow(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:addRule(org.joda.time.tz.DateTimeZoneBuilder$Rule), org.joda.time.Months:toString(), org.joda.time.base.AbstractDateTime:getMillisOfSecond(), org.joda.time.MutablePeriod:size(), java.lang.Short:shortValue(), org.joda.time.chrono.CopticChronology:toString(), org.joda.time.chrono.BasicGJChronology:monthOfYear(), org.joda.time.field.DelegatedDurationField:getMillis(long-long), org.joda.time.Seconds:seconds(int), org.joda.time.format.ISODateTimeFormat$Constants:dateTimeNoMillis(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:get(long), org.joda.time.chrono.GJYearOfEraDateTimeField:getDifference(long-long), org.joda.time.DateTime:withFields(org.joda.time.ReadablePartial), org.joda.time.format.DateTimeFormat:<clinit>(), java.lang.StringBuffer:append(java.lang.Object), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$Composite:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.chrono.IslamicChronology:isLeapYear(int), org.joda.time.MutablePeriod:clone(), org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField), int[]:clone(), org.joda.time.DateTimeFieldType:access$800(), org.joda.time.DateTime:plusMonths(int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.base.BasePartial:getValues(), org.joda.time.format.PeriodFormatterBuilder:toFormatter(), org.joda.time.chrono.BasicWeekyearDateTimeField:add(long-long), org.joda.time.field.RemainderDateTimeField:roundHalfCeiling(long), org.joda.time.LocalDateTime:plus(org.joda.time.ReadableDuration), org.joda.time.convert.ReadableIntervalConverter:getDurationMillis(java.lang.Object), org.joda.time.convert.ConverterManager:checkAlterIntervalConverters(), org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration), org.joda.time.base.AbstractInterval:isBefore(long), org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundHalfCeiling(long), org.joda.time.field.DelegatedDurationField:<init>(org.joda.time.DurationField), org.joda.time.MonthDay:<clinit>(), org.joda.time.field.UnsupportedDateTimeField:unsupported(), org.joda.time.field.StrictDateTimeField:<init>(org.joda.time.DateTimeField), org.joda.time.chrono.GJChronology$CutoverField:add(long-long), org.joda.time.chrono.BuddhistChronology:toString(), org.joda.time.MonthDay:<init>(org.joda.time.DateTimeZone), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder:canBuildParser(), java.util.GregorianCalendar:getGregorianChange(), org.joda.time.chrono.BasicChronology:getYearMillis(int), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone), org.joda.time.base.BaseDuration:toPeriodTo(org.joda.time.ReadableInstant), org.joda.time.Hours:hoursBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.format.PeriodFormatterBuilder$Composite:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.LocalDateTime:getYearOfCentury(), org.joda.time.DateTime:centuryOfEra(), org.joda.time.DateTimeZone:getShortName(long), org.joda.time.TimeOfDay:getMinuteOfHour(), java.lang.Character:toUpperCase(char), java.util.ResourceBundle:getKeys(), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.base.BaseLocal:compareTo(org.joda.time.ReadablePartial), org.joda.time.chrono.GJYearOfEraDateTimeField:readResolve(), org.joda.time.field.ZeroIsMaxDateTimeField:set(long-int), org.joda.time.format.DateTimeFormatter:getPrinter0(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.format.ISODateTimeFormat$Constants:access$1900(), org.joda.time.chrono.BasicDayOfYearDateTimeField:getRangeDurationField(), org.joda.time.chrono.StrictChronology:getZone(), org.joda.time.MutablePeriod:setMinutes(int), org.joda.time.DateTimeField:getLeapDurationField(), org.joda.time.LocalDateTime:withMonthOfYear(int), org.joda.time.DateTimeFieldType:access$1400(), org.joda.time.field.FieldUtils:safeMultiply(long-long), org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue(long), org.joda.time.DateTimeFieldType:getDurationType(), org.joda.time.convert.ReadableDurationConverter:<clinit>(), java.util.ArrayList:toArray(java.lang.Object[]), org.joda.time.DateMidnight:weekyear(), org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(long), org.joda.time.Interval:overlaps(org.joda.time.ReadableInterval), org.joda.time.field.PreciseDateTimeField:getMaximumValue(), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDateTime(), org.joda.time.YearMonthDay:toDateTimeAtMidnight(org.joda.time.DateTimeZone), org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsBefore(java.lang.String), org.joda.time.format.DateTimeFormat$StyleFormatter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.Hours:toString(), org.joda.time.chrono.GJChronology:convertByYear(long-org.joda.time.Chronology-org.joda.time.Chronology), org.joda.time.chrono.BasicGJChronology:getDateMidnightMillis(int-int-int), org.joda.time.base.BaseDuration:toPeriodFrom(org.joda.time.ReadableInstant), org.joda.time.field.BaseDateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.Period:minusWeeks(int), org.joda.time.tz.DateTimeZoneBuilder:addTransition(java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$Transition), org.joda.time.chrono.JulianChronology:clockhourOfDay(), org.joda.time.convert.StringConverter:getPeriodType(java.lang.Object), org.joda.time.format.DateTimeFormatter:withOffsetParsed(), org.joda.time.chrono.JulianChronology:toString(), org.joda.time.chrono.BasicFixedMonthChronology:getZone(), java.lang.StringBuilder:toString(), org.joda.time.YearMonth:readResolve(), org.joda.time.format.ISODateTimeFormat:dateElementParser(), org.joda.time.format.ISODateTimeFormat$Constants:localDateOptionalTimeParser(), org.joda.time.base.AbstractInterval:checkInterval(long-long), org.joda.time.field.DecoratedDurationField:add(long-int), org.joda.time.TimeOfDay:getSecondOfMinute(), org.joda.time.field.BaseDateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.field.DelegatedDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.DelegatedDateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.LocalDate:<init>(int-int-int-org.joda.time.Chronology), org.joda.time.Seconds:toStandardDuration(), org.joda.time.field.DelegatedDateTimeField:roundHalfEven(long), org.joda.time.convert.DurationConverter:getDurationMillis(java.lang.Object), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:<init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix), org.joda.time.base.AbstractDateTime:getSecondOfMinute(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), java.util.ArrayList:add(java.lang.Object), org.joda.time.field.RemainderDateTimeField:getDivided(int), org.joda.time.LocalTime:minuteOfHour(), org.joda.time.TimeOfDay$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.tz.ZoneInfoProvider:loadZoneData(java.lang.String), org.joda.time.MutableDateTime:getZone(), org.joda.time.field.UnsupportedDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.chrono.GJChronology$LinkedDurationField:add(long-int), org.joda.time.base.BaseDuration:toIntervalFrom(org.joda.time.ReadableInstant), org.joda.time.format.DateTimeFormatter:getZone(), org.joda.time.field.UnsupportedDurationField:getMillis(long), org.joda.time.field.ScaledDurationField:getUnitMillis(), java.lang.Throwable:getCause(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneShortName(java.util.Map), org.joda.time.LocalDate:toString(), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfDay(int-int), org.joda.time.LocalDate$Property:setCopy(int), org.joda.time.UTCDateTimeZone:hashCode(), org.joda.time.chrono.BasicWeekyearDateTimeField:isLeap(long), org.joda.time.chrono.BasicYearDateTimeField:getMinimumValue(), org.joda.time.base.AbstractInstant:<init>(), org.joda.time.chrono.GJDayOfWeekDateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.LocalDate:property(org.joda.time.DateTimeFieldType), org.joda.time.tz.CachedDateTimeZone:getStandardOffset(long), org.joda.time.LocalTime:<clinit>(), org.joda.time.Period:withMinutes(int), org.joda.time.base.AbstractDateTime:getMillisOfDay(), org.joda.time.Chronology:get(org.joda.time.ReadablePartial-long), org.joda.time.chrono.BasicMonthOfYearDateTimeField:isLeap(long), org.joda.time.field.AbstractPartialFieldProperty:getDurationField(), org.joda.time.Partial$Property:setCopy(java.lang.String), org.joda.time.TimeOfDay:getMillisOfSecond(), org.joda.time.tz.ZoneInfoCompiler$RuleSet:<init>(org.joda.time.tz.ZoneInfoCompiler$Rule), org.joda.time.tz.ZoneInfoCompiler:printUsage(), org.joda.time.field.FieldUtils:verifyValueBounds(java.lang.String-int-int-int), java.lang.ThreadLocal:get(), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:estimatePrintedLength(), org.joda.time.field.ScaledDurationField:equals(java.lang.Object), org.joda.time.LocalTime$Property:addCopy(int), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder$FixedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.chrono.BasicYearDateTimeField:remainder(long), org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.BasicChronology:weeks(), org.joda.time.YearMonth$Property:getField(), org.joda.time.LocalDateTime:withTime(int-int-int-int), org.joda.time.chrono.IslamicChronology:getDayOfYear(long-int), org.joda.time.convert.ConverterSet:remove(int-org.joda.time.convert.Converter[]), org.joda.time.Weeks:multipliedBy(int), org.joda.time.field.DelegatedDateTimeField:toString(), org.joda.time.chrono.BaseChronology:secondOfDay(), org.joda.time.format.ISOPeriodFormat:alternateWithWeeks(), org.joda.time.convert.AbstractConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:printTo(java.io.Writer-int), org.joda.time.ReadableDuration:getMillis(), org.joda.time.chrono.StrictChronology:toString(), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int), java.lang.ref.SoftReference:<init>(java.lang.Object), org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.io.Writer-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.chrono.BasicChronology:getMaxYear(), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeField-int), org.joda.time.LocalDate:weekyear(), java.util.ArrayList:<init>(int), java.math.BigDecimal:<init>(long), org.joda.time.MutablePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.field.UnsupportedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.AbstractPartialFieldProperty:getAsShortText(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:matchesOtherAffix(int-java.lang.String-int), org.joda.time.DateTime:toYearMonthDay(), org.joda.time.DateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setInstant(int-int-int), org.joda.time.DurationField:subtract(long-int), org.joda.time.TimeOfDay:<clinit>(), org.joda.time.DateTime:hashCode(), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getValue(long-long), org.joda.time.format.ISODateTimeFormat$Constants:access$4500(), org.joda.time.base.BaseDuration:toPeriod(org.joda.time.Chronology), org.joda.time.chrono.BaseChronology:millisOfDay(), org.joda.time.chrono.BuddhistChronology:equals(java.lang.Object), org.joda.time.MutableDateTime:setMonthOfYear(int), org.joda.time.YearMonth:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.format.ISODateTimeFormat$Constants:access$2600(), org.joda.time.format.ISODateTimeFormat:dateHour(), org.joda.time.chrono.CopticChronology:<clinit>(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology), org.joda.time.Period:minusHours(int), org.joda.time.chrono.GregorianChronology:hashCode(), org.joda.time.chrono.ISOChronology$Stub:readObject(java.io.ObjectInputStream), org.joda.time.format.PeriodFormat:wordBased(java.util.Locale), org.joda.time.DurationFieldType:halfdays(), org.joda.time.format.ISODateTimeFormat:time(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean-boolean-boolean), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField), org.joda.time.format.DateTimePrinterInternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.LocalDateTime:withYear(int), java.util.List:isEmpty(), org.joda.time.field.BaseDateTimeField:getMinimumValue(long), org.joda.time.DateTime:withMinuteOfHour(int), org.joda.time.field.DecoratedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType), java.lang.String:concat(java.lang.String), org.joda.time.Interval:withEnd(org.joda.time.ReadableInstant), org.joda.time.base.BaseDateTime:<init>(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getEra(), org.joda.time.field.OffsetDateTimeField:getLeapAmount(long), org.joda.time.Period:minus(org.joda.time.ReadablePeriod), java.util.Date:getMinutes(), java.lang.StringBuilder:<init>(), org.joda.time.YearMonth:<init>(org.joda.time.DateTimeZone), org.joda.time.field.BaseDateTimeField:roundCeiling(long), org.joda.time.chrono.BasicSingleEraDateTimeField:getDurationField(), org.joda.time.DateTimeUtils:isContiguous(org.joda.time.ReadablePartial), org.joda.time.format.DateTimeFormatter:parseLocalDateTime(java.lang.String), org.joda.time.chrono.BasicWeekyearDateTimeField:getDifferenceAsLong(long-long), org.joda.time.YearMonth:minus(org.joda.time.ReadablePeriod), org.joda.time.PeriodType:yearWeekDay(), org.joda.time.LocalDateTime:readResolve(), org.joda.time.MutableInterval:setDurationAfterStart(org.joda.time.ReadableDuration), org.joda.time.Period:<init>(long-long-org.joda.time.PeriodType), org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType-int-org.joda.time.Chronology), java.text.DateFormatSymbols:getAmPmStrings(), org.joda.time.chrono.BuddhistChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.chrono.BasicFixedMonthChronology:toString(), org.joda.time.LocalTime:getHourOfDay(), java.util.HashMap:<init>(java.util.Map), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-java.lang.String-int-int-int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:print(long-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.IslamicChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:scan(java.lang.String-int), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType), java.util.ArrayList:get(int), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.base.AbstractDateTime:getYearOfEra(), org.joda.time.chrono.GregorianChronology:calculateFirstDayOfYearMillis(int), org.joda.time.chrono.GJChronology$CutoverField:getAsShortText(long-java.util.Locale), org.joda.time.chrono.BasicGJChronology:getDaysInMonthMax(long), org.joda.time.chrono.GJYearOfEraDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.chrono.BasicChronology), org.joda.time.format.ISODateTimeFormat$Constants:access$1000(), org.joda.time.DateMidnight$Property:withMinimumValue(), org.joda.time.base.AbstractInterval:contains(org.joda.time.ReadableInterval), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-int), org.joda.time.MutableDateTime:dayOfYear(), org.joda.time.chrono.LenientChronology:getZone(), org.joda.time.LocalDateTime:withEra(int), org.joda.time.format.DateTimeFormatter:parseLocalTime(java.lang.String), java.text.DateFormatSymbols:getZoneStrings(), org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType[]-int[]-org.joda.time.Chronology), org.joda.time.chrono.BasicChronology:hashCode(), org.joda.time.chrono.GJChronology:getInstanceUTC(), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[]:clone(), org.joda.time.DateTimeZone:getOffsetFromLocal(long), org.joda.time.DateMidnight:withDayOfWeek(int), java.lang.StringBuffer:insert(int-char), org.joda.time.chrono.EthiopicChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.base.AbstractInterval:isBefore(org.joda.time.ReadableInterval), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.Days:plus(org.joda.time.Days), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.Instant:toDateTime(), org.joda.time.chrono.GJEraDateTimeField:getDurationField(), org.joda.time.chrono.AssembledChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.LocalTime:get(org.joda.time.DateTimeFieldType), org.joda.time.Years:yearsBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.format.PeriodFormat$DynamicWordBased:getPrinter(java.util.Locale), org.joda.time.DateMidnight$Property:setCopy(int), org.joda.time.LocalTime:fromMillisOfDay(long), org.joda.time.DateTime:weekyear(), java.util.Collections:unmodifiableSortedSet(java.util.SortedSet), org.joda.time.Period:plusSeconds(int), org.joda.time.LocalTime:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.Minutes:toStandardSeconds(), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateMidnight:now(org.joda.time.Chronology), org.joda.time.chrono.GJChronology$LinkedDurationField:<init>(org.joda.time.DurationField-org.joda.time.chrono.GJChronology$ImpreciseCutoverField), org.joda.time.chrono.GregorianChronology:getBase(), org.joda.time.field.ZeroIsMaxDateTimeField:remainder(long), org.joda.time.chrono.BaseChronology:validate(org.joda.time.ReadablePartial-int[]), org.joda.time.format.ISODateTimeFormat$Constants:access$4800(), org.joda.time.Duration:getMillis(), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:calculatePrintedLength(int), org.joda.time.chrono.BaseChronology:dayOfWeek(), org.joda.time.Duration:minus(org.joda.time.ReadableDuration), org.joda.time.MutableInterval:getChronology(), org.joda.time.chrono.BasicChronology:access$100(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-long-int), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean), org.joda.time.field.UnsupportedDurationField:getName(), org.joda.time.LocalTime$Property:getMaximumValue(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(long), org.joda.time.tz.DateTimeZoneBuilder$Rule:<init>(org.joda.time.tz.DateTimeZoneBuilder$Recurrence-int-int), org.joda.time.LocalDateTime:minus(org.joda.time.ReadablePeriod), org.joda.time.YearMonthDay$Property:setCopy(int), org.joda.time.ReadableDateTime:toDateTime(), org.joda.time.Hours:dividedBy(int), java.lang.Long:valueOf(long), org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.chrono.ZonedChronology:getBase(), java.lang.Math:abs(long), org.joda.time.LocalDateTime$Property:roundCeilingCopy(), org.joda.time.base.BaseInterval:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.LocalDateTime$Property:readObject(java.io.ObjectInputStream), org.joda.time.IllegalFieldValueException:prependMessage(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getStandardOffset(long), org.joda.time.LocalTime:withFields(org.joda.time.ReadablePartial), org.joda.time.Days:daysBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.DateTime:minusSeconds(int), java.util.TimeZone:getTimeZone(java.lang.String), org.joda.time.MutableDateTime:year(), org.joda.time.LocalTime:fromMillisOfDay(long-org.joda.time.Chronology), java.util.Set:iterator(), org.joda.time.DateTimeComparator:getUpperLimit(), org.joda.time.DateTimeFieldType:yearOfEra(), org.joda.time.chrono.BasicChronology:getMinYear(), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix), org.joda.time.chrono.ZonedChronology$ZonedDurationField:hashCode(), org.joda.time.tz.CachedDateTimeZone$Info:getStandardOffset(long), org.joda.time.chrono.BasicChronology:getDateMidnightMillis(int-int-int), org.joda.time.MutablePeriod:setValues(int[]), org.joda.time.tz.ZoneInfoCompiler:writeZone(java.io.File-org.joda.time.tz.DateTimeZoneBuilder-org.joda.time.DateTimeZone), org.joda.time.Partial:plus(org.joda.time.ReadablePeriod), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.YearMonthDay$Property:setCopy(java.lang.String), org.joda.time.LocalDateTime:weekyear(), org.joda.time.base.AbstractInstant:isAfterNow(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.field.ZeroIsMaxDateTimeField:roundCeiling(long), org.joda.time.format.PeriodFormatterBuilder$Separator:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), org.joda.time.chrono.BasicChronology:getDaysInYear(int), org.joda.time.Chronology:weekyears(), org.joda.time.chrono.AssembledChronology:getZone(), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDate(), org.joda.time.DateTimeZone:getID(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:<init>(java.lang.String-java.lang.String), org.joda.time.base.AbstractPeriod:getValues(), org.joda.time.chrono.BaseChronology:minuteOfHour(), org.joda.time.LocalDateTime:toDate(), java.util.ResourceBundle:getBundle(java.lang.String-java.util.Locale), org.joda.time.tz.ZoneInfoCompiler:test(java.lang.String-org.joda.time.DateTimeZone), org.joda.time.base.BaseSingleFieldPeriod:<init>(int), org.joda.time.tz.CachedDateTimeZone:previousTransition(long), org.joda.time.Chronology:months(), org.joda.time.MutableInterval:setInterval(org.joda.time.ReadableInterval), org.joda.time.base.AbstractInterval:contains(long), org.joda.time.Partial:minus(org.joda.time.ReadablePeriod), java.lang.StringBuilder:append(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(java.lang.String-int-org.joda.time.tz.DateTimeZoneBuilder$Recurrence-org.joda.time.tz.DateTimeZoneBuilder$Recurrence), org.joda.time.format.ISODateTimeFormat$Constants:access$4700(), org.joda.time.field.DelegatedDurationField:add(long-int), org.joda.time.field.PreciseDateTimeField:addWrapField(long-int), org.joda.time.DateTimeFieldType:access$000(), org.joda.time.field.AbstractReadableInstantFieldProperty:getRangeDurationField(), org.joda.time.field.UnsupportedDateTimeField:getAsShortText(int-java.util.Locale), java.util.Calendar:getTimeInMillis(), org.joda.time.field.SkipDateTimeField:get(long), org.joda.time.chrono.BasicSingleEraDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object), org.joda.time.chrono.LenientChronology:getBase(), org.joda.time.LocalTime$Property:roundCeilingCopy(), org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(long), org.joda.time.chrono.BaseChronology:get(org.joda.time.ReadablePeriod-long-long), org.joda.time.field.BaseDateTimeField:getAsText(long-java.util.Locale), org.joda.time.format.ISODateTimeFormat$Constants:dayOfYearElement(), org.joda.time.MutableDateTime:setDateTime(int-int-int-int-int-int-int), org.joda.time.chrono.ISOChronology:hashCode(), org.joda.time.field.SkipUndoDateTimeField:get(long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.YearMonth:withYear(int), org.joda.time.base.BasePeriod:addPeriodInto(int[]-org.joda.time.ReadablePeriod), org.joda.time.field.DelegatedDateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.chrono.IslamicChronology:toString(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:getLocale(), org.joda.time.chrono.ZonedChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.field.DividedDateTimeField:add(long-int), org.joda.time.ReadableDateTime:getChronology(), org.joda.time.Months:multipliedBy(int), org.joda.time.YearMonthDay:<init>(long), org.joda.time.format.DateTimeFormatter:print(long), org.joda.time.chrono.ISOChronology$Stub:readResolve(), org.joda.time.chrono.ZonedChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.base.AbstractInstant:get(org.joda.time.DateTimeFieldType), org.joda.time.field.LenientDateTimeField:getType(), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int), org.joda.time.field.DelegatedDurationField:isSupported(), org.joda.time.Minutes:minutesBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.MutablePeriod:getDays(), org.joda.time.convert.ReadableIntervalConverter:<init>(), org.joda.time.DateTimeField:getType(), org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.TimeOfDay:fromMillisOfDay(long), org.joda.time.format.DateTimeFormatterBuilder:isFormatter(java.lang.Object), org.joda.time.MonthDay:<init>(int-int), org.joda.time.MutablePeriod:<init>(long-long-org.joda.time.Chronology), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:nextTransition(long-int), org.joda.time.format.DateTimeFormatter:printTo(java.io.Writer-org.joda.time.ReadableInstant), org.joda.time.chrono.BasicChronology$HalfdayField:getAsText(int-java.util.Locale), org.joda.time.field.AbstractReadableInstantFieldProperty:getLeapAmount(), org.joda.time.TimeOfDay:getHourOfDay(), java.util.Arrays:asList(java.lang.Object[]), org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.Period:days(int), org.joda.time.chrono.GregorianChronology:getDateTimeMillis(int-int-int-int), org.joda.time.field.BaseDateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale), org.joda.time.DateTime:minusMonths(int), org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.LocalDate$Property:setCopy(java.lang.String), org.joda.time.LocalDateTime$Property:getChronology(), org.joda.time.field.BaseDurationField:getMillis(long), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneId(), org.joda.time.chrono.BasicFixedMonthChronology:getYearMillis(int), org.joda.time.DateMidnight$Property:roundHalfEvenCopy(), org.joda.time.base.BaseDateTime:toDateTime(org.joda.time.Chronology), org.joda.time.chrono.ISOChronology:<clinit>(), org.joda.time.ReadWritablePeriod:setValue(int-int), org.joda.time.chrono.BasicGJChronology:getYearDifference(long-long), java.lang.Integer:parseInt(java.lang.String), org.joda.time.convert.DateConverter:<init>(), org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.MutablePeriod:parse(java.lang.String-org.joda.time.format.PeriodFormatter), org.joda.time.tz.ZoneInfoCompiler$Zone:chain(java.util.StringTokenizer), org.joda.time.field.OffsetDateTimeField:roundFloor(long), org.joda.time.MutableDateTime:<init>(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:<init>(char), org.joda.time.field.BaseDateTimeField:toString(), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-long-int), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.LocalDateTime:dayOfYear(), org.joda.time.DateTime:millisOfSecond(), org.joda.time.LocalDateTime:minuteOfHour(), org.joda.time.LocalDate$Property:writeObject(java.io.ObjectOutputStream), org.joda.time.tz.DateTimeZoneBuilder:addCutover(int-char-int-int-int-boolean-int), org.joda.time.MutableDateTime:secondOfDay(), org.joda.time.chrono.BasicChronology:<clinit>(), org.joda.time.Days:daysIn(org.joda.time.ReadableInterval), org.joda.time.format.ISODateTimeFormat$Constants:weekyearWeek(), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:calculatePrintedLength(int), org.joda.time.field.AbstractPartialFieldProperty:compareTo(org.joda.time.ReadablePartial), org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String-java.lang.ClassLoader), org.joda.time.LocalTime:minusHours(int), org.joda.time.LocalDateTime:minusSeconds(int), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology), org.joda.time.UTCDateTimeZone:<init>(), java.lang.Math:floor(double), java.util.Set:size(), org.joda.time.LocalDateTime:withLocalMillis(long), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser), java.util.Collection:retainAll(java.util.Collection), java.lang.StringBuilder:append(long), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int), org.joda.time.DurationFieldType:toString(), java.io.DataOutputStream:<init>(java.io.OutputStream), org.joda.time.DurationFieldType:<init>(java.lang.String), org.joda.time.Weeks:parseWeeks(java.lang.String), org.joda.time.field.LenientDateTimeField:getWrappedField(), org.joda.time.YearMonthDay$Property:get(), java.io.Writer:write(java.lang.String), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuilder-org.joda.time.ReadablePartial), org.joda.time.field.ScaledDurationField:getValue(long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.format.InternalParserDateTimeParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.String-int), java.lang.Integer:intValue(), org.joda.time.chrono.GJEraDateTimeField:readResolve(), org.joda.time.Interval:<init>(java.lang.Object), org.joda.time.chrono.IslamicChronology:getDaysInYear(int), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean), java.lang.Integer:valueOf(int), org.joda.time.chrono.LenientChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket$SavedField:compareTo(org.joda.time.format.DateTimeParserBucket$SavedField), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-org.joda.time.Chronology), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:hashCode(), org.joda.time.field.DelegatedDateTimeField:add(long-int), org.joda.time.format.DateTimeParserBucket$SavedField[]:clone(), org.joda.time.MutableDateTime:parse(java.lang.String), org.joda.time.DurationFieldType:years(), org.joda.time.DateTime:plusMillis(int), org.joda.time.base.AbstractInterval:toMutableInterval(), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-int), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:parse(java.lang.String-int), org.joda.time.LocalDateTime$Property:roundHalfEvenCopy(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String), org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String-java.lang.ClassLoader-boolean), org.joda.time.base.BaseDuration:<init>(long-long), org.joda.time.field.DelegatedDateTimeField:roundHalfCeiling(long), org.joda.time.field.PreciseDurationDateTimeField:get(long), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getDifference(long-long), org.joda.time.MutableDateTime$Property:add(int), org.joda.time.DateMidnight$Property:getMillis(), org.joda.time.LocalDateTime:parse(java.lang.String), org.joda.time.chrono.GJLocaleSymbols:realignDaysOfWeek(java.lang.String[]), org.joda.time.Duration:plus(long), org.joda.time.field.UnsupportedDateTimeField:getMaximumValue(long), org.joda.time.convert.ConverterManager:getIntervalConverter(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:dateElementParser(), org.joda.time.field.DelegatedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale), org.joda.time.ReadableInterval:getEnd(), org.joda.time.chrono.BaseChronology:minuteOfDay(), org.joda.time.field.ZeroIsMaxDateTimeField:add(long-int), org.joda.time.format.DateTimeFormatterBuilder:clear(), org.joda.time.field.MillisDurationField:getValue(long), org.joda.time.MutableInterval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant), org.joda.time.format.FormatUtils:createErrorMessage(java.lang.String-int), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.LocalTime:minusMinutes(int), org.joda.time.chrono.BasicMonthOfYearDateTimeField:getLeapAmount(long), org.joda.time.DateTimeZone:getProvider(), org.joda.time.Partial$Property:getMinimumValue(), org.joda.time.DateMidnight:withCenturyOfEra(int), org.joda.time.format.ISODateTimeFormat$Constants:access$3000(), org.joda.time.DateTimeField:getAsText(int-java.util.Locale), java.util.Iterator:remove(), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.field.AbstractPartialFieldProperty:getMaximumShortTextLength(java.util.Locale), org.joda.time.MutablePeriod:setPeriod(long-long), org.joda.time.format.ISODateTimeFormat:forFields(java.util.Collection-boolean-boolean), org.joda.time.chrono.GJYearOfEraDateTimeField:roundFloor(long), org.joda.time.DurationFieldType:millis(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.field.AbstractPartialFieldProperty:toString(), org.joda.time.format.DateTimeFormatterBuilder:appendSecondOfMinute(int), org.joda.time.Chronology:halfdayOfDay(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:printTo(java.lang.StringBuffer-int), org.joda.time.base.AbstractInstant:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.format.ISODateTimeFormat:weekyear(), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-org.joda.time.Chronology), org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecond(), java.lang.Object:clone(), org.joda.time.LocalDateTime:toLocalTime(), org.joda.time.format.DateTimeFormatterBuilder$Fraction:getFractionData(long-org.joda.time.DateTimeField), org.joda.time.ReadWritableInstant:getChronology(), org.joda.time.chrono.GJLocaleSymbols:halfdayValueToText(int), org.joda.time.field.SkipUndoDateTimeField:getMaximumValue(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.MutableDateTime:setRounding(org.joda.time.DateTimeField-int), org.joda.time.Seconds:secondsIn(org.joda.time.ReadableInterval), org.joda.time.field.StrictDateTimeField:getInstance(org.joda.time.DateTimeField), org.joda.time.DateTimeField:getMinimumValue(), org.joda.time.DateTimeUtils:getIntervalChronology(org.joda.time.ReadableInterval), org.joda.time.base.AbstractInstant:toInstant(), org.joda.time.chrono.GJChronology$CutoverField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MutablePeriod:setSeconds(int), org.joda.time.chrono.GJLocaleSymbols:getHalfdayMaxTextLength(), org.joda.time.field.OffsetDateTimeField:remainder(long), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(java.io.DataInput), org.joda.time.chrono.JulianChronology:secondOfDay(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.Seconds:getSeconds(), org.joda.time.YearMonthDay:withYear(int), org.joda.time.IllegalFieldValueException:initCause(java.lang.Throwable), org.joda.time.field.ImpreciseDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.chrono.BaseChronology:hours(), org.joda.time.DateTime:secondOfDay(), org.joda.time.MutableDateTime$Property:getField(), org.joda.time.chrono.LimitChronology$LimitDurationField:getDifferenceAsLong(long-long), org.joda.time.YearMonthDay:withDayOfMonth(int), org.joda.time.LocalDateTime:withMinuteOfHour(int), org.joda.time.DateMidnight$Property:roundFloorCopy(), org.joda.time.format.DateTimeFormat:longDate(), org.joda.time.field.DelegatedDurationField:getMillis(int), org.joda.time.format.DateTimeParserBucket:compareReverse(org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.YearMonthDay$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.field.UnsupportedDateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.format.DateTimeFormatterBuilder:appendMillisOfSecond(int), org.joda.time.LocalDate:dayOfYear(), org.joda.time.Interval:overlap(org.joda.time.ReadableInterval), org.joda.time.format.DateTimeFormatterBuilder$TextField:estimatePrintedLength(), org.joda.time.format.ISODateTimeFormat$Constants:access$2000(), org.joda.time.MutableDateTime$Property:roundCeiling(), org.joda.time.Period:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.LocalTime$Property:getMinimumValue(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), org.joda.time.format.PeriodFormatterBuilder:clear(), org.joda.time.chrono.ISOYearOfEraDateTimeField:roundFloor(long), java.util.ArrayList:iterator(), org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.DateMidnight$Property:writeObject(java.io.ObjectOutputStream), org.joda.time.LocalDateTime:isSupported(org.joda.time.DurationFieldType), org.joda.time.chrono.LimitChronology:<init>(org.joda.time.Chronology-org.joda.time.DateTime-org.joda.time.DateTime), java.io.ObjectInputStream:readObject(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:isLeap(long), org.joda.time.Period:getYears(), org.joda.time.tz.ZoneInfoCompiler:compile(java.io.File-java.io.File[]), org.joda.time.chrono.JulianChronology:millisOfDay(), org.joda.time.format.PeriodFormatterBuilder:appendMonths(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:add(long-int), org.joda.time.TimeOfDay:<init>(org.joda.time.DateTimeZone), org.joda.time.chrono.BasicWeekyearDateTimeField:getMaximumValue(), java.lang.Integer:equals(java.lang.Object), org.joda.time.Partial:isMatch(org.joda.time.ReadableInstant), org.joda.time.format.ISODateTimeFormat$Constants:access$3900(), org.joda.time.field.DelegatedDateTimeField:getRangeDurationField(), org.joda.time.chrono.GJEraDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.format.DateTimeFormat:createFormatterForStyle(java.lang.String), org.joda.time.field.BaseDateTimeField:getAsShortText(int-java.util.Locale), java.text.DateFormat:getDateTimeInstance(int-int-java.util.Locale), org.joda.time.DateTime:withWeekyear(int), org.joda.time.Period:<init>(long), org.joda.time.format.DateTimeFormatter:requirePrinter(), java.util.HashSet:<init>(java.util.Collection), org.joda.time.format.ISODateTimeFormat:dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.YearMonth:<clinit>(), org.joda.time.DateTimeFieldType:access$100(), org.joda.time.YearMonth$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.tz.ZoneInfoCompiler:parseOptional(java.lang.String), org.joda.time.field.DecoratedDurationField:add(long-long), org.joda.time.chrono.JulianChronology:<clinit>(), org.joda.time.format.ISODateTimeFormat$Constants:access$000(), org.joda.time.DateMidnight$Property:addWrapFieldToCopy(int), org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String), org.joda.time.format.ISODateTimeFormat:dateByMonth(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue(), org.joda.time.chrono.BuddhistChronology:getParam(), org.joda.time.Months:isGreaterThan(org.joda.time.Months), org.joda.time.chrono.GJChronology$CutoverField:roundFloor(long), org.joda.time.tz.FixedDateTimeZone:getID(), org.joda.time.LocalDateTime:getSecondOfMinute(), org.joda.time.convert.StringConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology), org.joda.time.chrono.LenientChronology:toString(), org.joda.time.format.DateTimePrinterInternalPrinter:of(org.joda.time.format.DateTimePrinter), org.joda.time.format.ISODateTimeFormat$Constants:access$3400(), org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.chrono.ISOChronology:toString(), org.joda.time.DateMidnight:now(org.joda.time.DateTimeZone), org.joda.time.format.DateTimePrinterInternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:basicWeekDateTime(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:remainder(long), org.joda.time.chrono.GJLocaleSymbols:addNumerals(java.util.TreeMap-int-int-java.lang.Integer[]), org.joda.time.DurationField:getValueAsLong(long-long), org.joda.time.field.LenientDateTimeField:get(long), org.joda.time.format.ISODateTimeFormat$Constants:weekDateTimeNoMillis(), org.joda.time.MutablePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.base.AbstractPartial:indexOf(org.joda.time.DateTimeFieldType), org.joda.time.convert.AbstractConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.chrono.BasicChronology:dayOfWeek(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField), org.joda.time.LocalDate:withYearOfCentury(int), org.joda.time.field.DelegatedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), java.io.BufferedReader:<init>(java.io.Reader), org.joda.time.MutableDateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), org.joda.time.Days:minus(org.joda.time.Days), java.io.BufferedReader:close(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:getAffixes(), org.joda.time.base.AbstractInstant:compareTo(org.joda.time.ReadableInstant), java.util.Set:toArray(java.lang.Object[]), org.joda.time.MutableDateTime:yearOfCentury(), org.joda.time.MutablePeriod:add(org.joda.time.ReadableDuration), org.joda.time.format.PeriodFormat$DynamicWordBased:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial), org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone), org.joda.time.MutablePeriod:add(org.joda.time.ReadableInterval), org.joda.time.Period:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.chrono.BasicChronology:isLeapYear(int), org.joda.time.format.DateTimeParser:estimateParsedLength(), org.joda.time.chrono.IslamicChronology:equals(java.lang.Object), org.joda.time.format.FormatUtils:<init>(), org.joda.time.Duration:withDurationAdded(org.joda.time.ReadableDuration-int), org.joda.time.Chronology:era(), org.joda.time.chrono.JulianChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.LocalDate:readResolve(), org.joda.time.TimeOfDay:indexOfSupported(org.joda.time.DateTimeFieldType), java.util.Map:containsKey(java.lang.Object), org.joda.time.field.DelegatedDurationField:getValueAsLong(long-long), org.joda.time.TimeOfDay:withMillisOfSecond(int), java.lang.ArithmeticException:<init>(java.lang.String), org.joda.time.field.AbstractPartialFieldProperty:getAsShortText(java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitWeekyear(int-boolean), org.joda.time.format.DateTimeParserBucket:reset(), org.joda.time.format.PeriodFormatterBuilder:append(org.joda.time.format.PeriodFormatter), org.joda.time.LocalDate:hashCode(), org.joda.time.base.BasePeriod$1:<init>(), org.joda.time.Partial:<init>(org.joda.time.Chronology-org.joda.time.DateTimeFieldType[]-int[]), org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String-boolean), org.joda.time.field.ScaledDurationField:add(long-long), org.joda.time.LocalTime:<init>(int-int), org.joda.time.chrono.GJDayOfWeekDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.YearMonth$Property:addToCopy(int), org.joda.time.LocalDate:plusDays(int), org.joda.time.MutableDateTime:setMillis(org.joda.time.ReadableInstant), org.joda.time.format.DateTimeFormat$StyleFormatter:getFormatter(java.util.Locale), org.joda.time.YearMonth:now(org.joda.time.DateTimeZone), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:parse(java.lang.String-int), org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField), org.joda.time.LocalDate:yearOfCentury(), org.joda.time.format.ISODateTimeFormat$Constants:fractionElement(), java.util.TimeZone:getID(), org.joda.time.MutableDateTime:minuteOfDay(), org.joda.time.chrono.BasicFixedMonthChronology:setYear(long-int), org.joda.time.Seconds:<init>(int), org.joda.time.field.PreciseDateTimeField:get(long), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDateTimeNoMillis(), org.joda.time.DateTime:dayOfYear(), org.joda.time.format.PeriodFormatterBuilder:<clinit>(), org.joda.time.DateMidnight$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.chrono.BaseChronology:years(), org.joda.time.chrono.BaseChronology:millisOfSecond(), org.joda.time.LocalDate:weekOfWeekyear(), org.joda.time.Period:withField(org.joda.time.DurationFieldType-int), org.joda.time.base.AbstractInterval:toPeriod(), org.joda.time.field.UnsupportedDurationField:hashCode(), org.joda.time.chrono.BasicChronology:getDaysInYearMax(), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.field.RemainderDateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType), org.joda.time.format.ISODateTimeFormat$Constants:access$1200(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-long), org.joda.time.field.UnsupportedDateTimeField:roundCeiling(long), org.joda.time.DateMidnight$Property:roundHalfFloorCopy(), org.joda.time.format.PeriodFormatterBuilder:appendMillis3Digit(), org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.LocalDateTime:getDayOfWeek(), org.joda.time.LocalTime:withLocalMillis(long), org.joda.time.DateMidnight:yearOfEra(), org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeFieldType:isSupported(org.joda.time.Chronology), org.joda.time.DurationFieldType:weekyears(), org.joda.time.convert.StringConverter:<clinit>(), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String[]-java.lang.String[]), org.joda.time.ReadWritablePeriod:clear(), org.joda.time.LocalDate:compareTo(java.lang.Object), org.joda.time.field.ZeroIsMaxDateTimeField:get(long), org.joda.time.chrono.ISOYearOfEraDateTimeField:add(long-int), java.util.Enumeration:hasMoreElements(), org.joda.time.convert.ConverterManager:getDurationConverters(), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitYear(int-boolean), org.joda.time.chrono.BasicWeekyearDateTimeField:remainder(long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), org.joda.time.ReadableInterval:getStart(), org.joda.time.convert.ReadableInstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.chrono.JulianChronology:getZone(), org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String), org.joda.time.field.ScaledDurationField:getDifferenceAsLong(long-long), org.joda.time.base.AbstractDuration:toPeriod(), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.YearMonth:<init>(long-org.joda.time.Chronology), org.joda.time.DateTimeZone:forTimeZone(java.util.TimeZone), org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey:<init>(int-int-int-java.util.Locale), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getDifference(long-long), org.joda.time.format.ISODateTimeFormat:localTimeParser(), org.joda.time.format.ISODateTimeFormat$Constants:basicDateTime(), org.joda.time.LocalTime$Property:roundHalfFloorCopy(), org.joda.time.format.ISODateTimeFormat$Constants:access$1600(), org.joda.time.chrono.BasicChronology:monthOfYear(), org.joda.time.format.DateTimePrinter:printTo(java.io.Writer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(long-int), org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.LocalTime:toDateTimeToday(), org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long), org.joda.time.convert.StringConverter:<init>(), org.joda.time.DateMidnight:minusWeeks(int), org.joda.time.field.DividedDateTimeField:get(long), org.joda.time.field.BaseDateTimeField:getMinimumValue(), org.joda.time.DateTime:getYear(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isSupported(org.joda.time.PeriodType-int), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.base.AbstractDateTime:toString(java.lang.String), java.util.concurrent.ConcurrentHashMap:<init>(int), java.util.Arrays:sort(java.lang.Object[]-java.util.Comparator), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(long), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:readResolve(), org.joda.time.Period:toStandardHours(), org.joda.time.chrono.ISOChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:writeTo(java.io.DataOutput), java.util.concurrent.atomic.AtomicReference:set(java.lang.Object), java.lang.Math:max(long-long), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:renameAppend(java.lang.String), org.joda.time.Years:years(int), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:get(long), org.joda.time.chrono.BasicChronology:getMaxMonth(int), org.joda.time.MutableDateTime:now(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormatter:parseMutableDateTime(java.lang.String), org.joda.time.chrono.BasicWeekyearDateTimeField:getLeapAmount(long), org.joda.time.chrono.BasicGJChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.field.DelegatedDateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.YearMonthDay:year(), org.joda.time.field.AbstractReadableInstantFieldProperty:hashCode(), org.joda.time.Period:<init>(long-long-org.joda.time.Chronology), org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis(), java.util.List:clear(), org.joda.time.Period:months(int), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:addWrapField(long-int), org.joda.time.convert.ReadableIntervalConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTimeFieldType:access$2100(), java.io.DataInput:readUnsignedShort(), org.joda.time.chrono.LimitChronology$LimitException:toString(), org.joda.time.format.PeriodFormat:getDefault(), org.joda.time.chrono.EthiopicChronology:readResolve(), org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-int[]), org.joda.time.UTCDateTimeZone:<clinit>(), org.joda.time.base.BasePeriod:<init>(int[]-org.joda.time.PeriodType), org.joda.time.tz.CachedDateTimeZone$Info:getOffset(long), org.joda.time.YearMonth:getChronology(), org.joda.time.Duration:toStandardHours(), org.joda.time.format.ISODateTimeFormat:dateTimeNoMillis(), org.joda.time.format.ISODateTimeFormat:weekDateTimeNoMillis(), org.joda.time.field.UnsupportedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.tz.DateTimeZoneBuilder$Rule:getOfYear(), java.security.BasicPermission:<init>(java.lang.String), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getValueAsLong(long-long), org.joda.time.DateTime:getWeekyear(), org.joda.time.base.BaseLocal:hashCode(), org.joda.time.format.PeriodFormatter:withLocale(java.util.Locale), org.joda.time.chrono.LimitChronology$LimitDateTimeField:add(long-int), org.joda.time.MonthDay:readResolve(), org.joda.time.DateTimeFieldType:dayOfMonth(), java.util.concurrent.ConcurrentMap:putIfAbsent(java.lang.Object-java.lang.Object), org.joda.time.MutablePeriod:addSeconds(int), org.joda.time.field.ZeroIsMaxDateTimeField:isLeap(long), org.joda.time.Hours:getPeriodType(), org.joda.time.format.ISODateTimeFormat$Constants:access$4400(), org.joda.time.base.AbstractInterval:toDurationMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:equals(java.lang.Object), org.joda.time.Instant:<init>(long), java.text.DateFormatSymbols:getShortWeekdays(), org.joda.time.chrono.ZonedChronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.Interval:withDurationBeforeEnd(org.joda.time.ReadableDuration), org.joda.time.Instant:minus(org.joda.time.ReadableDuration), org.joda.time.LocalTime$Property:getMillis(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getMinimumValue(long), java.math.BigDecimal:divide(java.math.BigDecimal-java.math.RoundingMode), org.joda.time.format.DateTimeFormatterBuilder:appendEraText(), org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.chrono.BaseChronology:centuries(), java.lang.StringBuilder:append(char), org.joda.time.chrono.JulianChronology:readResolve(), org.joda.time.MonthDay:toLocalDate(int), org.joda.time.chrono.EthiopicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:getAffixes(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.field.DividedDateTimeField:getRangeDurationField(), org.joda.time.format.ISODateTimeFormat:weekyearWeek(), org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType), org.joda.time.convert.StringConverter:getDurationMillis(java.lang.Object), org.joda.time.Duration:negated(), org.joda.time.format.DateTimeParserBucket:access$402(org.joda.time.format.DateTimeParserBucket-boolean), org.joda.time.DateTimeZone:adjustOffset(long-boolean), org.joda.time.format.ISODateTimeFormat:basicDate(), org.joda.time.format.DateTimeFormatterBuilder:toPrinter(), org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.field.AbstractReadableInstantFieldProperty:getDifference(org.joda.time.ReadableInstant), org.joda.time.LocalDateTime:getDayOfYear(), org.joda.time.chrono.LimitChronology$LimitDurationField:getValue(long-long), org.joda.time.format.DateTimeParserBucket:getOffset(), org.joda.time.DateTime$Property:addToCopy(long), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInt(java.lang.String-int-int), java.util.GregorianCalendar:<init>(java.util.TimeZone), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:printTo(java.lang.StringBuffer-int), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.tz.DateTimeZoneBuilder:getLastRuleSet(), org.joda.time.Instant:withDurationAdded(long-int), org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:<init>(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:parse(java.lang.String-int), org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.DataInput-java.lang.String), org.joda.time.chrono.AssembledChronology$Fields:copyFieldsFrom(org.joda.time.Chronology), org.joda.time.TimeOfDay:getValue(int), org.joda.time.field.UnsupportedDateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.Weeks:getPeriodType(), java.util.Map:size(), org.joda.time.DurationField:getType(), org.joda.time.field.ZeroIsMaxDateTimeField:roundHalfCeiling(long), org.joda.time.Period:toStandardWeeks(), org.joda.time.Period:minusMonths(int), java.util.Date:getTime(), org.joda.time.base.AbstractDateTime:toDate(), org.joda.time.format.DateTimeFormatterBuilder:checkParser(org.joda.time.format.DateTimeParser), org.joda.time.tz.CachedDateTimeZone:<clinit>(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:julianToGregorian(long), org.joda.time.chrono.ISOChronology:year(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getID(), org.joda.time.DateMidnight:dayOfWeek(), org.joda.time.DateMidnight:minus(long), org.joda.time.format.ISODateTimeFormat$Constants:access$4600(), org.joda.time.field.BaseDurationField:getValueAsLong(long), org.joda.time.base.BasePeriod:setPeriod(int-int-int-int-int-int-int-int), org.joda.time.tz.CachedDateTimeZone:getInfo(long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(org.joda.time.Chronology-long), org.joda.time.LocalDate:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.YearMonthDay:getMonthOfYear(), org.joda.time.Years:parseYears(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.DateTime:secondOfMinute(), org.joda.time.convert.CalendarConverter:<clinit>(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:equals(java.lang.Object), org.joda.time.DateTimeZone:forID(java.lang.String), org.joda.time.YearMonth:getMonthOfYear(), org.joda.time.TimeOfDay:<init>(long-org.joda.time.Chronology), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.chrono.BasicChronology:getFirstWeekOfYearMillis(int), java.util.Map:remove(java.lang.Object), org.joda.time.Months:getFieldType(), org.joda.time.MonthDay:<init>(long-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.LocalTime:compareTo(org.joda.time.ReadablePartial), org.joda.time.Years:getValue(), java.util.Calendar:getInstance(java.util.TimeZone-java.util.Locale), java.util.concurrent.ConcurrentMap:get(java.lang.Object), org.joda.time.MutableInterval:setEndMillis(long), org.joda.time.DateTime:withDayOfYear(int), org.joda.time.YearMonthDay:withMonthOfYear(int), org.joda.time.field.RemainderDateTimeField:roundFloor(long), java.util.List:size(), org.joda.time.field.OffsetDateTimeField:get(long), org.joda.time.PeriodType:withDaysRemoved(), org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.Years:getFieldType(), org.joda.time.chrono.BasicFixedMonthChronology:getDayOfYear(long-int), org.joda.time.chrono.GJLocaleSymbols:monthOfYearValueToShortText(int), org.joda.time.DateMidnight:plusYears(int), org.joda.time.format.ISODateTimeFormat$Constants:basicTime(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int), org.joda.time.base.AbstractPartial:getChronology(), org.joda.time.YearMonth:getField(int), org.joda.time.Duration:withMillis(long), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue(), org.joda.time.YearMonth:monthOfYear(), org.joda.time.YearMonth:<init>(), org.joda.time.DateTimeFieldType:clockhourOfDay(), org.joda.time.DateTime$Property:withMinimumValue(), org.joda.time.format.ISODateTimeFormat$Constants:access$600(), java.util.HashMap:containsKey(java.lang.Object), org.joda.time.base.BaseDuration:toPeriod(org.joda.time.PeriodType), org.joda.time.DateTimeZone:hashCode(), org.joda.time.DateTime:getZone(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.MonthDay$Property:getField(), org.joda.time.Chronology:hourOfHalfday(), org.joda.time.LocalDate:getValue(int), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.field.DecoratedDateTimeField:getMaximumValue(), org.joda.time.chrono.BasicChronology:getDaysInMonthMaxForSet(long-int), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean), org.joda.time.chrono.JulianChronology:isLeapYear(int), org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(), org.joda.time.DateTimeZone:validateProvider(org.joda.time.tz.Provider), org.joda.time.PeriodType:forFields(org.joda.time.DurationFieldType[]), org.joda.time.Hours:toStandardDuration(), org.joda.time.convert.IntervalConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology), java.lang.StringBuilder:<init>(int), org.joda.time.field.AbstractReadableInstantFieldProperty:remainder(), org.joda.time.format.DateTimeParserBucket$SavedState:restoreState(org.joda.time.format.DateTimeParserBucket), org.joda.time.format.ISODateTimeFormat$Constants:localDateParser(), org.joda.time.Partial:getFormatter(), org.joda.time.field.UnsupportedDateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.LocalDate:withDayOfYear(int), org.joda.time.chrono.CopticChronology:getMinimumDaysInFirstWeek(), org.joda.time.field.AbstractPartialFieldProperty:getMaximumTextLength(java.util.Locale), org.joda.time.Partial$Property:withMaximumValue(), org.joda.time.TimeOfDay:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.chrono.GJEraDateTimeField:get(long), org.joda.time.Period:<init>(int-int-int-int), org.joda.time.format.PeriodFormat:buildRegExFormatter(java.util.ResourceBundle-java.util.Locale), org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String), org.joda.time.chrono.BasicFixedMonthChronology:equals(java.lang.Object), org.joda.time.format.DateTimeFormat:parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder-java.lang.String), org.joda.time.TimeOfDay:toString(), org.joda.time.chrono.BasicChronology:getDateTimeMillis0(int-int-int-int), org.joda.time.chrono.BasicChronology:setYear(long-int), org.joda.time.PeriodType:millis(), org.joda.time.MutablePeriod:getMillis(), org.joda.time.DateTimeZone:forOffsetMillis(int), org.joda.time.LocalDateTime:toLocalDate(), org.joda.time.DateTime:toDateMidnight(), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.Years:plus(org.joda.time.Years), org.joda.time.IllegalFieldValueException:<init>(java.lang.String-java.lang.String), org.joda.time.DateTime:plus(long), java.util.Collection:remove(java.lang.Object), org.joda.time.field.OffsetDateTimeField:isLeap(long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsShortText(int-java.util.Locale), org.joda.time.LocalTime$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.chrono.GJChronology$CutoverField:getLeapAmount(long), org.joda.time.MutableDateTime$Property:set(java.lang.String-java.util.Locale), org.joda.time.PeriodType:yearDayTime(), org.joda.time.chrono.BasicChronology:yearOfEra(), org.joda.time.chrono.GJChronology$CutoverField:add(long-int), org.joda.time.base.BaseSingleFieldPeriod:toMutablePeriod(), java.util.concurrent.ConcurrentHashMap:size(), org.joda.time.YearMonth:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.chrono.AssembledChronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:getTwoDigitYear(long-org.joda.time.Chronology), org.joda.time.tz.ZoneInfoProvider$1:<init>(org.joda.time.tz.ZoneInfoProvider-java.lang.String), org.joda.time.convert.LongConverter:<init>(), org.joda.time.format.ISODateTimeFormat:dateByWeek(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.MutableDateTime$Property:getAsText(java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.lang.StringBuffer-int), org.joda.time.DateTime:<init>(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean), org.joda.time.LocalDate$Property:addWrapFieldToCopy(int), org.joda.time.MutableDateTime:minuteOfHour(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeZone-org.joda.time.DurationField-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.Partial:<init>(org.joda.time.Partial-int[]), org.joda.time.format.PeriodFormatterBuilder:appendField(int-int), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int), org.joda.time.field.DelegatedDateTimeField:add(long-long), org.joda.time.chrono.EthiopicChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.DateMidnight:withZoneRetainFields(org.joda.time.DateTimeZone), org.joda.time.chrono.ISOChronology:dayOfWeek(), org.joda.time.TimeOfDay:<init>(long), org.joda.time.YearMonthDay:toDateTimeAtCurrentTime(org.joda.time.DateTimeZone), java.io.DataInputStream:<init>(java.io.InputStream), org.joda.time.DateTimeField:add(long-int), org.joda.time.base.BaseDuration:<init>(long), org.joda.time.MutablePeriod:addMinutes(int), org.joda.time.chrono.BasicDayOfYearDateTimeField:get(long), org.joda.time.PeriodType:standard(), org.joda.time.TimeOfDay:minuteOfHour(), org.joda.time.LocalDateTime:plusHours(int), org.joda.time.Years:minus(org.joda.time.Years), org.joda.time.field.DelegatedDurationField:getMillis(int-long), org.joda.time.MutableDateTime:weekOfWeekyear(), org.joda.time.LocalDate:getCenturyOfEra(), org.joda.time.field.UnsupportedDurationField:getMillis(int), org.joda.time.base.AbstractPartial:getFieldType(int), org.joda.time.ReadablePeriod:getPeriodType(), org.joda.time.field.BaseDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.format.ISODateTimeFormat:hourMinute(), org.joda.time.DateMidnight$Property:addToCopy(int), org.joda.time.Chronology:millisOfDay(), org.joda.time.field.SkipUndoDateTimeField:readResolve(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-int), org.joda.time.DateMidnight$Property:roundHalfCeilingCopy(), org.joda.time.format.ISODateTimeFormat:dateParser(), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:parse(java.lang.String-int), org.joda.time.format.ISODateTimeFormat:dateHourMinuteSecondFraction(), org.joda.time.Partial$Property:addWrapFieldToCopy(int), java.lang.Object:equals(java.lang.Object), java.lang.Character:toLowerCase(char), org.joda.time.format.ISODateTimeFormat$Constants:access$1800(), org.joda.time.field.SkipDateTimeField:readResolve(), org.joda.time.base.AbstractInstant:equals(java.lang.Object), org.joda.time.Interval:<init>(long-long-org.joda.time.DateTimeZone), org.joda.time.field.BaseDateTimeField:getDifferenceAsLong(long-long), org.joda.time.TimeOfDay$Property:getField(), java.util.Date:<init>(int-int-int-int-int-int), org.joda.time.MutablePeriod:addWeeks(int), org.joda.time.Duration:abs(), org.joda.time.format.PeriodParser:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), org.joda.time.YearMonthDay:fromDateFields(java.util.Date), org.joda.time.MutableDateTime:clone(), java.io.DataInputStream:readUnsignedShort(), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.Interval:abuts(org.joda.time.ReadableInterval), org.joda.time.DateTime:parse(java.lang.String), org.joda.time.chrono.IslamicChronology:<init>(org.joda.time.Chronology-java.lang.Object-org.joda.time.chrono.IslamicChronology$LeapYearPatternType), org.joda.time.format.PeriodFormatterBuilder$Separator:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.field.DelegatedDateTimeField:getDurationField(), org.joda.time.convert.ConverterManager:checkAlterPeriodConverters(), org.joda.time.Partial:getField(int-org.joda.time.Chronology), org.joda.time.MonthDay:now(org.joda.time.Chronology), org.joda.time.field.OffsetDateTimeField:add(long-int), org.joda.time.Duration:getStandardHours(), org.joda.time.field.DelegatedDateTimeField:getDifferenceAsLong(long-long), org.joda.time.field.DecoratedDateTimeField:add(long-long), org.joda.time.LocalDate:compareTo(org.joda.time.ReadablePartial), org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.format.FormatUtils:parseTwoDigits(java.lang.CharSequence-int), org.joda.time.convert.ReadableIntervalConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology), org.joda.time.Duration:standardSeconds(long), org.joda.time.format.PeriodFormatterBuilder:append0(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.format.DateTimeFormatterBuilder$TextField:<init>(org.joda.time.DateTimeFieldType-boolean), org.joda.time.base.AbstractDateTime:getMonthOfYear(), org.joda.time.base.BaseSingleFieldPeriod:getValue(), org.joda.time.chrono.BasicChronology:getDayOfYear(long-int), org.joda.time.MutablePeriod:setValue(int-int), org.joda.time.MutableDateTime:now(org.joda.time.Chronology), org.joda.time.LocalTime$Property:getChronology(), org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(long-long), org.joda.time.format.PeriodFormatterBuilder:appendHours(), org.joda.time.format.ISODateTimeFormat$Constants:basicTimeNoMillis(), org.joda.time.chrono.ISOYearOfEraDateTimeField:<clinit>(), org.joda.time.Instant:toMutableDateTime(), org.joda.time.Period:<init>(java.lang.Object-org.joda.time.PeriodType), org.joda.time.Years:<clinit>(), org.joda.time.MutableDateTime:setDayOfWeek(int), org.joda.time.field.PreciseDurationField:getType(), org.joda.time.MutableDateTime$Property:getChronology(), org.joda.time.chrono.BasicChronology:getBase(), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:valueOf(java.lang.String), org.joda.time.base.BaseDuration:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.Instant:toMutableDateTimeISO(), java.io.ObjectOutputStream:writeObject(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>(), org.joda.time.base.AbstractPartial:hashCode(), org.joda.time.chrono.ISOChronology:getZone(), org.joda.time.LocalDate:getDayOfWeek(), org.joda.time.chrono.BaseChronology:era(), org.joda.time.tz.DefaultNameProvider:getName(java.util.Locale-java.lang.String-java.lang.String-boolean), org.joda.time.LocalDateTime:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondMillis(), org.joda.time.format.DateTimePrinter:printTo(java.io.Writer-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.MutableInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod), org.joda.time.TimeOfDay:<init>(int-int-org.joda.time.Chronology), org.joda.time.base.AbstractPartial:getFields(), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.DateTimeFormatter:requireParser(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DurationFieldType-java.lang.String), org.joda.time.LocalDateTime:getDayOfMonth(), org.joda.time.chrono.GJChronology:<clinit>(), org.joda.time.chrono.LenientChronology:getInstance(org.joda.time.Chronology), org.joda.time.MutablePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.format.DateTimeFormat:fullTime(), org.joda.time.DateMidnight$Property:getMaximumValue(), org.joda.time.field.MillisDurationField:getDifference(long-long), org.joda.time.chrono.BasicFixedMonthChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.MutableInterval:setPeriodAfterStart(org.joda.time.ReadablePeriod), java.io.DataInput:readBoolean(), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object), org.joda.time.Months:minus(int), org.joda.time.LocalDate:getWeekyear(), org.joda.time.chrono.BaseChronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.chrono.BasicDayOfMonthDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.format.InternalPrinterDateTimePrinter:<init>(org.joda.time.format.InternalPrinter), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:<init>(java.lang.String-int), org.joda.time.format.DateTimeFormatterBuilder:canBuildPrinter(), org.joda.time.base.BaseSingleFieldPeriod:get(org.joda.time.DurationFieldType), org.joda.time.MonthDay$Property:<init>(org.joda.time.MonthDay-int), org.joda.time.LocalDateTime$Property:getMillis(), org.joda.time.YearMonth$Property:<init>(org.joda.time.YearMonth-int), java.util.Locale:equals(java.lang.Object), org.joda.time.DateTimeZone:<init>(java.lang.String), org.joda.time.Seconds:isLessThan(org.joda.time.Seconds), org.joda.time.DateMidnight:minusDays(int), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.String), org.joda.time.LocalDateTime:getMinuteOfHour(), org.joda.time.format.DateTimeFormat:mediumDate(), org.joda.time.field.UnsupportedDurationField:getValueAsLong(long-long), java.lang.StringBuilder:append(int), org.joda.time.field.ZeroIsMaxDateTimeField:getDifferenceAsLong(long-long), org.joda.time.Instant:now(), org.joda.time.TimeOfDay:<init>(int-int-int-int), org.joda.time.field.UnsupportedDateTimeField:roundHalfEven(long), java.lang.String:toLowerCase(java.util.Locale), org.joda.time.YearMonthDay:plusMonths(int), org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValueForSet(long-int), org.joda.time.DateTimeUtils:getDefaultTimeZoneNames(), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYear(int), org.joda.time.Years:getYears(), java.text.SimpleDateFormat:toPattern(), org.joda.time.tz.CachedDateTimeZone:forZone(org.joda.time.DateTimeZone), org.joda.time.chrono.LenientChronology:hashCode(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:readResolve(), org.joda.time.Period:withYears(int), org.joda.time.base.BasePartial:<init>(long), org.joda.time.LocalDateTime:<init>(long), java.util.Calendar:getInstance(java.util.TimeZone), org.joda.time.chrono.JulianChronology:weekOfWeekyear(), org.joda.time.Partial:<init>(org.joda.time.Chronology), org.joda.time.chrono.StrictChronology:getInstance(org.joda.time.Chronology), org.joda.time.base.AbstractPeriod:toPeriod(), org.joda.time.base.AbstractPeriod:hashCode(), org.joda.time.field.MillisDurationField:<clinit>(), org.joda.time.DateTimeZone$LazyInit:buildMap(), org.joda.time.MutableDateTime$Property:writeObject(java.io.ObjectOutputStream), org.joda.time.format.DateTimeFormatterBuilder:csStartsWith(java.lang.CharSequence-int-java.lang.String), org.joda.time.field.AbstractReadableInstantFieldProperty:getDurationField(), org.joda.time.MutableDateTime:setDayOfMonth(int), org.joda.time.chrono.BasicChronology:era(), org.joda.time.MonthDay:toString(), org.joda.time.chrono.IslamicChronology:readResolve(), org.joda.time.chrono.BasicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.YearMonthDay:toDateTime(org.joda.time.TimeOfDay-org.joda.time.DateTimeZone), org.joda.time.Duration:<clinit>(), org.joda.time.field.DelegatedDateTimeField:getAsShortText(int-java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:compare(java.lang.Object-java.lang.Object), org.joda.time.chrono.BasicFixedMonthChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.LocalDate:toString(java.lang.String-java.util.Locale), org.joda.time.LocalDateTime:withDayOfMonth(int), org.joda.time.Period:plus(org.joda.time.ReadablePeriod), org.joda.time.chrono.BasicFixedMonthChronology:getYearDifference(long-long), org.joda.time.convert.AbstractConverter:<init>(), org.joda.time.field.MillisDurationField:<init>(), org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:isCachable(), org.joda.time.TimeOfDay:getField(int-org.joda.time.Chronology), org.joda.time.YearMonth:getValues(), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int), java.util.ArrayList:clear(), java.util.concurrent.atomic.AtomicReference:<init>(), org.joda.time.UTCDateTimeZone:toTimeZone(), org.joda.time.format.DateTimeFormat$StyleFormatter:<init>(int-int-int), org.joda.time.base.AbstractDateTime:getMinuteOfHour(), org.joda.time.DateTime:withDate(int-int-int), org.joda.time.DateMidnight:parse(java.lang.String), org.joda.time.ReadWritableInterval:setInterval(long-long), org.joda.time.DateTime:<init>(int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.DateTime:withMillisOfSecond(int), org.joda.time.DateTime$Property:setCopy(java.lang.String), java.io.DataOutputStream:writeShort(int), org.joda.time.base.AbstractInstant:isBefore(org.joda.time.ReadableInstant), org.joda.time.format.DateTimeFormatterBuilder$Composite:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.field.DelegatedDateTimeField:isLenient(), org.joda.time.LocalDate:minusMonths(int), org.joda.time.LocalDate:toInterval(), java.lang.ThreadLocal:<init>(), java.lang.Math:signum(float), org.joda.time.Duration:getStandardSeconds(), org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.MonthDay$Property:get(), org.joda.time.LocalDate$Property:roundFloorCopy(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getStandardOffset(), java.util.StringTokenizer:hasMoreTokens(), org.joda.time.MutablePeriod:add(org.joda.time.ReadablePeriod), org.joda.time.TimeOfDay:<init>(int-int), org.joda.time.base.AbstractPeriod:getFieldType(int), org.joda.time.chrono.ISOYearOfEraDateTimeField:set(long-int), org.joda.time.tz.CachedDateTimeZone$Info:<init>(org.joda.time.DateTimeZone-long), org.joda.time.format.DateTimeParserBucket$SavedField:<init>(), org.joda.time.field.DelegatedDateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long), org.joda.time.tz.DateTimeZoneBuilder$Transition:withMillis(long), org.joda.time.Chronology:millisOfSecond(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:remainder(long), org.joda.time.Chronology:<init>(), org.joda.time.format.ISODateTimeFormat:time(), org.joda.time.field.OffsetDateTimeField:addWrapField(long-int), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:buildTailZone(java.lang.String), org.joda.time.chrono.JulianChronology:yearOfEra(), org.joda.time.field.UnsupportedDurationField:getValue(long), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.DateTimeZone:getDefault(), org.joda.time.Instant:<init>(), org.joda.time.Interval:withDurationAfterStart(org.joda.time.ReadableDuration), org.joda.time.LocalDateTime:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.LocalDateTime$Property:setCopy(int), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.Seconds:secondsBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.tz.DateTimeZoneBuilder$Transition:getSaveMillis(), org.joda.time.field.BaseDateTimeField:roundFloor(long), org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.MutablePeriod:<init>(int-int-int-int-int-int-int-int), org.joda.time.Seconds:getFieldType(), org.joda.time.TimeOfDay$Property:getMaximumValue(), org.joda.time.Days:toStandardDuration(), org.joda.time.LocalTime$Property:roundHalfCeilingCopy(), org.joda.time.format.DateTimeFormatterBuilder:isParser(java.lang.Object), org.joda.time.DateTime:withWeekOfWeekyear(int), org.joda.time.field.OffsetDateTimeField:roundHalfEven(long), java.lang.StringBuilder:append(boolean), org.joda.time.MutableDateTime:dayOfWeek(), org.joda.time.DateTimeField:set(long-java.lang.String), org.joda.time.DurationFieldType:centuries(), org.joda.time.chrono.BasicChronology:getDateTimeMillis(int-int-int-int), org.joda.time.MutablePeriod:setDays(int), org.joda.time.LocalTime:now(org.joda.time.Chronology), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:<clinit>(), org.joda.time.DateTimeFieldType:clockhourOfHalfday(), org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.LocalDate:toDateMidnight(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket:obtainSaveField(), org.joda.time.field.DelegatedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.chrono.BaseChronology:dayOfMonth(), org.joda.time.chrono.GJEraDateTimeField:roundFloor(long), org.joda.time.YearMonth:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.field.DelegatedDateTimeField:getLeapAmount(long), org.joda.time.DateTimeZone$LazyInit$1:<init>(), org.joda.time.base.BaseSingleFieldPeriod:getPeriodType(), org.joda.time.Instant:withMillis(long), org.joda.time.convert.ReadableDurationConverter:<init>(), org.joda.time.format.PeriodFormatterBuilder:append(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.PeriodType:equals(java.lang.Object), java.util.Map$Entry:getValue(), org.joda.time.DurationFieldType:days(), java.io.DataInputStream:readUTF(), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(java.io.DataInput-java.lang.String), org.joda.time.LocalDateTime:withDate(int-int-int), org.joda.time.field.DelegatedDurationField:add(long-long), org.joda.time.format.DateTimeFormat:createFormatterForPattern(java.lang.String), org.joda.time.MonthDay:plusMonths(int), org.joda.time.Seconds:getPeriodType(), org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone), org.joda.time.YearMonth:toString(java.lang.String), org.joda.time.LocalDateTime:getEra(), org.joda.time.chrono.GregorianChronology:isLeapYear(int), org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithMillis(), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDateTime(), java.lang.System:getProperty(java.lang.String), org.joda.time.Period:getPeriodType(), org.joda.time.base.AbstractDuration:toString(), org.joda.time.chrono.JulianChronology:calculateFirstDayOfYearMillis(int), org.joda.time.format.PeriodFormatterBuilder$Literal:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), java.io.DataInput:readLong(), org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod), org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.format.PeriodFormatterBuilder:appendDays(), org.joda.time.format.DateTimePrinterInternalPrinter:estimatePrintedLength(), org.joda.time.DateTimeField:setExtended(long-int), org.joda.time.field.OffsetDateTimeField:getLeapDurationField(), org.joda.time.format.ISODateTimeFormat:ordinalDateTime(), org.joda.time.MutableDateTime:setMillis(long), org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTime:withHourOfDay(int), java.lang.Class:getName(), org.joda.time.MutableDateTime$Property:set(java.lang.String), org.joda.time.LocalDate:era(), org.joda.time.LocalDateTime:toDateTime(), org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType), org.joda.time.format.PeriodFormatterBuilder$Separator:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.DateTime:withYearOfEra(int), org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.field.BaseDurationField:getDifferenceAsLong(long-long), java.lang.String:endsWith(java.lang.String), org.joda.time.chrono.JulianChronology:yearOfCentury(), org.joda.time.LocalTime:<init>(org.joda.time.Chronology), org.joda.time.DateMidnight:minusYears(int), org.joda.time.LocalTime:<init>(int-int-int-int-org.joda.time.Chronology), org.joda.time.tz.ZoneInfoCompiler$Zone:<init>(java.lang.String-java.util.StringTokenizer), org.joda.time.DateTime:withDate(org.joda.time.LocalDate), org.joda.time.chrono.GJMonthOfYearDateTimeField:getAsText(int-java.util.Locale), org.joda.time.chrono.GJChronology:julianToGregorianByWeekyear(long), org.joda.time.MutablePeriod:mergePeriod(org.joda.time.ReadablePeriod), org.joda.time.format.DateTimeFormatterBuilder:appendMinuteOfDay(int), java.util.LinkedHashMap:<init>(), org.joda.time.DurationField:add(long-int), org.joda.time.format.PeriodFormatterBuilder:appendWeeks(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getDifferenceAsLong(long-long), org.joda.time.field.UnsupportedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial), org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType-int), org.joda.time.chrono.BaseChronology:clockhourOfDay(), org.joda.time.LocalTime:plusHours(int), org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfMinute(int-int), org.joda.time.chrono.BaseChronology:seconds(), org.joda.time.LocalTime$Property:readObject(java.io.ObjectInputStream), org.joda.time.chrono.GregorianChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.PeriodType:withMonthsRemoved(), org.joda.time.format.ISODateTimeFormat:tTimeNoMillis(), org.joda.time.chrono.BasicDayOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.chrono.BasicChronology:getWeeksInYear(int), org.joda.time.chrono.BasicMonthOfYearDateTimeField:addWrapField(long-int), org.joda.time.chrono.ZonedChronology$ZonedDurationField:addOffset(long), org.joda.time.format.ISODateTimeFormat:basicDateTime(), org.joda.time.field.BaseDateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.DateTime:now(org.joda.time.Chronology), org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.chrono.IslamicChronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.LimitChronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.LocalDate:isSupported(org.joda.time.DurationFieldType), org.joda.time.chrono.GregorianChronology:weekyear(), org.joda.time.base.BaseLocal:equals(java.lang.Object), org.joda.time.chrono.GJDayOfWeekDateTimeField:getAsText(int-java.util.Locale), org.joda.time.MutablePeriod:<init>(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-java.lang.String-int-int), org.joda.time.LocalDate:plus(org.joda.time.ReadablePeriod), org.joda.time.DateMidnight:checkInstant(long-org.joda.time.Chronology), org.joda.time.chrono.EthiopicChronology:dayOfMonth(), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetFromLocalToSubtract(long), org.joda.time.convert.ConverterManager:getPartialConverters(), org.joda.time.field.AbstractPartialFieldProperty:getMaximumValue(), org.joda.time.Weeks:isLessThan(org.joda.time.Weeks), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.LocalTime:property(org.joda.time.DateTimeFieldType), org.joda.time.base.AbstractInstant:toMutableDateTimeISO(), org.joda.time.field.PreciseDateTimeField:getMinimumValue(), org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.DateTime$Property:getMinimumValue(), org.joda.time.chrono.ZonedChronology$ZonedDurationField:add(long-int), org.joda.time.TimeOfDay:plusMinutes(int), org.joda.time.MutablePeriod:setPeriod(long-org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat:weekyearWeekDay(), org.joda.time.chrono.JulianChronology:getDateMidnightMillis(int-int-int), org.joda.time.Partial:toString(), org.joda.time.chrono.GJEraDateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:finish(java.util.Set), org.joda.time.chrono.BaseChronology:weekyears(), org.joda.time.Days:isLessThan(org.joda.time.Days), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.MutablePeriod:addDays(int), org.joda.time.PeriodType:getFieldType(int), org.joda.time.MutableDateTime$Property:getMaximumTextLength(java.util.Locale), org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(long), org.joda.time.chrono.BasicChronology:equals(java.lang.Object), org.joda.time.chrono.BasicWeekyearDateTimeField:addWrapField(long-int), java.io.DataInput:readUTF(), org.joda.time.YearMonth:fromDateFields(java.util.Date), org.joda.time.format.ISODateTimeFormat:yearMonth(), org.joda.time.chrono.BasicWeekyearDateTimeField:getLeapDurationField(), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int), java.util.StringTokenizer:nextToken(), org.joda.time.field.BaseDateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.PeriodType:minutes(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:add(long-long), org.joda.time.convert.ReadableInstantConverter:<init>(), org.joda.time.DateTime:plusHours(int), org.joda.time.DateMidnight:withWeekOfWeekyear(int), org.joda.time.chrono.ISOYearOfEraDateTimeField:roundCeiling(long), org.joda.time.base.BasePeriod:setPeriodInternal(int-int-int-int-int-int-int-int), org.joda.time.base.AbstractInterval:isAfterNow(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.LocalDateTime:correctDstTransition(java.util.Date-java.util.TimeZone), org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue(org.joda.time.ReadablePartial), org.joda.time.chrono.GJYearOfEraDateTimeField:set(long-int), org.joda.time.format.DateTimeFormatterBuilder$TextField:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.Partial:toString(java.lang.String-java.util.Locale), org.joda.time.LocalDateTime:withYearOfCentury(int), org.joda.time.Weeks:toStandardHours(), org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.DateMidnight:minus(org.joda.time.ReadableDuration), java.lang.Enum:valueOf(java.lang.Class-java.lang.String), org.joda.time.Weeks:weeksBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.DateTimeFieldType:<init>(java.lang.String), org.joda.time.LocalDateTime:minusMillis(int), org.joda.time.chrono.IslamicChronology:getLeapYearPatternType(), org.joda.time.convert.IntervalConverter:isReadableInterval(java.lang.Object-org.joda.time.Chronology), org.joda.time.MonthDay:minusMonths(int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.field.ZeroIsMaxDateTimeField:roundHalfFloor(long), org.joda.time.MutableDateTime:add(long), org.joda.time.field.AbstractReadableInstantFieldProperty:getAsString(), org.joda.time.chrono.IslamicChronology:calculateFirstDayOfYearMillis(int), org.joda.time.MutablePeriod:<init>(int-int-int-int), org.joda.time.field.UnsupportedDateTimeField:isLeap(long), java.util.Calendar:getTimeZone(), org.joda.time.DateTimeFieldType:access$1500(), org.joda.time.DateTimeFieldType:access$600(), org.joda.time.format.FormatUtils:writeUnpaddedInteger(java.io.Writer-long), org.joda.time.chrono.BaseChronology:months(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.chrono.LenientChronology:withUTC(), org.joda.time.base.BaseLocal:<init>(), org.joda.time.field.BaseDateTimeField:getDifference(long-long), org.joda.time.DateMidnight:toYearMonthDay(), org.joda.time.Years:getPeriodType(), org.joda.time.LocalDateTime:<init>(int-int-int-int-int), org.joda.time.DateMidnight:getMillis(), org.joda.time.MutableInterval:setStartMillis(long), org.joda.time.format.DateTimeFormatterBuilder$Composite:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.LocalTime:plusMillis(int), org.joda.time.MutableInterval:<init>(long-long-org.joda.time.Chronology), java.lang.String:indexOf(java.lang.String), org.joda.time.MutableDateTime:secondOfMinute(), org.joda.time.field.DecoratedDurationField:getUnitMillis(), org.joda.time.chrono.GJLocaleSymbols:monthOfYearTextToValue(java.lang.String), org.joda.time.chrono.BasicMonthOfYearDateTimeField:getRangeDurationField(), org.joda.time.format.ISODateTimeFormat$Constants:access$2900(), org.joda.time.DateTimeField:getLeapAmount(long), org.joda.time.Years:yearsBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.TimeOfDay:fromCalendarFields(java.util.Calendar), java.io.DataInputStream:close(), org.joda.time.DateTimeFieldType:halfdayOfDay(), org.joda.time.DateMidnight$Property:getMinimumValue(), org.joda.time.DateTimeZone:setDefault(org.joda.time.DateTimeZone), org.joda.time.Period:getWeeks(), org.joda.time.chrono.JulianChronology:centuryOfEra(), org.joda.time.field.AbstractReadableInstantFieldProperty:<init>(), org.joda.time.convert.ConverterManager:checkAlterDurationConverters(), org.joda.time.DateTime:withTime(int-int-int-int), org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology), org.joda.time.base.AbstractPartial:getField(int), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.Hours:isLessThan(org.joda.time.Hours), org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumShortTextLength(java.util.Locale), org.joda.time.format.ISODateTimeFormat:yearMonthDay(), org.joda.time.format.ISODateTimeFormat:basicTimeNoMillis(), org.joda.time.DateTimeZone:getNameKey(long), org.joda.time.format.ISODateTimeFormat$Constants:access$100(), org.joda.time.Partial$Property:<init>(org.joda.time.Partial-int), org.joda.time.MutableDateTime$Property:roundFloor(), org.joda.time.tz.UTCProvider:getZone(java.lang.String), org.joda.time.chrono.GJLocaleSymbols:<clinit>(), org.joda.time.YearMonthDay:getValue(int), org.joda.time.DateTime:<init>(int-int-int-int-int-org.joda.time.Chronology), org.joda.time.LocalTime:getChronology(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.DateTimeUtils:getDateFormatSymbols(java.util.Locale), org.joda.time.MutablePeriod:<init>(long-long-org.joda.time.PeriodType), org.joda.time.PeriodType:withSecondsRemoved(), org.joda.time.format.ISODateTimeFormat$Constants:access$4000(), org.joda.time.format.PeriodFormatter:getLocale(), org.joda.time.MonthDay:getFieldTypes(), org.joda.time.LocalDateTime:minusMinutes(int), org.joda.time.format.ISODateTimeFormat:basicWeekDate(), org.joda.time.DateTime:<init>(org.joda.time.Chronology), org.joda.time.field.AbstractReadableInstantFieldProperty:toInterval(), org.joda.time.format.DateTimeParserBucket:sort(org.joda.time.format.DateTimeParserBucket$SavedField[]-int), org.joda.time.YearMonth:getFieldTypes(), org.joda.time.format.ISODateTimeFormat:dateHourMinuteSecondMillis(), org.joda.time.Chronology:eras(), java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.BasicChronology:getAverageMillisPerYearDividedByTwo(), org.joda.time.MutableDateTime:getChronology(), org.joda.time.Interval:parse(java.lang.String), org.joda.time.DateTime:withSecondOfMinute(int), org.joda.time.field.DelegatedDateTimeField:getMinimumValue(), org.joda.time.tz.UTCProvider:<clinit>(), org.joda.time.base.AbstractPeriod:getPeriodType(), org.joda.time.field.BaseDateTimeField:convertText(java.lang.String-java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder:appendSecondOfDay(int), org.joda.time.format.ISODateTimeFormat$Constants:access$3800(), org.joda.time.MutableDateTime:copy(), org.joda.time.DateTime:toLocalDate(), org.joda.time.DateTime$Property:getMillis(), org.joda.time.MutableInterval:setInterval(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.DateTime:plusWeeks(int), org.joda.time.field.UnsupportedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(int-int-int-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long-org.joda.time.Chronology), org.joda.time.base.BasePeriod:mergePeriodInto(int[]-org.joda.time.ReadablePeriod), org.joda.time.chrono.BasicFixedMonthChronology:getMillisOfDay(long), org.joda.time.LocalTime$Property:roundHalfEvenCopy(), org.joda.time.LocalDateTime:plusMonths(int), org.joda.time.MonthDay:getField(int-org.joda.time.Chronology), java.util.List:contains(java.lang.Object), org.joda.time.chrono.LimitChronology$LimitDateTimeField:set(long-int), org.joda.time.DateTime:<init>(java.lang.Object), org.joda.time.DateTime:plusYears(int), org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:<init>(), org.joda.time.chrono.GJChronology:<init>(org.joda.time.chrono.JulianChronology-org.joda.time.chrono.GregorianChronology-org.joda.time.Instant), java.util.Map:isEmpty(), org.joda.time.format.DateTimeFormatterBuilder$MatchingParser:<init>(org.joda.time.format.InternalParser[]), org.joda.time.base.AbstractDateTime:getWeekyear(), org.joda.time.format.DateTimeParserBucket:access$002(org.joda.time.format.DateTimeParserBucket-org.joda.time.DateTimeZone), org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(long-int-int), org.joda.time.DateMidnight$Property:setCopy(java.lang.String), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.tz.ZoneInfoCompiler$RuleSet:addRule(org.joda.time.tz.ZoneInfoCompiler$Rule), org.joda.time.chrono.BaseChronology:eras(), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getDifference(long-long), org.joda.time.DateTime:toLocalDateTime(), org.joda.time.MutableDateTime$Property:getAsShortText(java.util.Locale), org.joda.time.MonthDay:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), java.lang.StringBuilder:<init>(java.lang.String), org.joda.time.convert.AbstractConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.chrono.JulianChronology:weekyearOfCentury(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.DateTimeField:getAsText(long-java.util.Locale), org.joda.time.tz.ZoneInfoLogger:verbose(), org.joda.time.LocalDate$Property:addToCopy(int), org.joda.time.YearMonthDay:property(org.joda.time.DateTimeFieldType), org.joda.time.YearMonthDay:<init>(), org.joda.time.field.ScaledDurationField:getMillis(long), org.joda.time.chrono.GJYearOfEraDateTimeField:add(long-long), org.joda.time.chrono.BaseChronology:secondOfMinute(), org.joda.time.chrono.BasicChronology:getAverageMillisPerYear(), org.joda.time.DateMidnight:<init>(), org.joda.time.MutableDateTime:add(org.joda.time.DurationFieldType-int), org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), org.joda.time.LocalTime:compareTo(java.lang.Object), org.joda.time.field.UnsupportedDateTimeField:roundHalfFloor(long), org.joda.time.LocalDate:yearOfEra(), org.joda.time.field.BaseDateTimeField:set(long-int), org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.field.DelegatedDateTimeField:roundFloor(long), org.joda.time.LocalDateTime:era(), org.joda.time.YearMonthDay:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.field.MillisDurationField:getValue(long-long), org.joda.time.LocalDate:parse(java.lang.String), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:roundCeiling(long), java.util.Arrays:equals(long[]-long[]), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology), org.joda.time.format.PeriodFormatterBuilder:appendMillis(), org.joda.time.chrono.CopticChronology:getZone(), org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeZone:printOffset(int), java.util.concurrent.atomic.AtomicReference:get(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DateTime:getMonthOfYear(), org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.Instant:getMillis(), org.joda.time.base.BasePartial:getChronology(), org.joda.time.LocalDate:toInterval(org.joda.time.DateTimeZone), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[]), org.joda.time.field.DelegatedDateTimeField:set(long-int), org.joda.time.LocalTime:parse(java.lang.String), org.joda.time.chrono.BasicChronology:getDaysInMonthMax(), org.joda.time.convert.ReadableIntervalConverter:<clinit>(), org.joda.time.MonthDay:getMonthOfYear(), org.joda.time.Period:plusDays(int), org.joda.time.chrono.GJEraDateTimeField:roundCeiling(long), org.joda.time.DateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.chrono.BasicChronology:get(org.joda.time.ReadablePartial-long), org.joda.time.base.AbstractInstant:isBefore(long), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:getAffixes(), org.joda.time.format.ISODateTimeFormat$Constants:access$2800(), org.joda.time.field.PreciseDurationField:getDifferenceAsLong(long-long), org.joda.time.Partial:getField(int), org.joda.time.YearMonth:fromCalendarFields(java.util.Calendar), org.joda.time.base.AbstractDateTime:getDayOfYear(), org.joda.time.field.DelegatedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial), org.joda.time.chrono.IslamicChronology:getMillisOfDay(long), org.joda.time.Years:readResolve(), org.joda.time.DateMidnight:getChronology(), org.joda.time.Years:yearsIn(org.joda.time.ReadableInterval), org.joda.time.PeriodType:withWeeksRemoved(), org.joda.time.chrono.GJChronology:gregorianToJulianByWeekyear(long), org.joda.time.Days:toStandardSeconds(), org.joda.time.chrono.GJChronology$CutoverField:getAsShortText(int-java.util.Locale), org.joda.time.chrono.BasicChronology:toString(), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfHour(int-int), org.joda.time.LocalDateTime:centuryOfEra(), org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.IllegalInstantException:isIllegalInstant(java.lang.Throwable), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue(long), org.joda.time.MutableDateTime:<init>(org.joda.time.DateTimeZone), org.joda.time.convert.ConverterManager:getPeriodConverter(java.lang.Object), org.joda.time.LocalDateTime:compareTo(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondFraction(), org.joda.time.DateTimeUtils:buildDefaultTimeZoneNames(), java.io.ObjectOutputStream:writeUTF(java.lang.String), org.joda.time.convert.LongConverter:<clinit>(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.Weeks:isGreaterThan(org.joda.time.Weeks), org.joda.time.field.MillisDurationField:add(long-int), java.lang.String:intern(), org.joda.time.field.DecoratedDateTimeField:roundFloor(long), org.joda.time.LocalDateTime:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.chrono.CopticChronology:readResolve(), org.joda.time.format.DateTimeFormatterBuilder:appendText(org.joda.time.DateTimeFieldType), org.joda.time.chrono.BaseChronology:minutes(), org.joda.time.chrono.GJChronology$CutoverField:getMaximumShortTextLength(java.util.Locale), java.util.SimpleTimeZone:<init>(int-java.lang.String), org.joda.time.Days:parseDays(java.lang.String), org.joda.time.chrono.BasicGJChronology:getZone(), org.joda.time.DateTimeFieldType:era(), org.joda.time.tz.FixedDateTimeZone:toTimeZone(), org.joda.time.LocalTime$Property:setCopy(int), org.joda.time.chrono.BasicChronology:getYearInfo(int), org.joda.time.TimeOfDay:<init>(int-int-int-org.joda.time.Chronology), java.lang.SecurityManager:checkPermission(java.security.Permission), org.joda.time.YearMonthDay$Property:withMaximumValue(), java.util.List:remove(java.lang.Object), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), org.joda.time.DateTimeUtils$MillisProvider:getMillis(), org.joda.time.format.DateTimeFormat:selectStyle(char), org.joda.time.DateTimeZone:toString(), org.joda.time.base.BasePeriod:setValue(int-int), org.joda.time.field.DelegatedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.base.AbstractDateTime:getYearOfCentury(), org.joda.time.chrono.BuddhistChronology:getBase(), org.joda.time.Years:isLessThan(org.joda.time.Years), org.joda.time.Interval:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTime:<init>(int-int-int-int-int-org.joda.time.DateTimeZone), org.joda.time.Period:withDays(int), org.joda.time.chrono.BasicFixedMonthChronology:getMonthOfYear(long-int), org.joda.time.field.UnsupportedDateTimeField:getMinimumValue(long), org.joda.time.YearMonth:toLocalDate(int), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.chrono.JulianChronology:getInstance(), org.joda.time.base.AbstractInstant:compareTo(java.lang.Object), org.joda.time.ReadWritableInterval:setChronology(org.joda.time.Chronology), org.joda.time.Period:toStandardDays(), org.joda.time.field.DecoratedDateTimeField:set(long-int), org.joda.time.TimeOfDay$Property:setCopy(java.lang.String), org.joda.time.field.BaseDurationField:compareTo(org.joda.time.DurationField), org.joda.time.format.ISODateTimeFormat:basicOrdinalDateTimeNoMillis(), org.joda.time.MonthDay:now(org.joda.time.DateTimeZone), org.joda.time.Period:<init>(), org.joda.time.base.BaseDateTime:<init>(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), org.joda.time.Instant:ofEpochSecond(long), org.joda.time.Hours:getValue(), org.joda.time.LocalDate:now(), org.joda.time.MutableDateTime:add(org.joda.time.ReadableDuration), org.joda.time.MutableDateTime:add(org.joda.time.ReadablePeriod), org.joda.time.LocalTime$Property:writeObject(java.io.ObjectOutputStream), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:toString(), org.joda.time.Period:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.DateTime:getMillisOfDay(), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.StringBuffer-int), org.joda.time.chrono.EthiopicChronology:getZone(), org.joda.time.DateTimeField:<init>(), org.joda.time.DateTime:minuteOfDay(), org.joda.time.chrono.BasicGJChronology:hashCode(), org.joda.time.chrono.GregorianChronology:getMinimumDaysInFirstWeek(), org.joda.time.UTCDateTimeZone:getID(), org.joda.time.MonthDay:withChronologyRetainFields(org.joda.time.Chronology), org.joda.time.chrono.JulianChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.LocalDateTime$Property:roundHalfFloorCopy(), org.joda.time.base.AbstractDateTime:getCenturyOfEra(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.base.AbstractPartial:toString(org.joda.time.format.DateTimeFormatter), org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.DateTimeZone), org.joda.time.MutablePeriod:add(long), org.joda.time.chrono.GJLocaleSymbols:halfdayTextToValue(java.lang.String), org.joda.time.chrono.BasicYearDateTimeField:readResolve(), org.joda.time.chrono.LimitChronology$LimitDurationField:add(long-long), org.joda.time.format.DateTimeParserBucket$SavedField:init(org.joda.time.DateTimeField-int), org.joda.time.chrono.ISOYearOfEraDateTimeField:get(long), org.joda.time.DateTime$Property:roundHalfFloorCopy(), org.joda.time.format.PeriodFormatterBuilder$Separator:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.Interval:<init>(long-long), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int), org.joda.time.Months:getMonths(), org.joda.time.MutableInterval:parse(java.lang.String), org.joda.time.chrono.LimitChronology$LimitException:<init>(org.joda.time.chrono.LimitChronology-java.lang.String-boolean), org.joda.time.chrono.GJChronology$CutoverField:gregorianToJulian(long), org.joda.time.YearMonth:indexOf(org.joda.time.DurationFieldType), org.joda.time.tz.DateTimeZoneBuilder$Transition:getNameKey(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.field.PreciseDurationDateTimeField:remainder(long), org.joda.time.Partial:withFieldAddWrapped(org.joda.time.DurationFieldType-int), org.joda.time.Duration:multipliedBy(long), java.io.File:exists(), org.joda.time.chrono.BuddhistChronology:<clinit>(), org.joda.time.chrono.BaseChronology:<init>(), java.util.List:toArray(java.lang.Object[]), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), org.joda.time.DateTimeField:remainder(long), org.joda.time.DateTimeField:get(long), org.joda.time.DateTimeUtils$FixedMillisProvider:<init>(long), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int), org.joda.time.field.UnsupportedDateTimeField:remainder(long), org.joda.time.MutableInterval:getStartMillis(), org.joda.time.LocalDateTime$Property:getMinimumValue(), org.joda.time.DateTime:minus(org.joda.time.ReadableDuration), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(long), org.joda.time.DateTimeZone$Stub:readResolve(), org.joda.time.ReadableInterval:toPeriod(org.joda.time.PeriodType), org.joda.time.LocalDateTime:plusMinutes(int), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser), org.joda.time.LocalDateTime:plus(org.joda.time.ReadablePeriod), org.joda.time.MutablePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType), org.joda.time.Period:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology), java.lang.Long:parseLong(java.lang.String), org.joda.time.field.DecoratedDurationField:isPrecise(), org.joda.time.YearMonthDay:toDateMidnight(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormatter:getPrinter(), org.joda.time.TimeOfDay:secondOfMinute(), org.joda.time.base.BaseSingleFieldPeriod:compareTo(java.lang.Object), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int), org.joda.time.tz.DateTimeZoneBuilder$Transition:getWallOffset(), org.joda.time.DateTime:plus(org.joda.time.ReadablePeriod), org.joda.time.tz.ZoneInfoCompiler:parseDayOfWeek(java.lang.String), org.joda.time.field.DelegatedDateTimeField:getDifference(long-long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:writeTo(java.io.DataOutput), org.joda.time.field.UnsupportedDurationField:getValueAsLong(long), org.joda.time.chrono.BaseChronology:yearOfEra(), org.joda.time.YearMonth:getField(int-org.joda.time.Chronology), org.joda.time.chrono.BasicChronology$HalfdayField:<init>(), org.joda.time.chrono.BasicYearDateTimeField:add(long-int), org.joda.time.chrono.BasicGJChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.base.AbstractDateTime:getMinuteOfDay(), org.joda.time.format.ISODateTimeFormat:basicDateTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.base.AbstractDateTime:toCalendar(java.util.Locale), org.joda.time.DateTime:minusHours(int), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:previousTransition(long), java.lang.String:lastIndexOf(int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:getAffixes(), org.joda.time.chrono.LimitChronology:equals(java.lang.Object), java.text.DateFormatSymbols:getWeekdays(), org.joda.time.format.DateTimeParserBucket:getChronology(), org.joda.time.chrono.IslamicChronology:getDaysInYearMonth(int-int), org.joda.time.DateTimeFieldType:access$1900(), org.joda.time.format.ISODateTimeFormat$Constants:dayOfWeekElement(), org.joda.time.LocalTime$Property:setCopy(java.lang.String), org.joda.time.LocalDate:fromCalendarFields(java.util.Calendar), org.joda.time.MutablePeriod:setPeriod(long-long-org.joda.time.Chronology), org.joda.time.YearMonthDay:toDateTimeAtCurrentTime(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.YearMonthDay:<clinit>(), org.joda.time.MutablePeriod:setYears(int), org.joda.time.chrono.BasicChronology:getMaxMonth(), org.joda.time.convert.NullConverter:<clinit>(), org.joda.time.base.BasePartial:<init>(), org.joda.time.format.PeriodFormatterBuilder$Composite:<init>(java.util.List), org.joda.time.format.DateTimeFormatterBuilder$Fraction:<init>(org.joda.time.DateTimeFieldType-int-int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:values(), org.joda.time.chrono.BasicChronology:getMillisOfDay(long), org.joda.time.convert.ReadablePeriodConverter:<init>(), org.joda.time.format.ISODateTimeFormat:basicOrdinalDateTime(), org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.MutablePeriod:setMonths(int), org.joda.time.chrono.GJEraDateTimeField:roundHalfFloor(long), org.joda.time.Duration:minus(long), org.joda.time.convert.ConverterManager:getInstantConverter(java.lang.Object), java.util.Collections:sort(java.util.List), org.joda.time.format.ISODateTimeFormat$Constants:tTimeNoMillis(), org.joda.time.field.UnsupportedDateTimeField:set(long-java.lang.String), org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType), org.joda.time.field.UnsupportedDateTimeField:set(long-int), org.joda.time.YearMonth:now(org.joda.time.Chronology), java.lang.Exception:printStackTrace(), org.joda.time.Weeks:readResolve(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getDifference(long-long), org.joda.time.field.AbstractPartialFieldProperty:<init>(), org.joda.time.DateTime:<init>(int-int-int-int-int-int-org.joda.time.DateTimeZone), org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType[]-int[]), org.joda.time.base.BasePeriod:setPeriod(org.joda.time.ReadablePeriod), org.joda.time.YearMonthDay:<init>(org.joda.time.Chronology), org.joda.time.field.SkipUndoDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.format.DateTimeFormatter:withZoneUTC(), org.joda.time.chrono.GJChronology:getZone(), org.joda.time.chrono.BasicDayOfYearDateTimeField:readResolve(), org.joda.time.chrono.BasicGJChronology:getMillisOfDay(long), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DateTimeFieldType), java.util.Date:getMonth(), org.joda.time.base.BaseDateTime:<init>(long), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.Chronology:dayOfWeek(), org.joda.time.convert.ConverterManager:getIntervalConverters(), org.joda.time.Instant:ofEpochMilli(long), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadableInstant), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:remainder(long), org.joda.time.field.PreciseDurationField:equals(java.lang.Object), org.joda.time.field.AbstractReadableInstantFieldProperty:getAsText(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:equals(java.lang.Object), org.joda.time.format.ISODateTimeFormat:localDateOptionalTimeParser(), org.joda.time.format.DateTimeFormatterBuilder$Composite:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.GregorianChronology:year(), org.joda.time.YearMonthDay:dayOfMonth(), org.joda.time.DateTime:withTimeAtStartOfDay(), org.joda.time.DateTimeZone:getNameProvider(), org.joda.time.base.AbstractInstant:toDateTime(org.joda.time.DateTimeZone), java.lang.Short:valueOf(short), org.joda.time.MutablePeriod:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.LocalDate$Property:getMinimumValue(), org.joda.time.TimeOfDay:toDateTimeToday(org.joda.time.DateTimeZone), java.util.Map:keySet(), org.joda.time.MonthDay:dayOfMonth(), org.joda.time.format.DateTimeParserBucket:parseMillis(org.joda.time.format.DateTimeParser-java.lang.CharSequence), java.lang.Math:min(long-long), org.joda.time.chrono.GJChronology$LinkedDurationField:getDifference(long-long), org.joda.time.chrono.EthiopicChronology:getDateTimeMillis(int-int-int-int), org.joda.time.base.AbstractInstant:toMutableDateTime(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:get(long), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]:clone(), org.joda.time.PeriodType:<clinit>(), org.joda.time.LocalDate:minusWeeks(int), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.format.DateTimeFormatterBuilder:canBuildFormatter(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumValue(), org.joda.time.DateTime:yearOfCentury(), org.joda.time.chrono.BasicYearDateTimeField:set(long-int), org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.DateTime$Property:roundCeilingCopy(), org.joda.time.format.ISOPeriodFormat:alternate(), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.DateTime:getMillis(), org.joda.time.chrono.BaseChronology:halfdays(), org.joda.time.LocalTime:<init>(int-int-int), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int), org.joda.time.base.AbstractPartial:get(org.joda.time.DateTimeFieldType), org.joda.time.chrono.LimitChronology$LimitDateTimeField:addWrapField(long-int), org.joda.time.DurationField:isSupported(), org.joda.time.LocalTime:<init>(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormat:shortDate(), org.joda.time.IllegalInstantException:<init>(java.lang.String), org.joda.time.chrono.ISOChronology:get(org.joda.time.ReadablePeriod-long), org.joda.time.format.ISODateTimeFormat$Constants:access$1700(), org.joda.time.format.PeriodFormatter:printTo(java.io.Writer-org.joda.time.ReadablePeriod), org.joda.time.YearMonthDay:monthOfYear(), org.joda.time.DateTimeUtils:<init>(), java.lang.RuntimeException:<init>(java.lang.Throwable), org.joda.time.LocalDateTime:withMillisOfSecond(int), org.joda.time.format.ISODateTimeFormat$Constants:timeParser(), org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod), org.joda.time.MutableInterval:setChronology(org.joda.time.Chronology), org.joda.time.Duration:toStandardMinutes(), org.joda.time.field.AbstractPartialFieldProperty:getAsString(), org.joda.time.Hours:isGreaterThan(org.joda.time.Hours), org.joda.time.field.BaseDateTimeField:roundHalfEven(long), org.joda.time.format.DateTimeFormatterBuilder:appendClockhourOfHalfday(int), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:printTo(java.lang.StringBuffer-int), org.joda.time.Period:toStandardSeconds(), org.joda.time.format.InternalPrinterDateTimePrinter:of(org.joda.time.format.InternalPrinter), org.joda.time.Duration:<init>(java.lang.Object), org.joda.time.DateTime:toMutableDateTime(), org.joda.time.DateTime:toLocalTime(), org.joda.time.chrono.BasicGJChronology:getMinimumDaysInFirstWeek(), org.joda.time.LocalTime:withMillisOfDay(int), org.joda.time.field.PreciseDurationField:getMillis(long-long), org.joda.time.DurationField:subtract(long-long), org.joda.time.format.PeriodFormat:<clinit>(), org.joda.time.chrono.GJChronology$CutoverField:isLeap(long), org.joda.time.MonthDay:minus(org.joda.time.ReadablePeriod), org.joda.time.MutableDateTime:setYear(int), org.joda.time.tz.CachedDateTimeZone:equals(java.lang.Object), org.joda.time.DateMidnight:centuryOfEra(), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.format.DateTimeFormat$StyleFormatter:<clinit>(), org.joda.time.Minutes:getValue(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), java.lang.StringBuffer:append(java.lang.String), org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.tz.ZoneInfoLogger:<init>(), org.joda.time.base.BasePeriod:setValues(int[]), org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.tz.ZoneInfoCompiler:parseYear(java.lang.String-int), org.joda.time.MonthDay:minusDays(int), org.joda.time.format.PeriodFormatter:checkParser(), org.joda.time.tz.DateTimeZoneBuilder$Rule:getNameKey(), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.tz.ZoneInfoProvider:uncaughtException(java.lang.Exception), org.joda.time.chrono.BasicYearDateTimeField:getLeapDurationField(), org.joda.time.DateMidnight:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.chrono.ISOChronology:writeReplace(), org.joda.time.Partial:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.PeriodType:yearDay(), org.joda.time.DateTime:withChronology(org.joda.time.Chronology), org.joda.time.tz.DateTimeZoneBuilder:addRecurringSavings(java.lang.String-int-int-int-char-int-int-int-boolean-int), org.joda.time.MutableInterval:setDurationAfterStart(long), org.joda.time.DateTimeComparator:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType), org.joda.time.chrono.JulianChronology:secondOfMinute(), org.joda.time.chrono.ISOYearOfEraDateTimeField:remainder(long), java.util.TimeZone:getDefault(), org.joda.time.chrono.GJMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthPrevious(org.joda.time.Chronology-long), org.joda.time.MutableInterval:<init>(java.lang.Object), java.lang.String:valueOf(int), java.util.Iterator:hasNext(), org.joda.time.Chronology:monthOfYear(), org.joda.time.tz.ZoneInfoCompiler:parseTime(java.lang.String), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:gregorianToJulian(long), org.joda.time.LocalDateTime$Property:addWrapFieldToCopy(int), org.joda.time.DateTimeZone:writeReplace(), org.joda.time.Period:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.chrono.BasicChronology:getMonthOfYear(long), org.joda.time.LocalDate:toDateTimeAtCurrentTime(), org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology), org.joda.time.chrono.JulianChronology:monthOfYear(), org.joda.time.YearMonthDay:toDateMidnight(), org.joda.time.chrono.BasicYearDateTimeField:getDifferenceAsLong(long-long), org.joda.time.base.BaseDateTime:toDateTime(org.joda.time.DateTimeZone), org.joda.time.chrono.BaseChronology:get(org.joda.time.ReadablePeriod-long), org.joda.time.field.ZeroIsMaxDateTimeField:roundHalfEven(long), org.joda.time.LocalDate$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.chrono.BuddhistChronology:<init>(org.joda.time.Chronology-java.lang.Object), java.lang.CharSequence:toString(), org.joda.time.field.ScaledDurationField:hashCode(), org.joda.time.chrono.BaseChronology:add(long-long-int), org.joda.time.LocalDateTime:getCenturyOfEra(), org.joda.time.DateTimeZone:previousTransition(long), org.joda.time.chrono.BasicFixedMonthChronology:getDaysInYearMonth(int-int), org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.YearMonth:getValue(int), org.joda.time.DateMidnight:plusMonths(int), org.joda.time.base.AbstractInstant:isAfter(long), org.joda.time.LocalDateTime:minusDays(int), org.joda.time.DateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:withZone(org.joda.time.DateTimeZone), java.util.ArrayList:contains(java.lang.Object), org.joda.time.DateMidnight:withFields(org.joda.time.ReadablePartial), org.joda.time.MutablePeriod:getSeconds(), org.joda.time.DateTimeField:set(long-int), org.joda.time.format.DateTimeFormatterBuilder:checkPrinter(org.joda.time.format.DateTimePrinter), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix), org.joda.time.Partial:indexOf(org.joda.time.DurationFieldType), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long), org.joda.time.LocalDate$Property:roundHalfEvenCopy(), org.joda.time.LocalDate:withEra(int), org.joda.time.Months:getValue(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.Years:<init>(int), org.joda.time.LocalDateTime:secondOfMinute(), org.joda.time.field.AbstractPartialFieldProperty:getName(), org.joda.time.base.AbstractInterval:toInterval(), org.joda.time.chrono.GregorianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.LocalDateTime:compareTo(org.joda.time.ReadablePartial), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeFieldType:access$700(), org.joda.time.chrono.CopticChronology:hashCode(), org.joda.time.DateTimeComparator:getInstance(org.joda.time.DateTimeFieldType), java.lang.String:equals(java.lang.Object), org.joda.time.chrono.LimitChronology:getInstance(org.joda.time.Chronology-org.joda.time.ReadableDateTime-org.joda.time.ReadableDateTime), org.joda.time.tz.UTCProvider:<init>(), org.joda.time.Interval:getEndMillis(), org.joda.time.MutablePeriod:addMonths(int), org.joda.time.Chronology:halfdays(), java.util.concurrent.atomic.AtomicReferenceArray:get(int), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.DateTimeZone:isLocalDateTimeGap(org.joda.time.LocalDateTime), org.joda.time.format.DateTimeParserBucket$SavedState:<init>(org.joda.time.format.DateTimeParserBucket), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket:getLocale(), org.joda.time.base.BaseSingleFieldPeriod:standardPeriodIn(org.joda.time.ReadablePeriod-long), org.joda.time.format.ISODateTimeFormat$Constants:yearMonth(), org.joda.time.DateTime$Property:getMaximumValue(), org.joda.time.Period:minusDays(int), org.joda.time.MutablePeriod:setPeriod(int-int-int-int-int-int-int-int), org.joda.time.TimeOfDay:getField(int), org.joda.time.chrono.GJChronology$LinkedDurationField:add(long-long), org.joda.time.format.ISODateTimeFormat$Constants:yearElement(), org.joda.time.Hours:hoursIn(org.joda.time.ReadableInterval), org.joda.time.chrono.GJChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.Months:months(int), org.joda.time.base.BaseDuration:toPeriod(org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket:saveState(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.tz.DateTimeZoneBuilder:toDateTimeZone(java.lang.String-boolean), org.joda.time.format.ISODateTimeFormat$Constants:access$2300(), org.joda.time.LocalDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.base.BasePeriod:toDurationFrom(org.joda.time.ReadableInstant), org.joda.time.field.RemainderDateTimeField:roundHalfFloor(long), org.joda.time.LocalTime:millisOfSecond(), org.joda.time.base.AbstractDuration:equals(java.lang.Object), org.joda.time.YearMonthDay:fromCalendarFields(java.util.Calendar), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.format.DateTimeFormat:fullDateTime(), org.joda.time.Hours:parseHours(java.lang.String), org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:access$800(), org.joda.time.format.ISODateTimeFormat$Constants:access$2200(), org.joda.time.format.ISODateTimeFormat:hourMinuteSecond(), org.joda.time.format.ISODateTimeFormat$Constants:access$2400(), org.joda.time.chrono.ISOChronology:getBase(), org.joda.time.DateTimeZone:isFixed(), org.joda.time.base.AbstractInterval:isAfter(long), org.joda.time.chrono.ZonedChronology:localToUTC(long), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String), org.joda.time.TimeOfDay:getChronology(), org.joda.time.DateTime:minus(org.joda.time.ReadablePeriod), org.joda.time.convert.AbstractConverter:toString(), org.joda.time.MutableDateTime:<init>(org.joda.time.Chronology), org.joda.time.DateTime:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.Seconds:isGreaterThan(org.joda.time.Seconds), org.joda.time.format.ISODateTimeFormat:weekDateTime(), org.joda.time.convert.NullConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology), org.joda.time.chrono.GregorianChronology:equals(java.lang.Object), org.joda.time.tz.CachedDateTimeZone:hashCode(), org.joda.time.MutablePeriod:<init>(long), org.joda.time.DurationFieldType:hours(), org.joda.time.LocalDateTime:withMillisOfDay(int), org.joda.time.field.BaseDurationField:getUnitMillis(), org.joda.time.chrono.BasicChronology:dayOfYear(), org.joda.time.base.AbstractInterval:equals(java.lang.Object), org.joda.time.base.AbstractDateTime:toString(java.lang.String-java.util.Locale), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.DateTime:getDayOfMonth(), org.joda.time.YearMonth:plusMonths(int), org.joda.time.DateTime:plusDays(int), org.joda.time.chrono.BuddhistChronology:getInstanceUTC(), org.joda.time.chrono.GJDayOfWeekDateTimeField:getAsShortText(int-java.util.Locale), org.joda.time.Interval:withEndMillis(long), org.joda.time.DateMidnight:yearOfCentury(), org.joda.time.chrono.BasicChronology:getZone(), org.joda.time.chrono.GregorianChronology:<clinit>(), org.joda.time.field.AbstractReadableInstantFieldProperty:getDifferenceAsLong(org.joda.time.ReadableInstant), org.joda.time.LocalDateTime:minus(org.joda.time.ReadableDuration), org.joda.time.Days:standardDaysIn(org.joda.time.ReadablePeriod), org.joda.time.field.AbstractReadableInstantFieldProperty:getName(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:toString(), org.joda.time.Hours:minus(org.joda.time.Hours), org.joda.time.DateTime$Property:roundHalfCeilingCopy(), org.joda.time.convert.NullConverter:<init>(), org.joda.time.chrono.BaseChronology:hourOfHalfday(), org.joda.time.format.ISODateTimeFormat$Constants:time(), org.joda.time.DateTime:minusWeeks(int), org.joda.time.Years:isGreaterThan(org.joda.time.Years), org.joda.time.format.DateTimePrinterInternalPrinter:<init>(org.joda.time.format.DateTimePrinter), org.joda.time.chrono.GJLocaleSymbols:dayOfWeekValueToShortText(int), org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long), org.joda.time.chrono.BasicChronology:year(), org.joda.time.Months:<clinit>(), org.joda.time.DateTimeFieldType:access$1200(), org.joda.time.field.AbstractReadableInstantFieldProperty:getAsShortText(java.util.Locale), org.joda.time.field.DelegatedDurationField:getDifferenceAsLong(long-long), org.joda.time.Interval:getChronology(), org.joda.time.Weeks:toStandardSeconds(), org.joda.time.JodaTimePermission:<init>(java.lang.String), org.joda.time.field.PreciseDateTimeField:set(long-int), java.lang.StringBuffer:length(), java.util.List:get(int), org.joda.time.DateTimeZone:parseOffset(java.lang.String), org.joda.time.format.PeriodFormat$DynamicWordBased:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.field.UnsupportedDateTimeField:getLeapAmount(long), org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-org.joda.time.Chronology), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.field.BaseDateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale), org.joda.time.field.DelegatedDateTimeField:addWrapField(long-int), org.joda.time.format.PeriodFormatterBuilder$Composite:decompose(java.util.List-java.util.List-java.util.List), org.joda.time.format.PeriodFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.tz.ZoneInfoCompiler:getStartOfYear(), org.joda.time.YearMonth:plusYears(int), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getDifferenceAsLong(long-long), java.lang.Class:forName(java.lang.String-boolean-java.lang.ClassLoader), org.joda.time.field.ScaledDurationField:getType(), org.joda.time.tz.ZoneInfoCompiler$Zone:addToBuilder(org.joda.time.tz.DateTimeZoneBuilder-java.util.Map), java.util.Collection:iterator(), org.joda.time.chrono.ISOYearOfEraDateTimeField:getDifference(long-long), org.joda.time.DateMidnight:<init>(java.lang.Object), org.joda.time.chrono.GJEraDateTimeField:getAsText(int-java.util.Locale), org.joda.time.chrono.BaseChronology:weekyear(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.ReadWritableInstant:setChronology(org.joda.time.Chronology), org.joda.time.PeriodType:yearWeekDayTime(), org.joda.time.field.AbstractReadableInstantFieldProperty:get(), org.joda.time.convert.CalendarConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.tz.DateTimeZoneBuilder$Rule:toString(), org.joda.time.DateTime:withDurationAdded(long-int), org.joda.time.field.BaseDurationField:toString(), java.util.Date:<init>(int-int-int), java.util.StringTokenizer:<init>(java.lang.String-java.lang.String), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDateTimeNoMillis(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:roundFloor(long), org.joda.time.DurationFieldType:weeks(), org.joda.time.chrono.BasicChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.format.PeriodFormat:buildNonRegExFormatter(java.util.ResourceBundle-java.util.Locale), org.joda.time.field.DelegatedDateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale), java.lang.StringBuffer:append(char), org.joda.time.format.DateTimeFormatterBuilder:appendYear(int-int), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecondFraction(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.Chronology:years(), java.lang.StringBuffer:<init>(), org.joda.time.LocalDateTime:getValue(int), org.joda.time.Weeks:<init>(int), org.joda.time.MutableInterval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant), org.joda.time.format.ISODateTimeFormat$Constants:access$3600(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldType(), org.joda.time.field.UnsupportedDurationField:getValue(long-long), org.joda.time.field.ScaledDurationField:getMillis(int), org.joda.time.Seconds:toStandardHours(), org.joda.time.Months:plus(org.joda.time.Months), org.joda.time.MutableInterval:setEnd(org.joda.time.ReadableInstant), org.joda.time.tz.DefaultNameProvider:getShortName(java.util.Locale-java.lang.String-java.lang.String), org.joda.time.base.AbstractPeriod:size(), org.joda.time.field.UnsupportedDurationField:<init>(org.joda.time.DurationFieldType), org.joda.time.tz.DateTimeZoneBuilder:setFixedSavings(java.lang.String-int), org.joda.time.chrono.ZonedChronology:hashCode(), org.joda.time.LocalDate:<init>(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormat:mediumDateTime(), org.joda.time.chrono.LimitChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.DateTimeUtils:toJulianDay(long), org.joda.time.DurationFieldType:eras(), org.joda.time.YearMonthDay:getField(int), org.joda.time.DateTimeField:getDurationField(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:set(long-java.lang.String-java.util.Locale), java.util.GregorianCalendar:<init>(), org.joda.time.chrono.CopticChronology:getInstance(), org.joda.time.field.UnsupportedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.DateMidnight:year(), org.joda.time.DateTime:minusYears(int), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), org.joda.time.DateTimeZone:forOffsetHoursMinutes(int-int), org.joda.time.base.AbstractInstant:toMutableDateTime(org.joda.time.DateTimeZone), org.joda.time.MonthDay:property(org.joda.time.DateTimeFieldType), org.joda.time.LocalDateTime$Property:getMaximumValue(), org.joda.time.MutablePeriod:<init>(org.joda.time.PeriodType), org.joda.time.DateTime:weekOfWeekyear(), org.joda.time.field.UnsupportedDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.DateTimeUtils$SystemMillisProvider:getMillis(), org.joda.time.chrono.ISOYearOfEraDateTimeField:<init>(), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.chrono.ZonedChronology:<init>(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.LocalDateTime:plusMillis(int), org.joda.time.chrono.BasicDayOfMonthDateTimeField:isLeap(long), org.joda.time.convert.ConverterSet:selectSlow(org.joda.time.convert.ConverterSet-java.lang.Class), org.joda.time.DateMidnight:minusMonths(int), org.joda.time.chrono.IslamicChronology:getYearDifference(long-long), org.joda.time.DateMidnight$Property:addToCopy(long), org.joda.time.field.UnsupportedDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.base.BasePartial:setValues(int[]), org.joda.time.format.DateTimeFormatterBuilder$TextField:print(long-org.joda.time.Chronology-java.util.Locale), org.joda.time.LocalTime:withMillisOfSecond(int), org.joda.time.chrono.BasicSingleEraDateTimeField:set(long-int), org.joda.time.chrono.GJChronology:get(org.joda.time.ReadablePartial-long), org.joda.time.chrono.BasicMonthOfYearDateTimeField:getLeapDurationField(), org.joda.time.format.DateTimeFormat:longTime(), org.joda.time.Days:<clinit>(), org.joda.time.tz.ZoneInfoCompiler$Rule:toString(), org.joda.time.YearMonthDay:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.chrono.IslamicChronology:getDayOfMonth(long), org.joda.time.format.DateTimeParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.String-int), java.util.Arrays:equals(java.lang.Object[]-java.lang.Object[]), org.joda.time.LocalTime:getMillisOfSecond(), org.joda.time.format.PeriodFormatterBuilder$Separator:<init>(java.lang.String-java.lang.String-java.lang.String[]-org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-boolean-boolean), org.joda.time.field.SkipDateTimeField:getType(), org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType), java.lang.ClassLoader:getSystemResourceAsStream(java.lang.String), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.chrono.GJMonthOfYearDateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.LocalDateTime:withHourOfDay(int), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:matchesOtherAffix(int-java.lang.String-int), org.joda.time.DateTimeComparator:equals(java.lang.Object), org.joda.time.Duration:dividedBy(long), org.joda.time.Weeks:weeksBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.field.OffsetDateTimeField:set(long-int), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField), org.joda.time.format.DateTimeFormat:isNumericToken(java.lang.String), org.joda.time.YearMonthDay:minusYears(int), org.joda.time.DateTimeFieldType:year(), org.joda.time.chrono.GJYearOfEraDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getMillis(long-long), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:isLeapYear(int), org.joda.time.chrono.BasicFixedMonthChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.chrono.LimitChronology$LimitException:getMessage(), org.joda.time.base.BaseDateTime:checkChronology(org.joda.time.Chronology), org.joda.time.MonthDay:getValues(), org.joda.time.DateTimeFieldType:getName(), java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.format.ISODateTimeFormat:dateOptionalTimeParser(), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.field.DecoratedDateTimeField:getDurationField(), org.joda.time.TimeOfDay:plusSeconds(int), org.joda.time.LocalDate$Property:withMaximumValue(), org.joda.time.base.AbstractInterval:hashCode(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:calculatePrintedLength(int), org.joda.time.format.ISODateTimeFormat$Constants:access$4100(), org.joda.time.DateTimeFieldType:access$1000(), org.joda.time.convert.ReadableDurationConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology), org.joda.time.MutablePeriod:set(org.joda.time.DurationFieldType-int), org.joda.time.IllegalInstantException:getMessage(), org.joda.time.field.DelegatedDurationField:toString(), org.joda.time.base.BaseLocal:getLocalMillis(), java.lang.String:indexOf(int), org.joda.time.MonthDay:parse(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.MonthDay:getDayOfMonth(), java.util.Collections:unmodifiableMap(java.util.Map), java.util.concurrent.atomic.AtomicReferenceArray:<init>(int), org.joda.time.TimeOfDay:getFieldTypes(), org.joda.time.ReadWritablePeriod:setPeriod(org.joda.time.ReadablePeriod), org.joda.time.base.BaseDateTime:setMillis(long), org.joda.time.field.PreciseDurationDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField), org.joda.time.DateMidnight:<init>(int-int-int), org.joda.time.format.DateTimeParserInternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.Partial:toString(java.lang.String), org.joda.time.PeriodType:time(), java.lang.Object:hashCode(), org.joda.time.field.MillisDurationField:getType(), java.util.TreeSet:<init>(java.util.Collection), java.util.Date:getSeconds(), org.joda.time.base.AbstractPartial:<init>(), org.joda.time.MonthDay:<init>(org.joda.time.Chronology), org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), java.io.DataOutputStream:close(), java.lang.Appendable:append(java.lang.CharSequence), org.joda.time.LocalTime:minus(org.joda.time.ReadablePeriod), org.joda.time.base.AbstractInterval:contains(org.joda.time.ReadableInstant), org.joda.time.LocalDateTime:yearOfEra(), org.joda.time.Weeks:negated(), org.joda.time.LocalDateTime:getField(int-org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat:weekDate(), org.joda.time.field.BaseDurationField:<init>(org.joda.time.DurationFieldType), org.joda.time.field.UnsupportedDateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale), org.joda.time.YearMonth:<init>(int-int-org.joda.time.Chronology), org.joda.time.MutableDateTime:setMinuteOfHour(int), org.joda.time.IllegalFieldValueException:getIllegalValueAsString(), org.joda.time.YearMonthDay:indexOfSupported(org.joda.time.DateTimeFieldType), java.util.Map$Entry:getKey(), org.joda.time.chrono.EthiopicChronology:monthOfYear(), java.util.Calendar:get(int), org.joda.time.format.PeriodFormatterBuilder$Composite:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology), org.joda.time.DateTime:dayOfWeek(), org.joda.time.chrono.LimitChronology$LimitDurationField:getDifference(long-long), org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey:hashCode(), org.joda.time.DateTimeZone:toTimeZone(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.YearMonth:now(), org.joda.time.LocalDate:<init>(java.lang.Object), org.joda.time.convert.AbstractConverter:getSupportedType(), org.joda.time.Period:minutes(int), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:scan(java.lang.String-int), org.joda.time.Period:getValues(), org.joda.time.format.DateTimeFormat$StyleFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.chrono.GJChronology:julianToGregorianByYear(long), org.joda.time.LocalDateTime:withSecondOfMinute(int), org.joda.time.chrono.BasicChronology:weekyears(), org.joda.time.YearMonth:toInterval(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.CopticChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.format.DateTimeFormatterBuilder$Composite:<init>(java.util.List), org.joda.time.Weeks:toStandardDays(), org.joda.time.tz.ZoneInfoProvider:openResource(java.lang.String), org.joda.time.Seconds:multipliedBy(int), org.joda.time.YearMonth:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.tz.ZoneInfoCompiler:parseZoneChar(char), org.joda.time.field.DecoratedDurationField:getMillis(int-long), java.lang.CharSequence:charAt(int), org.joda.time.Duration:toStandardDays(), org.joda.time.Weeks:getWeeks(), org.joda.time.chrono.GJChronology:getParam(), java.lang.Character:isWhitespace(char), org.joda.time.base.AbstractPartial:getField(int-org.joda.time.Chronology), org.joda.time.field.DelegatedDurationField:getValueAsLong(long), org.joda.time.tz.CachedDateTimeZone:getOffset(long), java.util.Arrays:sort(java.lang.Object[]-int-int), org.joda.time.Seconds:dividedBy(int), org.joda.time.format.ISODateTimeFormat:dateHourMinuteSecond(), org.joda.time.DateTimeUtils:setDefaultTimeZoneNames(java.util.Map), org.joda.time.chrono.BasicFixedMonthChronology:getDateTimeMillis(int-int-int-int), org.joda.time.YearMonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.LocalTime:readResolve(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:previous(long-int-int), org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:<init>(java.lang.String), org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.convert.ConverterSet:size(), org.joda.time.LocalTime$Property:withMinimumValue(), org.joda.time.format.PeriodFormatterBuilder:printZeroAlways(), org.joda.time.LocalTime$Property:addCopy(long), org.joda.time.TimeOfDay$Property:addToCopy(int), org.joda.time.Partial$Property:withMinimumValue(), org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(long-int), org.joda.time.base.BasePeriod:addFieldInto(int[]-org.joda.time.DurationFieldType-int), org.joda.time.base.AbstractPartial:isEqual(org.joda.time.ReadablePartial), org.joda.time.Instant:parse(java.lang.String), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:<clinit>(), org.joda.time.format.ISODateTimeFormat:hour(), org.joda.time.format.ISODateTimeFormat$Constants:dateTimeParser(), org.joda.time.DateTimeUtils$OffsetMillisProvider:getMillis(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.MutableDateTime:setDayOfYear(int), org.joda.time.Days:readResolve(), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String-java.lang.String), org.joda.time.chrono.GJLocaleSymbols:getMonthMaxShortTextLength(), org.joda.time.field.UnsupportedDateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.format.FormatUtils:writePaddedInteger(java.io.Writer-int-int), org.joda.time.format.PeriodFormatterBuilder:toFormatter(java.util.List-boolean-boolean), org.joda.time.format.ISODateTimeFormat$Constants:access$3700(), org.joda.time.DateMidnight:withEra(int), org.joda.time.DateTimeFieldType:access$1600(), org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.chrono.GJChronology$CutoverField:getDifferenceAsLong(long-long), org.joda.time.MutableInterval:copy(), org.joda.time.field.UnsupportedDateTimeField:getMinimumValue(), org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue(), org.joda.time.field.SkipUndoDateTimeField:getType(), org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant), org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.field.AbstractPartialFieldProperty:getFieldType(), org.joda.time.Hours:toStandardMinutes(), org.joda.time.DurationFieldType:minutes(), org.joda.time.YearMonth:toString(), org.joda.time.DateTimeZone:convertToAsciiNumber(java.lang.String), org.joda.time.DateTimeZone:forOffsetHours(int), org.joda.time.DateTimeZone$LazyInit$1:toString(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology), org.joda.time.Period:seconds(int), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.tz.DateTimeZoneBuilder$Transition:toString(), org.joda.time.MutableDateTime:yearOfEra(), org.joda.time.Days:getDays(), org.joda.time.LocalDate:withDayOfWeek(int), org.joda.time.format.InternalParserDateTimeParser:equals(java.lang.Object), org.joda.time.field.DelegatedDateTimeField:getMaximumValue(long), java.lang.Integer:getInteger(java.lang.String), org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.format.PeriodFormat$DynamicWordBased:getParser(java.util.Locale), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:add(long-long), org.joda.time.Period:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant), org.joda.time.Hours:multipliedBy(int), org.joda.time.chrono.JulianChronology:minuteOfDay(), java.util.ArrayList:<init>(java.util.Collection), org.joda.time.base.AbstractInterval:getEnd(), org.joda.time.DurationField:toString(), org.joda.time.field.DelegatedDateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Period:multipliedBy(int), org.joda.time.PeriodType:hours(), org.joda.time.field.BaseDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.TimeOfDay:hourOfDay(), org.joda.time.chrono.ISOChronology:getInstance(), java.util.TimeZone:getDSTSavings(), java.lang.StringBuilder:length(), org.joda.time.field.UnsupportedDateTimeField:add(long-int), org.joda.time.chrono.LimitChronology$LimitDateTimeField:<init>(org.joda.time.chrono.LimitChronology-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getAsText(long-java.util.Locale), org.joda.time.chrono.BasicChronology:weekOfWeekyear(), org.joda.time.field.ScaledDurationField:getMillis(int-long), org.joda.time.format.DateTimeFormatterBuilder:appendWeekOfWeekyear(int), java.lang.Boolean:valueOf(boolean), org.joda.time.LocalDate:<init>(org.joda.time.Chronology), org.joda.time.LocalTime:now(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.Minutes:plus(org.joda.time.Minutes), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfSecond(int-int), org.joda.time.DateTimeField:getMaximumValue(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser), org.joda.time.Years:minus(int), org.joda.time.TimeOfDay:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.LocalDate:getYearOfCentury(), org.joda.time.TimeOfDay:<init>(int-int-int), org.joda.time.DateTime:minusMillis(int), org.joda.time.field.UnsupportedDateTimeField:readResolve(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:setFieldValue(org.joda.time.ReadWritablePeriod-int-int), org.joda.time.YearMonthDay:<init>(java.lang.Object), org.joda.time.chrono.GJLocaleSymbols:getDayOfWeekMaxTextLength(), org.joda.time.chrono.ZonedChronology:equals(java.lang.Object), org.joda.time.field.AbstractPartialFieldProperty:getAsText(java.util.Locale), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.Period:plusMonths(int), org.joda.time.convert.PeriodConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology), java.lang.UnsupportedOperationException:<init>(), org.joda.time.ReadWritablePeriod:setMinutes(int), org.joda.time.base.AbstractInstant:toMutableDateTime(org.joda.time.Chronology), org.joda.time.Seconds:getValue(), org.joda.time.DateTime$Property:setCopy(java.lang.String-java.util.Locale), java.lang.IllegalArgumentException:getMessage(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey(), org.joda.time.YearMonth$Property:get(), java.util.Map:putAll(java.util.Map), org.joda.time.chrono.JulianChronology:dayOfYear(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setUpperLimit(int-org.joda.time.tz.DateTimeZoneBuilder$OfYear), java.util.ArrayList:size(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]), org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.StrictChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.chrono.BasicChronology:isLeapDay(long), org.joda.time.tz.FixedDateTimeZone:<init>(java.lang.String-java.lang.String-int-int), org.joda.time.format.PeriodFormat:wordBased(), org.joda.time.LocalTime:fromCalendarFields(java.util.Calendar), org.joda.time.Seconds:secondsBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.LocalDate:toDateTimeAtMidnight(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormat:shortTime(), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:printTo(java.io.Writer-int), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.format.DateTimeParserBucket:access$102(org.joda.time.format.DateTimeParserBucket-java.lang.Integer), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.Minutes:toString(), org.joda.time.base.AbstractPartial:equals(java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:main(java.lang.String[]), org.joda.time.field.BaseDateTimeField:getAsText(int-java.util.Locale), org.joda.time.ReadWritablePeriod:setYears(int), org.joda.time.field.UnsupportedDateTimeField:roundHalfCeiling(long), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecond(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.TimeOfDay:property(org.joda.time.DateTimeFieldType), org.joda.time.Minutes:getPeriodType(), org.joda.time.chrono.LimitChronology$LimitDurationField:getValueAsLong(long-long), org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.InputStream-java.lang.String), java.lang.StringBuffer:toString(), java.util.Calendar:set(int-int-int-int-int-int), java.math.BigDecimal:longValue(), org.joda.time.format.DateTimeFormatterBuilder$TextField:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.DateTimeUtils$SystemMillisProvider:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[]), org.joda.time.chrono.JulianChronology:adjustYearForSet(int), java.util.concurrent.atomic.AtomicReference:compareAndSet(java.lang.Object-java.lang.Object), org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableDuration), org.joda.time.convert.ConverterSet:remove(org.joda.time.convert.Converter-org.joda.time.convert.Converter[]), org.joda.time.field.DelegatedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.chrono.GJChronology:convertByWeekyear(long-org.joda.time.Chronology-org.joda.time.Chronology), org.joda.time.Period:getDays(), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), org.joda.time.LocalDateTime:getYear(), java.lang.CharSequence:length(), org.joda.time.chrono.GJYearOfEraDateTimeField:addWrapField(long-int), org.joda.time.YearMonthDay:<init>(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:toJulianDayNumber(long), org.joda.time.chrono.GJMonthOfYearDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.chrono.BaseChronology:clockhourOfHalfday(), java.lang.Math:abs(int), org.joda.time.LocalDate:toDateTime(org.joda.time.LocalTime), org.joda.time.format.ISODateTimeFormat$Constants:timeNoMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:rename(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(long), org.joda.time.chrono.LimitChronology:hashCode(), org.joda.time.MutablePeriod:toPeriod(), org.joda.time.DurationField:getMillis(long-long), org.joda.time.base.BasePeriod:setPeriodInternal(org.joda.time.ReadablePeriod), org.joda.time.Days:dividedBy(int), org.joda.time.base.AbstractPeriod:toString(), org.joda.time.chrono.IslamicChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.Partial:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.base.BaseSingleFieldPeriod:getValue(int), org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.LocalDate:isBefore(org.joda.time.ReadablePartial), org.joda.time.Seconds:plus(org.joda.time.Seconds), org.joda.time.MonthDay$Property:addToCopy(int), org.joda.time.base.AbstractPartial:compareTo(java.lang.Object), org.joda.time.DateTimeZone:getOffset(org.joda.time.ReadableInstant), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.format.InternalParserDateTimeParser:of(org.joda.time.format.InternalParser), org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-long-org.joda.time.Chronology), org.joda.time.field.AbstractReadableInstantFieldProperty:equals(java.lang.Object), org.joda.time.YearMonth:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.format.PeriodFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]), org.joda.time.DateTimeZone:fixedOffsetZone(java.lang.String-int), org.joda.time.DateTimeFieldType:access$2200(), org.joda.time.format.DateTimeParserBucket:access$300(org.joda.time.format.DateTimeParserBucket), org.joda.time.LocalDate:toDate(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.String), org.joda.time.format.PeriodPrinter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.base.AbstractDateTime:toString(), org.joda.time.base.AbstractInstant:isAfter(org.joda.time.ReadableInstant), java.util.Arrays:equals(int[]-int[]), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:printTo(java.io.Writer-int), org.joda.time.Chronology:yearOfEra(), org.joda.time.DateTime:hourOfDay(), org.joda.time.chrono.BaseChronology:getDateTimeMillis(int-int-int-int), org.joda.time.DateTimeZone:getName(long), org.joda.time.format.ISODateTimeFormat:<init>(), org.joda.time.DateTime:withMillis(long), org.joda.time.field.BaseDateTimeField:getDurationField(), org.joda.time.tz.ZoneInfoCompiler$Rule:formatName(java.lang.String-int-java.lang.String), org.joda.time.chrono.GJChronology:getBase(), org.joda.time.YearMonth:withMonthOfYear(int), org.joda.time.MutablePeriod:parse(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter), org.joda.time.chrono.GJChronology$CutoverField:getAsText(int-java.util.Locale), org.joda.time.base.AbstractPartial:indexOf(org.joda.time.DurationFieldType), org.joda.time.YearMonthDay$Property:<init>(org.joda.time.YearMonthDay-int), org.joda.time.format.DateTimeFormatter:printTo(java.io.Writer-long), org.joda.time.chrono.LimitChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.convert.ConverterManager:getInstantConverters(), org.joda.time.DateTimeFieldType:access$300(), org.joda.time.Instant:<init>(java.lang.Object), org.joda.time.ReadableInterval:getChronology(), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int), org.joda.time.LocalDate:getYearOfEra(), org.joda.time.LocalDate:toLocalDateTime(org.joda.time.LocalTime), org.joda.time.field.UnsupportedDurationField:equals(java.lang.Object), org.joda.time.format.InternalPrinterDateTimePrinter:estimatePrintedLength(), org.joda.time.YearMonthDay:toString(), org.joda.time.format.DateTimeFormatterBuilder:toFormatter(), org.joda.time.MutableDateTime:setDate(int-int-int), org.joda.time.DateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale), org.joda.time.DurationField:isPrecise(), org.joda.time.DateTime$Property:setCopy(int), org.joda.time.format.PeriodFormatterBuilder:access$200(), org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.chrono.JulianChronology:equals(java.lang.Object), org.joda.time.DateMidnight:dayOfMonth(), java.lang.UnsupportedOperationException:<init>(java.lang.String), org.joda.time.MutableDateTime:set(org.joda.time.DateTimeFieldType-int), org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), org.joda.time.chrono.EthiopicChronology:toString(), org.joda.time.DateTime:<init>(long-org.joda.time.DateTimeZone), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:selectSuffixIndex(int), org.joda.time.LocalDate:getChronology(), org.joda.time.chrono.BasicGJChronology:getYear(long), org.joda.time.Seconds:negated(), org.joda.time.base.BasePeriod:indexOf(org.joda.time.DurationFieldType), org.joda.time.MutableDateTime:setSecondOfDay(int), java.util.Map:get(java.lang.Object), org.joda.time.LocalDateTime:now(), org.joda.time.format.ISODateTimeFormat:dateHourMinute(), org.joda.time.format.PeriodFormatterBuilder:toPrinter(), org.joda.time.Hours:toStandardSeconds(), java.io.File:isDirectory(), org.joda.time.DateTimeComparator:getLowerLimit(), org.joda.time.chrono.JulianChronology:millisOfSecond(), java.lang.IndexOutOfBoundsException:<init>(), org.joda.time.chrono.CopticChronology:monthOfYear(), org.joda.time.base.BaseDuration:<init>(java.lang.Object), org.joda.time.chrono.GJYearOfEraDateTimeField:getRangeDurationField(), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYearShortText(), org.joda.time.format.PeriodFormatter:getPrinter(), org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:writeTo(java.io.DataOutput), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:matchesOtherAffix(int-java.lang.String-int), org.joda.time.TimeOfDay:withSecondOfMinute(int), org.joda.time.format.DateTimeFormatterBuilder:getFormatter(), org.joda.time.DurationFieldType:months(), org.joda.time.base.AbstractDuration:compareTo(org.joda.time.ReadableDuration), org.joda.time.base.AbstractInterval:overlaps(org.joda.time.ReadableInterval), org.joda.time.DateTime:minuteOfHour(), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getMillis(long-long), org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumTextLength(java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.Instant:getChronology(), org.joda.time.Partial:without(org.joda.time.DateTimeFieldType), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:calculatePrintedLength(int), org.joda.time.LocalDate:<init>(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:add(long-int), org.joda.time.format.ISODateTimeFormat:timeNoMillis(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getDifferenceAsLong(long-long), org.joda.time.convert.ConverterManager:removeInstantConverter(org.joda.time.convert.InstantConverter), org.joda.time.format.ISODateTimeFormat$Constants:access$1300(), java.util.List:set(int-java.lang.Object), org.joda.time.PeriodType:days(), org.joda.time.MutablePeriod:<init>(long-org.joda.time.Chronology), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long-boolean), org.joda.time.format.DateTimeParserBucket:access$000(org.joda.time.format.DateTimeParserBucket), org.joda.time.field.FieldUtils:<init>(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.DateTimeUtils$OffsetMillisProvider:<init>(long), org.joda.time.MutableDateTime:addMonths(int), org.joda.time.ReadablePartial:getField(int), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:scan(java.lang.String-int), org.joda.time.field.ScaledDurationField:getMillis(long-long), org.joda.time.chrono.GJChronology:hashCode(), org.joda.time.tz.DateTimeZoneBuilder$Rule:next(long-int-int), org.joda.time.DateTimeFieldType:access$400(), org.joda.time.convert.ReadablePeriodConverter:getPeriodType(java.lang.Object), org.joda.time.DateTimeField:getAsText(long), org.joda.time.Seconds:toStandardDays(), org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.io.Writer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.GJChronology$CutoverField:get(long), org.joda.time.MutableDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone), org.joda.time.field.FieldUtils:safeDivide(long-long-java.math.RoundingMode), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[]), org.joda.time.LocalDate:dayOfMonth(), org.joda.time.YearMonth:<init>(org.joda.time.Chronology), org.joda.time.DateMidnight:now(), org.joda.time.base.AbstractInstant:getZone(), org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String), org.joda.time.chrono.BasicChronology:getDayOfYear(long), org.joda.time.format.DateTimeFormatterBuilder:appendWeekyear(int-int), org.joda.time.Period:fieldDifference(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.LocalTime:withHourOfDay(int), org.joda.time.format.FormatUtils:writePaddedInteger(java.io.Writer-long-int), org.joda.time.LocalDateTime:getWeekyear(), org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableInterval), org.joda.time.Minutes:plus(int), org.joda.time.DurationField:<init>(), org.joda.time.chrono.EthiopicChronology:getMinimumDaysInFirstWeek(), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:scan(java.lang.String-int), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.chrono.GJChronology:toString(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMinimumValueOverall(), org.joda.time.chrono.BasicChronology:eras(), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuilder-long), org.joda.time.tz.NameProvider:getName(java.util.Locale-java.lang.String-java.lang.String), org.joda.time.LocalDate:getField(int-org.joda.time.Chronology), org.joda.time.Seconds:<clinit>(), org.joda.time.DateTimeFieldType:weekOfWeekyear(), org.joda.time.chrono.GJChronology:getInstance(), org.joda.time.Weeks:getFieldType(), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.LocalDateTime:dayOfMonth(), org.joda.time.field.PreciseDurationField:add(long-int), org.joda.time.Duration:<init>(long), org.joda.time.LocalDateTime$Property:withMaximumValue(), org.joda.time.DateTime:monthOfYear(), org.joda.time.DateTime:plus(org.joda.time.ReadableDuration), org.joda.time.format.DateTimeFormat:parseToken(java.lang.String-int[]), org.joda.time.format.DateTimeFormatterBuilder:appendYearOfEra(int-int), org.joda.time.LocalDateTime:property(org.joda.time.DateTimeFieldType), org.joda.time.chrono.GregorianChronology:readResolve(), org.joda.time.DateTimeUtils:getReadableInterval(org.joda.time.ReadableInterval), org.joda.time.DateTimeUtils:<clinit>(), org.joda.time.DateTime:getChronology(), org.joda.time.field.DelegatedDateTimeField:getMaximumTextLength(java.util.Locale), java.util.HashMap:<init>(int), org.joda.time.field.UnsupportedDurationField:unsupported(), java.util.TreeMap:size(), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long), org.joda.time.DateTime:toDateTime(org.joda.time.Chronology), org.joda.time.chrono.EthiopicChronology:getBase(), org.joda.time.DateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder$Composite:isPrinter(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:getDifferenceAsLong(long-long), java.lang.String[]:clone(), org.joda.time.DateTimeFieldType:access$200(), java.util.concurrent.atomic.AtomicReferenceArray:compareAndSet(int-java.lang.Object-java.lang.Object), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.Minutes:getFieldType(), org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.chrono.GJLocaleSymbols:realignMonths(java.lang.String[]), org.joda.time.MonthDay:monthOfYear(), org.joda.time.Period:toString(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(long-int), org.joda.time.format.ISODateTimeFormat$Constants:hourMinute(), org.joda.time.tz.DateTimeZoneBuilder$Rule:getToYear(), org.joda.time.chrono.GJYearOfEraDateTimeField:get(long), org.joda.time.format.DateTimeFormatter:parseInto(org.joda.time.ReadWritableInstant-java.lang.String-int), org.joda.time.YearMonthDay:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.field.BaseDurationField:getValueAsLong(long-long), org.joda.time.TimeOfDay:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.chrono.BasicChronology$HalfdayField:getMaximumTextLength(java.util.Locale), java.lang.StringBuilder:charAt(int), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneName(), org.joda.time.YearMonthDay$Property:withMinimumValue(), org.joda.time.base.AbstractInstant:toDateTimeISO(), org.joda.time.Hours:toStandardDays(), org.joda.time.Partial:isMatch(org.joda.time.ReadablePartial), org.joda.time.chrono.BasicGJChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.MutablePeriod:getWeeks(), org.joda.time.chrono.GJLocaleSymbols:addSymbols(java.util.TreeMap-java.lang.String[]-java.lang.Integer[]), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getID(), org.joda.time.field.DelegatedDurationField:getName(), java.io.ObjectInputStream:defaultReadObject(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long), org.joda.time.field.UnsupportedDateTimeField:roundFloor(long), org.joda.time.chrono.BasicWeekyearDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.DateMidnight:monthOfYear(), org.joda.time.MutableDateTime:setWeekyear(int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-org.joda.time.Chronology), org.joda.time.field.PreciseDateTimeField:getUnitMillis(), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:<init>(org.joda.time.field.ImpreciseDateTimeField-org.joda.time.DurationFieldType), org.joda.time.chrono.GJLocaleSymbols:<init>(java.util.Locale), org.joda.time.chrono.GJChronology$CutoverField:roundCeiling(long), org.joda.time.Hours:negated(), org.joda.time.format.ISODateTimeFormat$Constants:access$700(), java.io.Writer:write(int), org.joda.time.chrono.ZonedChronology$ZonedDurationField:add(long-long), org.joda.time.format.DateTimeParserBucket:doParseMillis(org.joda.time.format.InternalParser-java.lang.CharSequence), org.joda.time.YearMonth$Property:setCopy(java.lang.String), org.joda.time.Chronology:millis(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.String), org.joda.time.Duration:plus(org.joda.time.ReadableDuration), org.joda.time.DateTimeZone:equals(java.lang.Object), org.joda.time.field.ZeroIsMaxDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:plus(org.joda.time.ReadablePeriod), org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.YearMonthDay:getValues(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:<init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix), org.joda.time.format.DateTimeFormat$StyleFormatter:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.YearMonth:<init>(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder$Fraction:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.Partial:with(org.joda.time.DateTimeFieldType-int), org.joda.time.LocalDate$Property:getMillis(), org.joda.time.tz.ZoneInfoCompiler$Rule:<init>(org.joda.time.tz.ZoneInfoCompiler$Rule), org.joda.time.LocalTime:getField(int-org.joda.time.Chronology), org.joda.time.field.DelegatedDurationField:compareTo(java.lang.Object), java.util.Date:getDate(), org.joda.time.format.ISODateTimeFormat$Constants:weekDateTime(), org.joda.time.Hours:<clinit>(), org.joda.time.Chronology:minuteOfDay(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:isLeap(long), org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(int-int), org.joda.time.base.BasePeriod:setFieldInto(int[]-org.joda.time.DurationFieldType-int), org.joda.time.convert.ConverterManager:getDurationConverter(java.lang.Object), org.joda.time.convert.ConverterManager:toString(), org.joda.time.DateTime:property(org.joda.time.DateTimeFieldType), org.joda.time.TimeOfDay:fromDateFields(java.util.Date), org.joda.time.MonthDay:fromCalendarFields(java.util.Calendar), org.joda.time.Seconds:minus(org.joda.time.Seconds), org.joda.time.DateMidnight:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.Chronology:secondOfDay(), org.joda.time.DateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), org.joda.time.MutablePeriod:getValues(), org.joda.time.chrono.AssembledChronology$Fields:<init>(), org.joda.time.format.PeriodPrinter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.chrono.IslamicChronology:hashCode(), org.joda.time.base.BasePeriod:<clinit>(), org.joda.time.chrono.BuddhistChronology:readResolve(), org.joda.time.chrono.BasicWeekyearDateTimeField:roundFloor(long), org.joda.time.DateTimeComparator:readResolve(), org.joda.time.base.AbstractPartial:getValue(int), org.joda.time.Years:plus(int), org.joda.time.chrono.ISOChronology:equals(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:access$1500(), org.joda.time.PeriodType:hashCode(), org.joda.time.format.DateTimePrinter:estimatePrintedLength(), org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.chrono.IslamicChronology$LeapYearPatternType), org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(long-int), org.joda.time.format.PeriodFormat$DynamicWordBased:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField), org.joda.time.LocalTime:millisOfDay(), org.joda.time.chrono.GJCacheKey:hashCode(), org.joda.time.LocalDateTime:getMonthOfYear(), org.joda.time.convert.ConverterSet:add(org.joda.time.convert.Converter-org.joda.time.convert.Converter[]), org.joda.time.LocalTime:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:parse(java.lang.String-int), org.joda.time.DateTimeFieldType[]:clone(), org.joda.time.chrono.BasicGJChronology:dayOfMonth(), java.util.Set:remove(java.lang.Object), org.joda.time.chrono.BaseChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.LocalDate:toDateMidnight(), org.joda.time.DateTimeFieldType:access$900(), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long-int), org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.ReadWritableInterval:setInterval(org.joda.time.ReadableInterval), org.joda.time.Duration:millis(long), org.joda.time.YearMonthDay:getYear(), org.joda.time.format.PeriodFormatterBuilder$Composite:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.Period:plusYears(int), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue(), org.joda.time.field.DelegatedDurationField:getUnitMillis(), org.joda.time.format.DateTimeParserBucket:access$200(org.joda.time.format.DateTimeParserBucket), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:scan(java.lang.String-int), org.joda.time.field.BaseDateTimeField:getAsShortText(long), org.joda.time.IllegalInstantException:createMessage(long-java.lang.String), org.joda.time.format.DateTimeFormat:<init>(), org.joda.time.DateTime:<init>(int-int-int-int-int), org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumValueOverall(), org.joda.time.Months:monthsIn(org.joda.time.ReadableInterval), org.joda.time.Minutes:minus(int), org.joda.time.MutableDateTime:addSeconds(int), org.joda.time.DurationField:getValueAsLong(long), org.joda.time.base.BaseSingleFieldPeriod:equals(java.lang.Object), org.joda.time.base.AbstractDateTime:getSecondOfDay(), org.joda.time.format.InternalParserDateTimeParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.field.UnsupportedDateTimeField:getDurationField(), org.joda.time.DateTime:withCenturyOfEra(int), org.joda.time.DateTime:withTime(org.joda.time.LocalTime), org.joda.time.MutableDateTime:<init>(long), org.joda.time.field.AbstractPartialFieldProperty:compareTo(org.joda.time.ReadableInstant), org.joda.time.chrono.BuddhistChronology:hashCode(), org.joda.time.base.AbstractDateTime:getEra(), org.joda.time.MonthDay:plusDays(int), org.joda.time.convert.ConverterManager:addInstantConverter(org.joda.time.convert.InstantConverter), org.joda.time.LocalDate:equals(java.lang.Object), org.joda.time.YearMonth:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.DateTimeFieldType:access$500(), org.joda.time.Chronology:weekyear(), org.joda.time.LocalDate:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), java.io.DataOutput:writeBoolean(boolean), org.joda.time.Period:getMillis(), org.joda.time.format.PeriodFormatterBuilder$Separator:access$000(org.joda.time.format.PeriodFormatterBuilder$Separator), org.joda.time.Seconds:toString(), org.joda.time.field.DividedDateTimeField:getDifferenceAsLong(long-long), org.joda.time.ReadWritablePeriod:setDays(int), org.joda.time.MonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.YearMonthDay:toDateTime(org.joda.time.TimeOfDay), org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:parseLocalDate(java.lang.String), org.joda.time.LocalDate:toDateTimeAtMidnight(), org.joda.time.field.BaseDateTimeField:roundHalfCeiling(long), java.lang.ref.SoftReference:get(), org.joda.time.base.AbstractInstant:get(org.joda.time.DateTimeField), org.joda.time.format.DateTimeFormatterBuilder:appendPattern(java.lang.String), org.joda.time.Period:years(int), org.joda.time.field.RemainderDateTimeField:remainder(long), java.lang.reflect.Constructor:newInstance(java.lang.Object[]), org.joda.time.field.DelegatedDurationField:hashCode(), org.joda.time.Period:withMillis(int), org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.convert.InstantConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.Chronology:year(), org.joda.time.field.RemainderDateTimeField:addWrapField(long-int), java.util.Date:getHours(), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.Interval:withPeriodBeforeEnd(org.joda.time.ReadablePeriod), org.joda.time.MonthDay:now(), org.joda.time.Partial:size(), org.joda.time.PeriodType:yearMonthDayTime(), org.joda.time.LocalDate:withWeekOfWeekyear(int), org.joda.time.LocalDateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.Months:<init>(int), org.joda.time.Chronology:centuryOfEra(), org.joda.time.LocalDate:<clinit>(), org.joda.time.DateTimeUtils:checkPermission(), org.joda.time.chrono.BasicChronology$HalfdayField:set(long-int), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.DateMidnight:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.tz.DateTimeZoneBuilder$OfYear:equals(java.lang.Object), org.joda.time.field.DelegatedDateTimeField:getAsShortText(long), org.joda.time.ReadablePartial:getChronology(), org.joda.time.tz.DefaultNameProvider:createCache(), java.util.TreeMap:get(java.lang.Object), org.joda.time.LocalDateTime:equals(java.lang.Object), java.lang.String:charAt(int), org.joda.time.chrono.GJEraDateTimeField:roundHalfCeiling(long), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DateMidnight:weekOfWeekyear(), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.chrono.ISOChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.LocalDateTime:getChronology(), org.joda.time.DateTime:toTimeOfDay(), org.joda.time.MutableDateTime:<init>(), org.joda.time.field.PreciseDurationDateTimeField:roundFloor(long), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDateTimeNoMillis(), org.joda.time.LocalDateTime:<init>(), org.joda.time.base.AbstractInstant:hashCode(), org.joda.time.chrono.GJLocaleSymbols:dayOfWeekValueToText(int), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int), org.joda.time.chrono.BaseChronology:yearOfCentury(), org.joda.time.field.BaseDateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.DateTimeZone:isStandardOffset(long), org.joda.time.Days:minus(int), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:firstTransition(long), java.util.Enumeration:nextElement(), org.joda.time.MutableDateTime:addWeeks(int), org.joda.time.chrono.LimitChronology$LimitDurationField:<init>(org.joda.time.chrono.LimitChronology-org.joda.time.DurationField), org.joda.time.field.BaseDurationField:getValue(long-long), org.joda.time.chrono.GJYearOfEraDateTimeField:add(long-int), org.joda.time.DateTime:now(org.joda.time.DateTimeZone), org.joda.time.base.AbstractDuration:getMillis(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.convert.ConverterSet:select(java.lang.Class), org.joda.time.MutablePeriod:setMillis(int), org.joda.time.LocalTime:<init>(), org.joda.time.MonthDay:toString(java.lang.String), org.joda.time.TimeOfDay$Property:addWrapFieldToCopy(int), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setFixedSavings(java.lang.String-int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(java.lang.CharSequence-int-int), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:<init>(java.lang.String[]-java.lang.String[]), org.joda.time.DateTime:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.Interval:gap(org.joda.time.ReadableInterval), org.joda.time.base.AbstractInterval:toPeriod(org.joda.time.PeriodType), org.joda.time.Period:weeks(int), org.joda.time.chrono.ZonedChronology:withUTC(), org.joda.time.chrono.JulianChronology:clockhourOfHalfday(), org.joda.time.Weeks:plus(org.joda.time.Weeks), org.joda.time.MutableDateTime:addDays(int), org.joda.time.format.ISODateTimeFormat:basicWeekDateTimeNoMillis(), org.joda.time.chrono.LenientChronology:<init>(org.joda.time.Chronology), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<clinit>(), org.joda.time.LocalTime:minusSeconds(int), org.joda.time.Partial:withPeriodAdded(org.joda.time.ReadablePeriod-int), java.util.Calendar:clear(), org.joda.time.chrono.ZonedChronology:getParam(), org.joda.time.MonthDay:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.MutableDateTime:setTime(long), org.joda.time.field.ScaledDurationField:getDifference(long-long), org.joda.time.convert.ConverterManager:<init>(), org.joda.time.field.FieldUtils:safeDivide(long-long), org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int), java.io.File:mkdirs(), org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration), org.joda.time.Period:toMutablePeriod(), org.joda.time.LocalTime:getValue(int), org.joda.time.format.ISODateTimeFormat$Constants:secondElement(), org.joda.time.MutableDateTime:dayOfMonth(), org.joda.time.chrono.BaseChronology:monthOfYear(), org.joda.time.Period:parse(java.lang.String-org.joda.time.format.PeriodFormatter), org.joda.time.Period:millis(int), org.joda.time.LocalDate:plusWeeks(int), org.joda.time.base.AbstractDuration:hashCode(), org.joda.time.LocalTime:<init>(long), org.joda.time.convert.ConverterManager:addIntervalConverter(org.joda.time.convert.IntervalConverter), java.util.Date:setTime(long), org.joda.time.YearMonth:parse(java.lang.String), java.io.File:getName(), java.util.HashMap:<init>(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(long), org.joda.time.convert.ConverterManager:addPartialConverter(org.joda.time.convert.PartialConverter), org.joda.time.field.AbstractPartialFieldProperty:getRangeDurationField(), org.joda.time.field.ImpreciseDateTimeField:getDifferenceAsLong(long-long), java.lang.reflect.Method:invoke(java.lang.Object-java.lang.Object[]), org.joda.time.chrono.BasicChronology:weekyear(), org.joda.time.chrono.ISOChronology:monthOfYear(), java.lang.String:substring(int-int), java.io.ObjectInputStream:readUTF(), org.joda.time.MutablePeriod:clear(), org.joda.time.DateTime$Property:addToCopy(int), org.joda.time.format.ISODateTimeFormat$Constants:access$2100(), org.joda.time.base.AbstractPartial:isAfter(org.joda.time.ReadablePartial), org.joda.time.MutableDateTime$Property:getMillis(), org.joda.time.Interval:withChronology(org.joda.time.Chronology), org.joda.time.DateTime:now(), org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.LocalDateTime:withDayOfYear(int), org.joda.time.base.AbstractPeriod:toString(org.joda.time.format.PeriodFormatter), org.joda.time.chrono.GJLocaleSymbols:dayOfWeekTextToValue(java.lang.String), org.joda.time.LocalDate$Property:roundCeilingCopy(), org.joda.time.MutableDateTime:setHourOfDay(int), org.joda.time.DateTimeZone:getAvailableIDs(), org.joda.time.field.LenientDateTimeField:getInstance(org.joda.time.DateTimeField-org.joda.time.Chronology), org.joda.time.format.ISOPeriodFormat:alternateExtendedWithWeeks(), org.joda.time.chrono.GJLocaleSymbols:monthOfYearValueToText(int), org.joda.time.field.StrictDateTimeField:getMaximumValue(long), org.joda.time.LocalDate:getWeekOfWeekyear(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial), java.util.List:subList(int-int), org.joda.time.chrono.ZonedChronology$ZonedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DateTimeZone), org.joda.time.base.AbstractPartial:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.chrono.BasicGJChronology:equals(java.lang.Object), org.joda.time.chrono.GJChronology$CutoverField:getLeapDurationField(), org.joda.time.LocalDateTime:withDurationAdded(org.joda.time.ReadableDuration-int), org.joda.time.LocalDate:minusDays(int), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getMillis(int-long), org.joda.time.MutableInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.DurationField:getMillis(long), org.joda.time.ReadWritableInstant:getMillis(), org.joda.time.field.UnsupportedDateTimeField:getAsText(long-java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:matchesOtherAffix(int-java.lang.String-int), org.joda.time.chrono.StrictChronology:getBase(), org.joda.time.chrono.BasicChronology:getDaysInMonthMax(int), org.joda.time.Period:plusWeeks(int), org.joda.time.Period:hours(int), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.format.FormatUtils:calculateDigitCount(long), org.joda.time.TimeOfDay$Property:withMaximumValue(), org.joda.time.Days:getFieldType(), org.joda.time.base.AbstractDuration:isEqual(org.joda.time.ReadableDuration), java.lang.ThreadLocal:set(java.lang.Object), java.text.DateFormatSymbols:getEras(), org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType), org.joda.time.format.DateTimeParserBucket:setOffset(int), java.io.DataOutput:writeShort(int), org.joda.time.convert.ConverterManager:removePartialConverter(org.joda.time.convert.PartialConverter), org.joda.time.Seconds:minus(int), org.joda.time.DateMidnight:plusWeeks(int), org.joda.time.format.DateTimeFormatterBuilder$TextField:print(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.chrono.BasicChronology:getMinimumDaysInFirstWeek(), java.security.AccessController:doPrivileged(java.security.PrivilegedAction), java.lang.ClassLoader:getResourceAsStream(java.lang.String), org.joda.time.chrono.BasicFixedMonthChronology:getDayOfYear(long), org.joda.time.format.InternalPrinterDateTimePrinter:equals(java.lang.Object), org.joda.time.Hours:<init>(int), org.joda.time.LocalDate:toDateTime(org.joda.time.LocalTime-org.joda.time.DateTimeZone), org.joda.time.chrono.GJDayOfWeekDateTimeField:convertText(java.lang.String-java.util.Locale), org.joda.time.ReadWritablePeriod:setHours(int), org.joda.time.LocalDateTime:getWeekOfWeekyear(), org.joda.time.format.DateTimeFormatterBuilder:appendHourOfDay(int), org.joda.time.Partial:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.Minutes:minutesIn(org.joda.time.ReadableInterval), org.joda.time.chrono.IslamicChronology:getBase(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.chrono.ISOChronology$Stub:<init>(org.joda.time.DateTimeZone), org.joda.time.chrono.EthiopicChronology:isLeapDay(long), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:calculatePrintedLength(int), org.joda.time.base.BaseSingleFieldPeriod:hashCode(), org.joda.time.Duration:parse(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(java.io.DataInput), org.joda.time.Duration:<init>(long-long), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.chrono.AssembledChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.Hours:hours(int), org.joda.time.chrono.BasicChronology:years(), org.joda.time.DateMidnight:toLocalDate(), org.joda.time.Days:daysBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.format.DateTimeFormatterBuilder:appendCenturyOfEra(int-int), org.joda.time.chrono.GJLocaleSymbols:getMonthMaxTextLength(), org.joda.time.LocalDateTime:plusSeconds(int), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int), org.joda.time.Hours:minus(int), org.joda.time.chrono.CopticChronology:isLeapDay(long), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.io.Writer-int), org.joda.time.format.DateTimeFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]), org.joda.time.Minutes:standardMinutesIn(org.joda.time.ReadablePeriod), org.joda.time.chrono.BuddhistChronology:getInstance(org.joda.time.DateTimeZone), java.io.DataOutput:writeInt(int), org.joda.time.format.PeriodFormatterBuilder$Literal:<init>(java.lang.String), org.joda.time.tz.FixedDateTimeZone:equals(java.lang.Object), java.lang.Math:min(int-int), org.joda.time.chrono.BasicChronology:getWeekyear(long), java.util.concurrent.atomic.AtomicReferenceArray:length(), org.joda.time.format.DateTimeFormat:appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder-java.lang.String), org.joda.time.field.ZeroIsMaxDateTimeField:getLeapAmount(long), java.lang.Long:longValue(), org.joda.time.format.DateTimeParserBucket$SavedField:compareTo(java.lang.Object), org.joda.time.chrono.BasicYearDateTimeField:get(long), java.util.GregorianCalendar:setTime(java.util.Date), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.MutableDateTime:addMillis(int), org.joda.time.LocalTime:withMinuteOfHour(int), org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.DateMidnight:withWeekyear(int), org.joda.time.field.BaseDateTimeField:get(long), org.joda.time.DateTimeUtils:setCurrentMillisSystem(), org.joda.time.MutableDateTime:setZone(org.joda.time.DateTimeZone), org.joda.time.YearMonth:toString(java.lang.String-java.util.Locale), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[]), org.joda.time.MutablePeriod:copy(), org.joda.time.chrono.IslamicChronology:getMinimumDaysInFirstWeek(), org.joda.time.Weeks:dividedBy(int), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:printTo(java.io.Writer-int), java.util.TreeMap:<init>(), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.LocalTime:plusMinutes(int), java.lang.IllegalStateException:<init>(java.lang.String), org.joda.time.format.PeriodFormatter:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int), org.joda.time.chrono.BaseChronology:days(), org.joda.time.format.ISODateTimeFormat$Constants:tTime(), org.joda.time.DateTime:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.LocalDateTime:withDayOfWeek(int), org.joda.time.chrono.ISOYearOfEraDateTimeField:add(long-long), org.joda.time.format.ISODateTimeFormat$Constants:weekyearElement(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-boolean-int-int), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.MonthDay:toString(java.lang.String-java.util.Locale), org.joda.time.YearMonthDay:indexOf(org.joda.time.DurationFieldType), org.joda.time.base.BaseSingleFieldPeriod:toPeriod(), org.joda.time.chrono.GJChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:getTwoDigitYear(org.joda.time.ReadablePartial), org.joda.time.YearMonthDay:minus(org.joda.time.ReadablePeriod), org.joda.time.tz.DefaultNameProvider:getShortName(java.util.Locale-java.lang.String-java.lang.String-boolean), org.joda.time.MonthDay$Property:setCopy(java.lang.String), org.joda.time.Instant:minus(long), org.joda.time.DateTimeZone:getName(long-java.util.Locale), org.joda.time.MutablePeriod:addYears(int), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.chrono.BasicChronology:getYearMonthMillis(int-int), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:getUpperLimit(int), org.joda.time.Weeks:toStandardMinutes(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>(org.joda.time.tz.DateTimeZoneBuilder$RuleSet), org.joda.time.MutableDateTime$Property:set(int), org.joda.time.field.DelegatedDurationField:getMillis(long), org.joda.time.chrono.BaseChronology:dayOfYear(), org.joda.time.Period:withFields(org.joda.time.ReadablePeriod), org.joda.time.LocalDate:centuryOfEra(), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:equals(java.lang.Object), org.joda.time.convert.InstantConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.Partial:getValue(int), org.joda.time.Interval:withStartMillis(long), java.util.TreeMap:values(), org.joda.time.field.AbstractReadableInstantFieldProperty:getLeapDurationField(), org.joda.time.format.DateTimeFormatterBuilder:appendShortText(org.joda.time.DateTimeFieldType), org.joda.time.YearMonthDay:getDayOfMonth(), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-long-int), java.lang.String:length(), java.util.Iterator:next(), org.joda.time.DateMidnight:toInterval(), org.joda.time.LocalDate:withFields(org.joda.time.ReadablePartial), org.joda.time.Chronology:centuries(), org.joda.time.chrono.ISOYearOfEraDateTimeField:getMaximumValue(), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeekShortText(), org.joda.time.DurationField:getMillis(int), org.joda.time.TimeOfDay:minusMinutes(int), org.joda.time.base.AbstractInstant:toDate(), org.joda.time.format.ISODateTimeFormat$Constants:localTimeParser(), java.lang.String:split(java.lang.String), org.joda.time.base.BaseDuration:getMillis(), org.joda.time.format.ISODateTimeFormat$Constants:dateHour(), org.joda.time.YearMonthDay:minusDays(int), org.joda.time.Partial:property(org.joda.time.DateTimeFieldType), org.joda.time.chrono.GJChronology$CutoverField:julianToGregorian(long), org.joda.time.TimeOfDay:<init>(int-int-int-int-org.joda.time.Chronology), org.joda.time.Minutes:toStandardDays(), org.joda.time.format.ISODateTimeFormat$Constants:<init>(), org.joda.time.ReadableInterval:toDurationMillis(), org.joda.time.LocalDate:plusYears(int), org.joda.time.chrono.BasicChronology:access$000(), org.joda.time.base.AbstractPartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.Partial$Property:getField(), org.joda.time.format.PeriodFormatterBuilder$Literal:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.LocalDate:withYearOfEra(int), org.joda.time.format.DateTimeFormat:fullDate(), org.joda.time.chrono.BasicChronology:days(), org.joda.time.field.RemainderDateTimeField:roundHalfEven(long), org.joda.time.MutableInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration), org.joda.time.ReadableDateTime:isBefore(org.joda.time.ReadableInstant), org.joda.time.TimeOfDay:plus(org.joda.time.ReadablePeriod), org.joda.time.base.AbstractDuration:isShorterThan(org.joda.time.ReadableDuration), org.joda.time.convert.AbstractConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.base.AbstractDuration:<init>(), org.joda.time.LocalDate:minus(org.joda.time.ReadablePeriod), org.joda.time.Days:toStandardMinutes(), org.joda.time.LocalDate$Property:getChronology(), org.joda.time.MonthDay:<init>(long), org.joda.time.DurationField:getName(), org.joda.time.chrono.EthiopicChronology:isLeapYear(int), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.tz.DateTimeZoneBuilder$Transition:isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition), java.lang.Class:getClassLoader(), org.joda.time.Instant:plus(long), org.joda.time.LocalDateTime:<init>(org.joda.time.DateTimeZone), org.joda.time.Minutes:readResolve(), org.joda.time.format.DateTimeParserBucket:access$100(org.joda.time.format.DateTimeParserBucket), org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.DateTimeFieldType:<clinit>(), org.joda.time.chrono.LimitChronology:getLowerLimit(), java.lang.ClassCastException:<init>(java.lang.String), org.joda.time.convert.Converter:getSupportedType(), org.joda.time.LocalDateTime:yearOfCentury(), java.lang.String:hashCode(), org.joda.time.field.DividedDateTimeField:getType(), org.joda.time.convert.ReadableInstantConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.format.PeriodFormatterBuilder$Separator:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.ReadWritableInstant:setZone(org.joda.time.DateTimeZone), org.joda.time.field.UnsupportedDateTimeField:getMaximumValue(), org.joda.time.LocalTime:secondOfMinute(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField), org.joda.time.Interval:withPeriodAfterStart(org.joda.time.ReadablePeriod), java.lang.String:equalsIgnoreCase(java.lang.String), org.joda.time.LocalDate:withMonthOfYear(int), org.joda.time.Instant:hashCode(), org.joda.time.YearMonthDay$Property:addToCopy(int), org.joda.time.field.UnsupportedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.Period:checkYearsAndMonths(java.lang.String), org.joda.time.PeriodType:withYearsRemoved(), org.joda.time.chrono.ZonedChronology:getDateTimeMillis(int-int-int-int), org.joda.time.base.BasePeriod:mergePeriod(org.joda.time.ReadablePeriod), org.joda.time.MonthDay:getChronology(), org.joda.time.MonthDay:indexOf(org.joda.time.DurationFieldType), org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int), org.joda.time.MutableDateTime:getMillisOfDay(), org.joda.time.LocalDateTime:withWeekOfWeekyear(int), org.joda.time.chrono.IslamicChronology:getYearMonthDayMillis(int-int-int), org.joda.time.base.AbstractPartial:compareTo(org.joda.time.ReadablePartial), org.joda.time.chrono.CopticChronology:getDateTimeMillis(int-int-int-int), java.lang.Math:max(int-int), org.joda.time.chrono.LimitChronology$LimitDurationField:getMillis(int-long), org.joda.time.field.BaseDateTimeField:add(long-long), java.util.Set:add(java.lang.Object), org.joda.time.chrono.GregorianChronology:getZone(), org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(long), org.joda.time.Chronology:days(), org.joda.time.MutableInterval:setStart(org.joda.time.ReadableInstant), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]-boolean-boolean), org.joda.time.LocalDate:<init>(int-int-int), org.joda.time.chrono.StrictChronology:equals(java.lang.Object), org.joda.time.Partial:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.MutablePeriod:getYears(), org.joda.time.base.AbstractInterval:getStart(), org.joda.time.base.BasePeriod:getValue(int), org.joda.time.DateTimeZone:setProvider(org.joda.time.tz.Provider), org.joda.time.convert.StringConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.LocalDateTime:fromDateFields(java.util.Date), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeekText(), org.joda.time.LocalDateTime:millisOfDay(), org.joda.time.chrono.EthiopicChronology:calculateFirstDayOfYearMillis(int), org.joda.time.format.DateTimeParserBucket:computeMillis(), org.joda.time.format.ISODateTimeFormat:basicOrdinalDate(), org.joda.time.MutableDateTime:toDateTime(), org.joda.time.field.UnsupportedDateTimeField:getAsText(long), org.joda.time.base.AbstractPeriod:equals(java.lang.Object), org.joda.time.chrono.BasicDayOfYearDateTimeField:isLeap(long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsText(long-java.util.Locale), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDateTime(), org.joda.time.LocalDate$Property:readObject(java.io.ObjectInputStream), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDate(), org.joda.time.Hours:readResolve(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.chrono.LimitChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:setCurrentMillisFixed(long), org.joda.time.DateTimeUtils:setCurrentMillisOffset(long), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadableInstant), org.joda.time.Chronology:toString(), org.joda.time.chrono.BasicGJChronology:getYearMonthDayMillis(int-int-int), org.joda.time.chrono.GJChronology$CutoverField:set(long-int), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalDateTime:toString(java.lang.String), org.joda.time.YearMonthDay:plusDays(int), java.util.Calendar:setTime(java.util.Date), org.joda.time.LocalDate:<init>(long-org.joda.time.DateTimeZone), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecondMillis(), org.joda.time.Interval:getStartMillis(), org.joda.time.Weeks:weeksIn(org.joda.time.ReadableInterval), java.text.DateFormat:getDateInstance(int-java.util.Locale), org.joda.time.field.UnsupportedDurationField:toString(), org.joda.time.chrono.CopticChronology:getBase(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalDate:withLocalMillis(long), org.joda.time.field.BaseDateTimeField:getMaximumValue(long), org.joda.time.field.AbstractReadableInstantFieldProperty:isLeap(), org.joda.time.ReadWritablePeriod:setSeconds(int), org.joda.time.Period:<clinit>(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.JulianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getStandardOffset(long), org.joda.time.chrono.JulianChronology:year(), java.io.FileReader:<init>(java.io.File), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:readResolve(), org.joda.time.base.AbstractDateTime:<init>(), org.joda.time.DateTime:plusSeconds(int), org.joda.time.format.ISODateTimeFormat:dateTime(), org.joda.time.chrono.IslamicChronology:getZone(), org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.chrono.IslamicChronology:getInstanceUTC(), org.joda.time.chrono.GregorianChronology:millisOfDay(), org.joda.time.base.BasePeriod:addPeriod(org.joda.time.ReadablePeriod), org.joda.time.TimeOfDay:millisOfSecond(), java.io.File:<init>(java.io.File-java.lang.String), org.joda.time.field.UnsupportedDurationField:add(long-long), org.joda.time.Months:isLessThan(org.joda.time.Months), org.joda.time.Seconds:toStandardWeeks(), org.joda.time.DateTimeZone:getStandardOffset(long), org.joda.time.LocalDateTime:getMillisOfDay(), org.joda.time.LocalDateTime$Property:roundHalfCeilingCopy(), org.joda.time.TimeOfDay:<init>(org.joda.time.Chronology), org.joda.time.base.AbstractInterval:containsNow(), org.joda.time.DateTimeFieldType:weekyearOfCentury(), org.joda.time.chrono.BasicMonthOfYearDateTimeField:getDifference(long-long), org.joda.time.base.AbstractInterval:isEqual(org.joda.time.ReadableInterval), org.joda.time.field.DelegatedDurationField:compareTo(org.joda.time.DurationField), org.joda.time.YearMonthDay:getField(int-org.joda.time.Chronology), org.joda.time.chrono.IslamicChronology:<clinit>(), org.joda.time.chrono.BasicYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.LocalTime:plus(org.joda.time.ReadablePeriod), org.joda.time.Partial$Property:getMaximumValue(), java.util.Calendar:getTime(), org.joda.time.chrono.BaseChronology:centuryOfEra(), org.joda.time.Period:withPeriodType(org.joda.time.PeriodType), org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.MutableDateTime:centuryOfEra(), org.joda.time.YearMonthDay:toInterval(org.joda.time.DateTimeZone), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.UnsupportedDurationField:add(long-int), org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.tz.CachedDateTimeZone:createInfo(long), org.joda.time.LocalDateTime:<init>(long-org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:add(org.joda.time.ReadableDuration-int), java.util.TreeSet:<init>(java.util.Comparator), org.joda.time.LocalDateTime:toString(java.lang.String-java.util.Locale), org.joda.time.base.AbstractPeriod:getFieldTypes(), org.joda.time.field.DelegatedDateTimeField:getAsText(long-java.util.Locale), org.joda.time.format.ISODateTimeFormat$Constants:weekyearWeekDay(), org.joda.time.chrono.GJChronology:getDateTimeMillis(int-int-int-int), org.joda.time.Minutes:minutesBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.Period:withMonths(int), org.joda.time.LocalDateTime:getYearOfEra(), org.joda.time.format.ISODateTimeFormat$Constants:access$900(), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinute(), org.joda.time.DurationField:getUnitMillis(), org.joda.time.format.ISODateTimeFormat:tTime(), org.joda.time.field.PreciseDurationDateTimeField:set(long-int), org.joda.time.DateTimeField:isLenient(), org.joda.time.DateTimeZone$LazyInit:<clinit>(), org.joda.time.LocalTime:now(), org.joda.time.chrono.JulianChronology:getBase(), org.joda.time.tz.ZoneInfoCompiler$Zone:<init>(java.util.StringTokenizer), org.joda.time.YearMonthDay:plusYears(int), org.joda.time.chrono.GJChronology$CutoverField:set(long-java.lang.String-java.util.Locale), org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.DateTimeUtils:setCurrentMillisProvider(org.joda.time.DateTimeUtils$MillisProvider), java.lang.String:substring(int), org.joda.time.YearMonth:minusYears(int), org.joda.time.base.AbstractInstant:toDateTime(org.joda.time.Chronology), org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.SkipDateTimeField:getMaximumValue(), org.joda.time.chrono.ZonedChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.DateMidnight:withDurationAdded(org.joda.time.ReadableDuration-int), org.joda.time.IllegalFieldValueException:<init>(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundHalfEven(long), org.joda.time.LocalDateTime$Property:roundFloorCopy(), org.joda.time.YearMonthDay:getChronology(), org.joda.time.chrono.GregorianChronology:toString(), org.joda.time.field.BaseDateTimeField:getAsText(long), org.joda.time.LocalDate:getYear(), org.joda.time.ReadWritablePeriod:getPeriodType(), org.joda.time.Chronology:hours(), org.joda.time.LocalDate:monthOfYear(), org.joda.time.field.DelegatedDurationField:equals(java.lang.Object), java.util.TreeMap:<init>(java.util.Comparator), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getUnitMillis(), org.joda.time.YearMonth:minusMonths(int), org.joda.time.format.DateTimeFormat:createDateTimeFormatter(int-int), org.joda.time.chrono.StrictChronology:hashCode(), org.joda.time.field.ZeroIsMaxDateTimeField:getLeapDurationField(), org.joda.time.Partial:getFieldTypes(), org.joda.time.Hours:standardHoursIn(org.joda.time.ReadablePeriod), org.joda.time.LocalDate$Property:withMinimumValue(), org.joda.time.DateTime:dayOfMonth(), org.joda.time.field.UnsupportedDateTimeField:getAsText(int-java.util.Locale), java.io.OutputStream:close(), java.util.Locale:hashCode(), org.joda.time.Partial:withChronologyRetainFields(org.joda.time.Chronology), org.joda.time.format.PeriodFormatter:checkPrinter(), org.joda.time.format.PeriodFormat$DynamicWordBased:<init>(org.joda.time.format.PeriodFormatter), org.joda.time.YearMonthDay:minusMonths(int), org.joda.time.DateMidnight:withYear(int), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.tz.ZoneInfoLogger:set(boolean), org.joda.time.base.BaseDateTime:toDateTimeISO(), org.joda.time.format.DateTimeFormatterBuilder$Composite:isParser(), org.joda.time.format.DateTimeParserInternalParser:estimateParsedLength(), org.joda.time.format.PeriodFormat:<init>(), org.joda.time.DateTimeField:getDifference(long-long), org.joda.time.Months:getPeriodType(), org.joda.time.tz.CachedDateTimeZone:getNameKey(long), org.joda.time.base.AbstractPartial:getFieldTypes(), org.joda.time.YearMonth:<init>(long), org.joda.time.chrono.GJDayOfWeekDateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.base.BaseDateTime:setChronology(org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat$Constants:weekElement(), org.joda.time.DateTimeFieldType:toString(), org.joda.time.tz.CachedDateTimeZone:isFixed(), org.joda.time.MonthDay:plus(org.joda.time.ReadablePeriod), org.joda.time.Interval:parseWithOffset(java.lang.String), java.util.TreeSet:add(java.lang.Object), org.joda.time.field.DelegatedDateTimeField:getName(), org.joda.time.Days:isGreaterThan(org.joda.time.Days), org.joda.time.field.UnsupportedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.LocalDate:toDateTimeAtCurrentTime(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:setMillisOfDay(int), org.joda.time.Days:getValue(), org.joda.time.LocalTime:toString(), org.joda.time.LocalDateTime:minusMonths(int), org.joda.time.Minutes:toStandardHours(), org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitYear(int), org.joda.time.chrono.BasicChronology:getYearDifference(long-long), org.joda.time.format.DateTimePrinterInternalPrinter:getUnderlying(), org.joda.time.LocalDateTime:hourOfDay(), org.joda.time.MutableDateTime$Property:getMaximumValueOverall(), org.joda.time.field.RemainderDateTimeField:set(long-int), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int), org.joda.time.MutableInterval:clone(), org.joda.time.LocalDate:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:getParser0(), org.joda.time.field.MillisDurationField:compareTo(java.lang.Object), org.joda.time.Months:readResolve(), org.joda.time.DateMidnight:withDayOfMonth(int), org.joda.time.Weeks:standardWeeksIn(org.joda.time.ReadablePeriod), org.joda.time.field.BaseDurationField:getName(), org.joda.time.chrono.IslamicChronology:getInstance(), org.joda.time.chrono.GJChronology:equals(java.lang.Object), org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.LocalDateTime:minusYears(int), org.joda.time.DateTimeComparator:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType), org.joda.time.MonthDay:withDayOfMonth(int), org.joda.time.base.AbstractDateTime:getZone(), org.joda.time.chrono.GJChronology:gregorianToJulianByYear(long), org.joda.time.base.AbstractDuration:compareTo(java.lang.Object), org.joda.time.DateTime:withZoneRetainFields(org.joda.time.DateTimeZone), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setStandardOffset(int), org.joda.time.field.UnsupportedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale), org.joda.time.LocalTime:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.field.MillisDurationField:getDifferenceAsLong(long-long), org.joda.time.format.ISODateTimeFormat$Constants:access$3100(), org.joda.time.field.AbstractPartialFieldProperty:equals(java.lang.Object), org.joda.time.base.AbstractPartial:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.format.DateTimeFormatterBuilder:appendUnknownString(java.lang.Appendable-int), org.joda.time.format.PeriodFormatter:print(org.joda.time.ReadablePeriod), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Transition), org.joda.time.DateTime:toDateTimeISO(), org.joda.time.LocalTime:toString(java.lang.String), org.joda.time.field.DividedDateTimeField:set(long-int), org.joda.time.chrono.BuddhistChronology:getInstance(), org.joda.time.chrono.GJLocaleSymbols:eraTextToValue(java.lang.String), org.joda.time.format.DateTimeParserInternalParser:<init>(org.joda.time.format.DateTimeParser), org.joda.time.base.AbstractInterval:<init>(), org.joda.time.YearMonthDay$Property:addWrapFieldToCopy(int), org.joda.time.LocalDate:getDayOfYear(), org.joda.time.YearMonth:<init>(int-int), org.joda.time.field.ImpreciseDateTimeField:add(long-long), org.joda.time.DateMidnight:<init>(org.joda.time.DateTimeZone), org.joda.time.PeriodType:getName(), org.joda.time.LocalDate:toDateTimeAtStartOfDay(), org.joda.time.field.BaseDateTimeField:remainder(long), org.joda.time.field.DelegatedDurationField:isPrecise(), org.joda.time.LocalDateTime$Property:withMinimumValue(), org.joda.time.chrono.BasicChronology:months(), org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType), org.joda.time.tz.ZoneInfoCompiler:getLenientISOChronology(), org.joda.time.tz.ZoneInfoCompiler:parseDataFile(java.io.BufferedReader-boolean), org.joda.time.LocalTime:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.chrono.LimitChronology:getDateTimeMillis(int-int-int-int), org.joda.time.format.DateTimeParserBucket:access$202(org.joda.time.format.DateTimeParserBucket-org.joda.time.format.DateTimeParserBucket$SavedField[]), org.joda.time.field.BaseDateTimeField:getName(), org.joda.time.format.DateTimeFormatterBuilder$TextField:estimateParsedLength(), org.joda.time.LocalDateTime:withFields(org.joda.time.ReadablePartial), org.joda.time.base.AbstractPartial:size(), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.field.RemainderDateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.MutableDateTime$Property:roundHalfEven(), org.joda.time.tz.DefaultNameProvider:<init>(), org.joda.time.TimeOfDay:<init>(), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getRangeDurationField(), org.joda.time.format.DateTimePrinter:printTo(java.lang.StringBuffer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.convert.LongConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.YearMonth:withChronologyRetainFields(org.joda.time.Chronology), org.joda.time.Partial:getValues(), org.joda.time.LocalTime:minusMillis(int), org.joda.time.chrono.BasicChronology:dayOfMonth(), org.joda.time.field.ScaledDurationField:add(long-int), org.joda.time.LocalDateTime$Property:writeObject(java.io.ObjectOutputStream), org.joda.time.format.PeriodFormatterBuilder:appendYears(), org.joda.time.field.DelegatedDateTimeField:set(long-java.lang.String), org.joda.time.base.BaseSingleFieldPeriod:compareTo(org.joda.time.base.BaseSingleFieldPeriod), org.joda.time.field.DelegatedDateTimeField:getAsText(long), org.joda.time.PeriodType:months(), org.joda.time.LocalDate:withCenturyOfEra(int), org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.Period:getHours(), org.joda.time.MutablePeriod:<init>(long-org.joda.time.PeriodType), org.joda.time.Interval:withStart(org.joda.time.ReadableInstant), java.lang.Boolean:booleanValue(), org.joda.time.format.FormatUtils:<clinit>(), org.joda.time.base.AbstractInstant:isEqualNow(), org.joda.time.chrono.GregorianChronology:getInstanceUTC(), org.joda.time.field.UnsupportedDateTimeField:getDifferenceAsLong(long-long), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableDuration-org.joda.time.Chronology), org.joda.time.format.PeriodFormatter:checkPeriod(org.joda.time.ReadablePeriod), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getValue(long-long), org.joda.time.base.BasePartial:<init>(int[]-org.joda.time.Chronology), org.joda.time.base.AbstractInstant:toString(), org.joda.time.DateTimeZone:getShortName(long-java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:eraValueToText(int), org.joda.time.convert.ReadablePartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology), org.joda.time.field.BaseDurationField:getDifference(long-long), org.joda.time.DateMidnight:<init>(int-int-int-org.joda.time.Chronology), org.joda.time.chrono.CopticChronology:calculateFirstDayOfYearMillis(int), org.joda.time.format.ISODateTimeFormat$Constants:monthElement(), org.joda.time.TimeOfDay:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.format.PeriodFormatterBuilder:appendSeconds(), org.joda.time.DateTimeField:addWrapField(long-int), java.util.regex.Pattern:compile(java.lang.String), org.joda.time.MutableDateTime:<init>(long-org.joda.time.DateTimeZone), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-long), org.joda.time.field.UnsupportedDateTimeField:getName(), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getRangeDurationField(), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.CharSequence), org.joda.time.DateTime:minusDays(int), org.joda.time.Minutes:<clinit>(), org.joda.time.chrono.BasicGJChronology:setYear(long-int), org.joda.time.convert.ConverterManager:removeIntervalConverter(org.joda.time.convert.IntervalConverter), org.joda.time.format.ISODateTimeFormat$Constants:basicTTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:access$3500(), org.joda.time.MutablePeriod:setWeeks(int), org.joda.time.DurationFieldType:getName(), org.joda.time.DateTime:withEra(int), org.joda.time.Duration:getStandardMinutes(), org.joda.time.format.ISODateTimeFormat:hourMinuteSecondFraction(), org.joda.time.chrono.BasicWeekyearDateTimeField:set(long-int), org.joda.time.format.DateTimeParserBucket:restoreState(java.lang.Object), org.joda.time.field.ZeroIsMaxDateTimeField:add(long-long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:add(long-long), org.joda.time.format.ISODateTimeFormat$Constants:dateTime(), org.joda.time.Duration:toStandardSeconds(), org.joda.time.ReadableInstant:toInstant(), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuilder-org.joda.time.ReadableInstant), org.joda.time.format.InternalParserDateTimeParser:estimateParsedLength(), org.joda.time.LocalDateTime:millisOfSecond(), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long), java.util.Locale:getDefault(), org.joda.time.MutablePeriod:setPeriod(long), org.joda.time.MutablePeriod:add(long-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatterBuilder:isPrinter(java.lang.Object), org.joda.time.DateTime$Property:getChronology(), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:<init>(int-java.util.Map), org.joda.time.DateMidnight:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), org.joda.time.TimeOfDay:<init>(java.lang.Object), org.joda.time.MonthDay:indexOfSupported(org.joda.time.DurationFieldType), java.io.InputStream:close(), org.joda.time.Period:getMonths(), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:addCutover(org.joda.time.tz.DateTimeZoneBuilder-int), org.joda.time.Chronology:dayOfYear(), org.joda.time.MutableInterval:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneShortName(), org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(java.io.DataInput-java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:<init>(java.lang.String-java.lang.String-boolean-int-int), org.joda.time.field.StrictDateTimeField:set(long-int), org.joda.time.DateMidnight$Property:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.MutableDateTime:setDate(org.joda.time.ReadableInstant), org.joda.time.field.BaseDateTimeField:add(long-int), org.joda.time.chrono.GJCacheKey:<init>(org.joda.time.DateTimeZone-org.joda.time.Instant-int), java.lang.Character:isDigit(char), org.joda.time.chrono.GJEraDateTimeField:roundHalfEven(long), org.joda.time.format.PeriodFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod), org.joda.time.MonthDay$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.chrono.BasicGJChronology:isLeapDay(long), org.joda.time.LocalDateTime:withYearOfEra(int), org.joda.time.format.ISODateTimeFormat$Constants:access$500(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.DateTimeUtils:getIntervalChronology(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.base.AbstractDuration:toDuration(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getLeapAmount(long), org.joda.time.DateTime:<init>(), org.joda.time.convert.ConverterSet$Entry:<init>(java.lang.Class-org.joda.time.convert.Converter), org.joda.time.format.ISODateTimeFormat:timeParser(), org.joda.time.MutablePeriod:addMillis(int), org.joda.time.base.BaseSingleFieldPeriod:getFieldType(), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getValueAsLong(long-long), org.joda.time.Period:<init>(int-int-int-int-int-int-int-int), org.joda.time.IllegalInstantException:<init>(long-java.lang.String), org.joda.time.chrono.BasicChronology:getDateTimeMillis(int-int-int-int-int-int-int), java.util.Collections:singleton(java.lang.Object), org.joda.time.chrono.BaseChronology:weekyearOfCentury(), org.joda.time.base.BasePartial:toString(java.lang.String-java.util.Locale), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[]), org.joda.time.DateTimeZone$Stub:readObject(java.io.ObjectInputStream), org.joda.time.Duration:getStandardDays(), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[]), org.joda.time.MonthDay:withMonthOfYear(int), org.joda.time.Seconds:parseSeconds(java.lang.String), org.joda.time.convert.ConverterManager:removePeriodConverter(org.joda.time.convert.PeriodConverter), org.joda.time.MutableDateTime:setMinuteOfDay(int), org.joda.time.base.BasePartial:toString(java.lang.String), org.joda.time.YearMonthDay:plus(org.joda.time.ReadablePeriod), org.joda.time.Weeks:getValue(), org.joda.time.format.InternalParser:estimateParsedLength(), org.joda.time.chrono.GJMonthOfYearDateTimeField:getAsShortText(int-java.util.Locale), org.joda.time.Instant:toDateTimeISO(), org.joda.time.MutablePeriod:<init>(java.lang.Object-org.joda.time.PeriodType), org.joda.time.field.AbstractReadableInstantFieldProperty:getFieldType(), org.joda.time.format.PeriodFormat$DynamicWordBased:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), org.joda.time.Seconds:standardSecondsIn(org.joda.time.ReadablePeriod), org.joda.time.LocalTime$Property:roundFloorCopy(), org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.LocalDateTime:isBefore(org.joda.time.ReadablePartial), org.joda.time.chrono.EthiopicChronology:equals(java.lang.Object), org.joda.time.format.InternalParserDateTimeParser:<init>(org.joda.time.format.InternalParser), org.joda.time.MutableDateTime:era(), org.joda.time.format.DateTimeFormatterBuilder:appendYearOfCentury(int-int), org.joda.time.field.PreciseDurationDateTimeField:getMaximumValueForSet(long-int), org.joda.time.LocalDateTime:plusYears(int), org.joda.time.field.BaseDateTimeField:getRangeDurationField(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:printTo(java.lang.StringBuffer-int), org.joda.time.format.DateTimeFormat:patternForStyle(java.lang.String-java.util.Locale), org.joda.time.MonthDay:getField(int), org.joda.time.convert.ConverterSet$Entry[]:clone(), org.joda.time.format.DateTimeFormatterBuilder$Composite:decompose(java.util.List-java.util.List-java.util.List), org.joda.time.format.PeriodFormatterBuilder$Literal:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.format.ISODateTimeFormat:hourMinuteSecondMillis(), org.joda.time.chrono.LenientChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getDifferenceAsLong(long-long), org.joda.time.tz.ZoneInfoProvider:<init>(java.io.File), org.joda.time.field.AbstractPartialFieldProperty:getMinimumValueOverall(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.chrono.LimitChronology:getZone(), java.io.BufferedReader:readLine(), org.joda.time.chrono.IslamicChronology:setYear(long-int), org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.PeriodType), org.joda.time.DateTimeFieldType:access$1100(), org.joda.time.base.AbstractPeriod:toMutablePeriod(), org.joda.time.field.BaseDateTimeField:set(long-java.lang.String), org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.StringBuffer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.Interval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant), org.joda.time.DateMidnight:dayOfYear(), org.joda.time.field.DelegatedDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.DividedDateTimeField:roundFloor(long), org.joda.time.field.OffsetDateTimeField:roundCeiling(long), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.ReadWritablePeriod:setMillis(int), org.joda.time.chrono.ZonedChronology:toString(), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[]), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-long), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long), org.joda.time.LocalDateTime$Property:setCopy(java.lang.String-java.util.Locale), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), java.lang.Class:getConstructor(java.lang.Class[]), org.joda.time.base.BaseSingleFieldPeriod:getFieldType(int), org.joda.time.Hours:getFieldType(), org.joda.time.YearMonthDay:toLocalDate(), org.joda.time.Chronology:withUTC(), org.joda.time.field.MillisDurationField:hashCode(), org.joda.time.field.DelegatedDurationField:getDifference(long-long), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.TimeOfDay:withChronologyRetainFields(org.joda.time.Chronology), org.joda.time.DateTime:minus(long), org.joda.time.MutableDateTime:addYears(int), org.joda.time.Months:monthsBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.LocalDateTime:getMillisOfSecond(), org.joda.time.DateTime:era(), org.joda.time.field.BaseDurationField:getValue(long), org.joda.time.MutableInterval:<init>(long-long), org.joda.time.YearMonthDay$Property:getMinimumValue(), org.joda.time.TimeOfDay$Property:addNoWrapToCopy(int), org.joda.time.format.ISODateTimeFormat$Constants:minuteElement(), org.joda.time.MutableDateTime$Property:add(long), org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(int-int-int), org.joda.time.MutableDateTime:setMillisOfSecond(int), org.joda.time.field.SkipDateTimeField:set(long-int), org.joda.time.LocalDateTime$Property:addToCopy(int), org.joda.time.chrono.BasicGJChronology:isLeapYear(int), org.joda.time.base.BaseInterval:checkInterval(long-long), org.joda.time.MonthDay:fromDateFields(java.util.Date), org.joda.time.DateTimeFieldType:access$1300(), org.joda.time.Period:getSeconds(), org.joda.time.chrono.EthiopicChronology:<clinit>(), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:estimateParsedLength(), org.joda.time.format.DateTimeFormatterBuilder:appendHourOfHalfday(int), org.joda.time.Partial$Property:addToCopy(int), org.joda.time.chrono.BasicYearDateTimeField:addWrapField(long-int), org.joda.time.Chronology:seconds(), org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology), org.joda.time.MutablePeriod:add(org.joda.time.DurationFieldType-int), org.joda.time.MutableDateTime:addWeekyears(int), java.util.Calendar:setTimeInMillis(long), org.joda.time.Period:<init>(long-long), org.joda.time.LocalDateTime:toDateTime(org.joda.time.DateTimeZone), org.joda.time.chrono.BasicChronology:getTotalMillisByYearMonth(int-int), org.joda.time.MutableDateTime:add(org.joda.time.ReadablePeriod-int), java.lang.StringBuffer:append(int), org.joda.time.chrono.BasicGJChronology:getDateTimeMillis(int-int-int-int), org.joda.time.DateTimeField:isLeap(long), org.joda.time.format.DateTimeParserBucket:getPivotYear(), org.joda.time.Minutes:<init>(int), org.joda.time.LocalTime:getMinuteOfHour(), org.joda.time.chrono.ISOYearOfEraDateTimeField:getRangeDurationField(), org.joda.time.DateTimeZone$Stub:<init>(java.lang.String), java.io.DataOutput:writeLong(long), org.joda.time.field.DecoratedDurationField:getDifferenceAsLong(long-long), org.joda.time.field.DecoratedDateTimeField:isLenient(), org.joda.time.LocalDateTime:get(org.joda.time.DateTimeFieldType), org.joda.time.tz.CachedDateTimeZone:<init>(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormatterBuilder:appendMillisOfDay(int), org.joda.time.Period:normalizedStandard(), org.joda.time.field.DecoratedDateTimeField:add(long-int), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getLeapAmount(long), org.joda.time.format.DateTimeParserBucket$SavedField:init(org.joda.time.DateTimeField-java.lang.String-java.util.Locale), org.joda.time.Months:monthsBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.field.UnsupportedDateTimeField:get(long), org.joda.time.tz.ZoneInfoProvider:getZone(java.lang.String), org.joda.time.chrono.JulianChronology:weekyear(), org.joda.time.chrono.GJDayOfWeekDateTimeField:get(long), org.joda.time.chrono.ISOYearOfEraDateTimeField:getDifferenceAsLong(long-long), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.DateMidnight:withYearOfCentury(int), org.joda.time.convert.DateConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.MutableDateTime:setTime(org.joda.time.ReadableInstant), org.joda.time.Duration:standardMinutes(long), org.joda.time.convert.ReadablePeriodConverter:<clinit>(), org.joda.time.Period:<init>(java.lang.Object), org.joda.time.chrono.BasicChronology:calculateFirstDayOfYearMillis(int), org.joda.time.LocalTime$Property:addWrapFieldToCopy(int), org.joda.time.Period:<init>(long-org.joda.time.Chronology), org.joda.time.field.MillisDurationField:equals(java.lang.Object), org.joda.time.Chronology:secondOfMinute(), org.joda.time.chrono.EthiopicChronology:hashCode(), org.joda.time.YearMonthDay:toInterval(), org.joda.time.convert.ConverterManager:checkAlterInstantConverters(), org.joda.time.DateTime:toInstant(), org.joda.time.field.UnsupportedDateTimeField:add(long-long), org.joda.time.field.OffsetDateTimeField:add(long-long), org.joda.time.field.DelegatedDateTimeField:getMinimumValue(long), org.joda.time.Seconds:plus(int), org.joda.time.LocalTime:<init>(org.joda.time.DateTimeZone), org.joda.time.Days:toStandardHours(), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.field.AbstractPartialFieldProperty:hashCode(), org.joda.time.format.PeriodFormatterBuilder$Composite:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.LocalDate:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.format.ISODateTimeFormat$Constants:access$2700(), org.joda.time.format.ISODateTimeFormat$Constants:access$2500(), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeParserInternalParser:getUnderlying(), org.joda.time.DurationFieldType$StandardDurationFieldType:getField(org.joda.time.Chronology), org.joda.time.tz.ZoneInfoCompiler$Zone:toString(), org.joda.time.PeriodType:withMinutesRemoved(), org.joda.time.MonthDay:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.convert.ConverterManager:removeDurationConverter(org.joda.time.convert.DurationConverter), org.joda.time.MutableDateTime:setRounding(org.joda.time.DateTimeField), org.joda.time.MutablePeriod:getMonths(), org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(int-int), org.joda.time.LocalDateTime$Property:addToCopy(long), org.joda.time.DateTimeFieldType:secondOfDay(), org.joda.time.LocalDateTime:now(org.joda.time.Chronology), org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:add(long-int), org.joda.time.convert.ReadableInstantConverter:<clinit>(), org.joda.time.base.AbstractDateTime:toGregorianCalendar(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundHalfFloor(long), org.joda.time.base.BasePeriod:<init>(long), org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(long), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(java.lang.String-long[]-int[]-int[]-java.lang.String[]-org.joda.time.tz.DateTimeZoneBuilder$DSTZone), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField), org.joda.time.chrono.ISOChronology:millisOfDay(), org.joda.time.DateTimeField:getAsShortText(long), org.joda.time.Instant:withDurationAdded(org.joda.time.ReadableDuration-int), org.joda.time.Minutes:parseMinutes(java.lang.String), org.joda.time.base.AbstractDateTime:get(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:access$2000(), org.joda.time.DateTime:withDayOfWeek(int), org.joda.time.chrono.BasicYearDateTimeField:add(long-long), org.joda.time.field.PreciseDurationField:add(long-long), org.joda.time.chrono.BasicYearDateTimeField:isLeap(long), org.joda.time.field.DelegatedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.TimeOfDay:plusMillis(int), org.joda.time.ReadWritablePeriod:setWeeks(int), org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:estimatePrintedLength(), org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.Minutes:getMinutes(), org.joda.time.TimeOfDay:getValues(), org.joda.time.chrono.BasicSingleEraDateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.chrono.BasicFixedMonthChronology:getYear(long), org.joda.time.field.PreciseDurationDateTimeField:getMaximumValue(long), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.MonthDay:<init>(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:appendSignedDecimal(org.joda.time.DateTimeFieldType-int-int), org.joda.time.chrono.BasicSingleEraDateTimeField:<init>(java.lang.String), org.joda.time.MutableDateTime:addHours(int), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYearText(), org.joda.time.base.BaseDuration:toIntervalTo(org.joda.time.ReadableInstant), org.joda.time.DateMidnight:<init>(long-org.joda.time.DateTimeZone), org.joda.time.LocalDate$Property:roundHalfFloorCopy(), org.joda.time.base.BasePeriod:size(), java.util.ArrayList:<init>(), org.joda.time.PeriodType:dayTime(), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.DurationFieldType:<clinit>(), org.joda.time.DateMidnight:withYearOfEra(int), org.joda.time.DateTimeZone:getConvertedId(java.lang.String), org.joda.time.field.AbstractReadableInstantFieldProperty:getAsShortText(), org.joda.time.DateTimeZone$LazyInit:<init>(), org.joda.time.base.AbstractInterval:isAfter(org.joda.time.ReadableInstant), org.joda.time.chrono.LenientChronology:equals(java.lang.Object), org.joda.time.chrono.CopticChronology:equals(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Rule-int), org.joda.time.chrono.LimitChronology:withUTC(), org.joda.time.DateMidnight:withMillis(long), org.joda.time.DateTime:withZone(org.joda.time.DateTimeZone), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:isLenient(), org.joda.time.format.PeriodPrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.DateTime:withMillisOfDay(int), org.joda.time.base.AbstractInterval:toDuration(), org.joda.time.MutableDateTime$Property:readObject(java.io.ObjectInputStream), org.joda.time.field.DividedDateTimeField:getDifference(long-long), org.joda.time.TimeOfDay:withHourOfDay(int), org.joda.time.format.ISODateTimeFormat$Constants:dateOptionalTimeParser(), org.joda.time.DateTime:withYearOfCentury(int), org.joda.time.LocalDate:now(org.joda.time.DateTimeZone), org.joda.time.DateTime:millisOfDay(), org.joda.time.MutableDateTime:setTime(int-int-int-int), org.joda.time.LocalTime:isSupported(org.joda.time.DurationFieldType), org.joda.time.Years:toString(), org.joda.time.Instant:equals(java.lang.Object), org.joda.time.chrono.BasicChronology:getDayOfWeek(long), org.joda.time.field.PreciseDurationField:hashCode(), org.joda.time.DateTimeZone:getDefaultNameProvider(), org.joda.time.chrono.GJEraDateTimeField:set(long-int), java.io.PrintStream:println(java.lang.String), org.joda.time.LocalDate:year(), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValue(long), org.joda.time.convert.LongConverter:getDurationMillis(java.lang.Object), org.joda.time.Minutes:toStandardWeeks(), org.joda.time.field.DelegatedDateTimeField:roundCeiling(long), org.joda.time.Chronology:clockhourOfHalfday(), org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology), org.joda.time.field.RemainderDateTimeField:get(long), org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology), org.joda.time.DateMidnight:plus(org.joda.time.ReadablePeriod), org.joda.time.LocalDateTime:now(org.joda.time.DateTimeZone), org.joda.time.field.DecoratedDateTimeField:get(long), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDate(), org.joda.time.field.UnsupportedDateTimeField:getAsShortText(long), org.joda.time.LocalTime$Property:addNoWrapToCopy(int), org.joda.time.chrono.LimitChronology:toString(), org.joda.time.chrono.ISOChronology$Stub:writeObject(java.io.ObjectOutputStream), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:<init>(int-int), org.joda.time.chrono.GregorianChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), java.util.Arrays:binarySearch(long[]-long), org.joda.time.YearMonth:getYear(), org.joda.time.format.PeriodFormatter:parseMutablePeriod(java.lang.String), org.joda.time.field.ZeroIsMaxDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.Months:plus(int), org.joda.time.chrono.GJChronology$CutoverField:getAsText(long-java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:<init>(java.lang.String), org.joda.time.format.FormatUtils:writeUnpaddedInteger(java.io.Writer-int), org.joda.time.convert.NullConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology), org.joda.time.LocalDate:withField(org.joda.time.DateTimeFieldType-int), org.joda.time.LocalDate:withFieldAdded(org.joda.time.DurationFieldType-int), org.joda.time.Hours:plus(org.joda.time.Hours), org.joda.time.field.DelegatedDateTimeField:isSupported(), org.joda.time.chrono.GJYearOfEraDateTimeField:getDifferenceAsLong(long-long), org.joda.time.Duration:standardHours(long), org.joda.time.YearMonthDay:withChronologyRetainFields(org.joda.time.Chronology), org.joda.time.LocalDateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), org.joda.time.chrono.GJDayOfWeekDateTimeField:getRangeDurationField(), org.joda.time.Period:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.field.UnsupportedDateTimeField:getDifference(long-long), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.chrono.StrictChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.field.StrictDateTimeField:getWrappedField(), org.joda.time.field.StrictDateTimeField:getMinimumValue(long), org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean-int), org.joda.time.chrono.BaseChronology:year(), org.joda.time.chrono.ZonedChronology$ZonedDurationField:equals(java.lang.Object), org.joda.time.LocalDateTime:dayOfWeek(), java.io.File:<init>(java.lang.String), org.joda.time.format.ISODateTimeFormat:basicTime(), org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.Partial:toStringList(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.Instant:parse(java.lang.String-org.joda.time.format.DateTimeFormatter), org.joda.time.DateMidnight:withDurationAdded(long-int), org.joda.time.chrono.CopticChronology:withZone(org.joda.time.DateTimeZone), org.joda.time.chrono.BasicFixedMonthChronology:getMinimumDaysInFirstWeek(), org.joda.time.base.AbstractInterval:toString(), org.joda.time.chrono.BuddhistChronology:getZone(), org.joda.time.LocalTime:<init>(long-org.joda.time.DateTimeZone), org.joda.time.Days:toStandardWeeks(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.DateMidnight:era(), org.joda.time.Minutes:isLessThan(org.joda.time.Minutes), org.joda.time.TimeOfDay:toDateTimeToday(), java.util.concurrent.ConcurrentHashMap:put(java.lang.Object-java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:parseMonth(java.lang.String), org.joda.time.chrono.BasicChronology$YearInfo:<init>(int-long), org.joda.time.chrono.BasicChronology:getDayOfMonth(long), org.joda.time.format.PeriodFormatter:getParser(), org.joda.time.TimeOfDay$Property:<init>(org.joda.time.TimeOfDay-int), org.joda.time.DateTime:withDayOfMonth(int), org.joda.time.LocalTime:hourOfDay(), org.joda.time.chrono.GJChronology:set(org.joda.time.ReadablePartial-long), org.joda.time.LocalDateTime:toDate(java.util.TimeZone), org.joda.time.chrono.BaseChronology:millis(), org.joda.time.LocalDateTime:minusHours(int), org.joda.time.MutableDateTime:millisOfSecond(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long), org.joda.time.LocalDate:withWeekyear(int), org.joda.time.chrono.GJYearOfEraDateTimeField:getMaximumValue(), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int), org.joda.time.DateMidnight:plusDays(int), org.joda.time.Period:plusMillis(int), org.joda.time.YearMonth$Property:addWrapFieldToCopy(int), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-int), org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.format.PeriodFormatterBuilder$Separator:access$100(org.joda.time.format.PeriodFormatterBuilder$Separator), java.lang.String:trim(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getOfYear(), org.joda.time.tz.DateTimeZoneBuilder:setStandardOffset(int), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue(long), org.joda.time.field.UnsupportedDurationField:getMillis(long-long), org.joda.time.DateTimeConstants:<init>(), org.joda.time.Period:toStandardDuration(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:get(long), org.joda.time.DateMidnight:property(org.joda.time.DateTimeFieldType), org.joda.time.field.MillisDurationField:compareTo(org.joda.time.DurationField), org.joda.time.tz.DateTimeZoneBuilder$Rule:getSaveMillis(), org.joda.time.base.AbstractInstant:toString(org.joda.time.format.DateTimeFormatter), org.joda.time.chrono.BasicGJChronology:getMonthOfYear(long-int), org.joda.time.field.DividedDateTimeField:getRemainder(int), org.joda.time.LocalDate$Property:roundHalfCeilingCopy(), org.joda.time.base.AbstractPeriod:getValue(int), org.joda.time.Period:getMinutes(), java.lang.String:<init>(java.lang.String), org.joda.time.LocalDate:plusMonths(int), org.joda.time.field.BaseDateTimeField:roundHalfFloor(long), org.joda.time.field.DelegatedDateTimeField:isLeap(long), org.joda.time.DateTimeFieldType:yearOfCentury(), org.joda.time.DateTimeComparator:hashCode(), org.joda.time.DateTimeField:getMaximumValue(long), org.joda.time.field.FieldUtils:safeMultiplyToInt(long-long), org.joda.time.Partial:<init>(org.joda.time.ReadablePartial), org.joda.time.MutableDateTime:<init>(int-int-int-int-int-int-int), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeParser), java.lang.String:toUpperCase(java.util.Locale), org.joda.time.LocalDateTime:plusDays(int), org.joda.time.field.DelegatedDateTimeField:getMaximumValue(), org.joda.time.chrono.EthiopicChronology:getInstance(), org.joda.time.DateTimeZone$Stub:writeObject(java.io.ObjectOutputStream), org.joda.time.Months:parseMonths(java.lang.String), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(), org.joda.time.LocalDate:get(org.joda.time.DateTimeFieldType), org.joda.time.PeriodType:toString(), org.joda.time.convert.ReadablePartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType), org.joda.time.field.ScaledDurationField:getValueAsLong(long-long), org.joda.time.format.ISODateTimeFormat$Constants:access$1400(), org.joda.time.convert.ConverterManager:addDurationConverter(org.joda.time.convert.DurationConverter), org.joda.time.MutableDateTime:setChronology(org.joda.time.Chronology), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.Collections:reverse(java.util.List), org.joda.time.LocalDateTime:<init>(java.lang.Object), org.joda.time.PeriodType:seconds(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear-java.lang.String-int), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:<init>(java.util.StringTokenizer), org.joda.time.chrono.BasicChronology$HalfdayField:set(long-java.lang.String-java.util.Locale), org.joda.time.Days:multipliedBy(int), org.joda.time.TimeOfDay:toLocalTime(), org.joda.time.convert.AbstractConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTime$Property:addWrapFieldToCopy(int), org.joda.time.chrono.ISOChronology:<init>(org.joda.time.Chronology), org.joda.time.chrono.BasicWeekyearDateTimeField:getDifference(long-long), org.joda.time.convert.AbstractConverter:getPeriodType(java.lang.Object), java.util.Locale:getLanguage(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:remainder(long), org.joda.time.Days:<init>(int), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(long), org.joda.time.format.DateTimeFormatter:parseMillis(java.lang.String), org.joda.time.Period:minusMillis(int), org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.chrono.ISOYearOfEraDateTimeField:addWrapField(long-int), org.joda.time.chrono.LimitChronology$LimitDateTimeField:add(long-long), org.joda.time.format.ISODateTimeFormat$Constants:basicDateTimeNoMillis(), org.joda.time.MutableDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.base.AbstractInstant:getChronology(), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer), org.joda.time.DateMidnight$Property:roundCeilingCopy(), org.joda.time.chrono.BasicChronology:getAverageMillisPerMonth(), org.joda.time.format.DateTimeFormatterBuilder$MatchingParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.Minutes:negated(), org.joda.time.field.LenientDateTimeField:set(long-int), java.lang.Enum:<init>(java.lang.String-int), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.format.DateTimeFormatter:withPivotYear(int), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getMaximumValue(long), org.joda.time.chrono.GJChronology$CutoverField:getMaximumTextLength(java.util.Locale), org.joda.time.DurationFieldType:isSupported(org.joda.time.Chronology), org.joda.time.base.BasePeriod$1:getPeriodType(), java.lang.CharSequence:subSequence(int-int), org.joda.time.format.DateTimeFormatterBuilder$FixedNumber:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.chrono.AssembledChronology:readObject(java.io.ObjectInputStream), org.joda.time.DateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int), org.joda.time.field.DelegatedDateTimeField:remainder(long), org.joda.time.Period:minusYears(int), org.joda.time.MonthDay$Property:setCopy(int), java.io.FileInputStream:<init>(java.io.File), org.joda.time.chrono.JulianChronology:era(), org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue(), org.joda.time.DateTime:toString(), org.joda.time.DateMidnight$Property:withMaximumValue(), org.joda.time.Days:negated(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.base.BaseDuration:toPeriodTo(org.joda.time.ReadableInstant-org.joda.time.PeriodType), org.joda.time.chrono.JulianChronology:hourOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitWeekyear(int), java.lang.System:getSecurityManager(), org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType), org.joda.time.chrono.BasicYearDateTimeField:setExtended(long-int), org.joda.time.DateTime:year(), org.joda.time.convert.ConverterManager:addPeriodConverter(org.joda.time.convert.PeriodConverter), org.joda.time.field.DividedDateTimeField:add(long-long), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), org.joda.time.TimeOfDay:minusSeconds(int), org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.ReadableInstant:getChronology(), org.joda.time.DateTimeFieldType:millisOfSecond(), org.joda.time.base.BaseDateTime:adjustForMinMax(), org.joda.time.chrono.GregorianChronology:eras(), java.lang.Class:getMethod(java.lang.String-java.lang.Class[]), org.joda.time.DateTime:plusMinutes(int), org.joda.time.chrono.BasicDayOfMonthDateTimeField:readResolve(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField-int), org.joda.time.format.ISODateTimeFormat$Constants:<clinit>(), org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundFloor(long), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadableInstant), org.joda.time.tz.ZoneInfoCompiler$Zone:addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone-org.joda.time.tz.DateTimeZoneBuilder-java.util.Map), org.joda.time.chrono.StrictChronology:<init>(org.joda.time.Chronology), org.joda.time.chrono.BasicGJChronology:getDayOfYear(long-int), org.joda.time.YearMonthDay:toDateTimeAtMidnight(), org.joda.time.format.ISODateTimeFormat:basicTTimeNoMillis(), org.joda.time.Chronology:add(long-long-int), org.joda.time.Weeks:weeks(int), org.joda.time.field.UnsupportedDurationField:getDifference(long-long), org.joda.time.base.AbstractInstant:isEqual(org.joda.time.ReadableInstant), org.joda.time.Duration:standardDays(long), org.joda.time.DateMidnight:<init>(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValueForSet(long-int), org.joda.time.DurationField:compareTo(java.lang.Object), java.text.DateFormatSymbols:getMonths(), org.joda.time.field.UnsupportedDurationField:readResolve(), org.joda.time.chrono.BasicWeekyearDateTimeField:get(long), org.joda.time.chrono.AssembledChronology:setFields(), org.joda.time.LocalTime:getMillisOfDay(), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:roundCeiling(long), java.lang.Math:log(double), org.joda.time.MutablePeriod:add(int-int-int-int-int-int-int-int), org.joda.time.MonthDay:<init>(), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.chrono.BasicFixedMonthChronology:isLeapYear(int), org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadablePeriod), org.joda.time.DateTimeUtils:getPeriodType(org.joda.time.PeriodType), org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeZone:<clinit>(), org.joda.time.LocalTime:withSecondOfMinute(int), org.joda.time.MutableInterval:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.format.ISODateTimeFormat:ordinalDate(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:compare(java.lang.String-java.lang.String), org.joda.time.MutablePeriod:getHours(), org.joda.time.convert.CalendarConverter:<init>(), org.joda.time.Weeks:<clinit>(), org.joda.time.chrono.BaseChronology:hourOfDay(), org.joda.time.LocalTime:fromDateFields(java.util.Date), org.joda.time.Weeks:plus(int), org.joda.time.chrono.ZonedChronology:useTimeArithmetic(org.joda.time.DurationField), org.joda.time.tz.CachedDateTimeZone:nextTransition(long), org.joda.time.base.AbstractPeriod:isSupported(org.joda.time.DurationFieldType), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue(long), org.joda.time.base.BaseDateTime:<init>(org.joda.time.Chronology), org.joda.time.TimeOfDay:minusMillis(int), org.joda.time.field.DelegatedDurationField:getValue(long-long), java.lang.Object:getClass(), org.joda.time.MutableDateTime:setWeekOfWeekyear(int), org.joda.time.Years:negated(), org.joda.time.MutableDateTime$Property:getMinimumValueOverall(), org.joda.time.DateTimeZone:getDefaultProvider(), org.joda.time.field.BaseDateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.LocalDateTime:monthOfYear(), org.joda.time.base.AbstractInterval:isBeforeNow(), org.joda.time.TimeOfDay$Property:getMinimumValue(), org.joda.time.chrono.GJChronology:withUTC(), java.io.DataInput:readByte(), org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant), org.joda.time.Weeks:minus(int), org.joda.time.tz.ZoneInfoLogger:<clinit>(), org.joda.time.DateTime:<init>(int-int-int-int-int-int), org.joda.time.LocalDate:now(org.joda.time.Chronology), org.joda.time.Months:minus(org.joda.time.Months), org.joda.time.chrono.BasicFixedMonthChronology:getYearMonthDayMillis(int-int-int), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(long), java.util.Collection:size(), org.joda.time.MutablePeriod:<init>(), org.joda.time.MutablePeriod:setHours(int), org.joda.time.field.DelegatedDateTimeField:roundHalfFloor(long), org.joda.time.Chronology:clockhourOfDay(), java.io.IOException:<init>(java.lang.String), java.util.HashMap:get(java.lang.Object), org.joda.time.field.ImpreciseDateTimeField:add(long-int), org.joda.time.LocalTime:<init>(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat$Constants:access$4300(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser[]), org.joda.time.chrono.IslamicChronology:getDayOfYear(long), org.joda.time.chrono.JulianChronology:dayOfMonth(), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:matchesOtherAffix(int-java.lang.String-int), org.joda.time.convert.CalendarConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.convert.CalendarConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.chrono.CopticChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), java.lang.Class:asSubclass(java.lang.Class), org.joda.time.base.BasePartial:setValue(int-int), org.joda.time.field.ScaledDurationField:getValueAsLong(long), org.joda.time.field.AbstractPartialFieldProperty:getMaximumValueOverall(), org.joda.time.MutableDateTime:now(), org.joda.time.Hours:getHours(), java.lang.StringBuffer:setLength(int), org.joda.time.format.ISODateTimeFormat$Constants:basicDate(), org.joda.time.tz.ZoneInfoLogger$1:initialValue(), org.joda.time.base.BasePeriod:getValues(), org.joda.time.DateTimeFieldType:minuteOfDay(), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-java.util.Locale-org.joda.time.PeriodType), java.util.StringTokenizer:countTokens(), org.joda.time.Days:getPeriodType(), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.DateMidnight:plus(long), org.joda.time.format.DateTimeFormat:shortDateTime(), org.joda.time.convert.ReadableInstantConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.tz.ZoneInfoLogger$1:<init>(), org.joda.time.MutableDateTime$Property:roundHalfFloor(), org.joda.time.DurationField:getDifferenceAsLong(long-long), org.joda.time.format.ISODateTimeFormat$Constants:dateParser(), org.joda.time.format.DateTimeFormat:longDateTime(), org.joda.time.convert.InstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket$SavedField:set(long-boolean), org.joda.time.chrono.IslamicChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.chrono.GregorianChronology:getInstance(), org.joda.time.Weeks:toStandardDuration(), org.joda.time.convert.ConverterManager:checkAlterPartialConverters(), org.joda.time.Years:dividedBy(int), org.joda.time.tz.ZoneInfoProvider:<init>(), java.io.File:getParentFile(), org.joda.time.format.DateTimeParserBucket:access$302(org.joda.time.format.DateTimeParserBucket-int), org.joda.time.LocalTime:toString(java.lang.String-java.util.Locale), org.joda.time.chrono.BasicFixedMonthChronology:getMonthOfYear(long), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser), java.util.TreeMap:put(java.lang.Object-java.lang.Object), org.joda.time.MutableInterval:setDurationBeforeEnd(long), org.joda.time.base.AbstractPartial:isBefore(org.joda.time.ReadablePartial), org.joda.time.DateTimeComparator:compare(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:size(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), org.joda.time.chrono.GJMonthOfYearDateTimeField:convertText(java.lang.String-java.util.Locale), org.joda.time.Hours:toStandardWeeks(), org.joda.time.chrono.BaseChronology:set(org.joda.time.ReadablePartial-long), org.joda.time.LocalDate:withYear(int), org.joda.time.base.AbstractDateTime:getHourOfDay(), org.joda.time.DateTimeFieldType:centuryOfEra(), org.joda.time.tz.ZoneInfoCompiler$Rule:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-int-java.lang.String), org.joda.time.base.BaseDateTime:checkInstant(long-org.joda.time.Chronology), org.joda.time.field.DelegatedDateTimeField:get(long), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale), org.joda.time.DateTime:yearOfEra(), org.joda.time.MutableDateTime$Property:roundHalfCeiling(), java.text.DateFormat:getTimeInstance(int-java.util.Locale), org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundCeiling(long), org.joda.time.field.ZeroIsMaxDateTimeField:getDifference(long-long), org.joda.time.MutableInterval:setInterval(long-long), org.joda.time.MutableDateTime:property(org.joda.time.DateTimeFieldType), org.joda.time.MonthDay$Property:addWrapFieldToCopy(int), org.joda.time.DateTimeFieldType:access$1700(), org.joda.time.DateTime$Property:withMaximumValue(), org.joda.time.Duration:dividedBy(long-java.math.RoundingMode), org.joda.time.Hours:plus(int), java.util.Date:getYear(), org.joda.time.DateTimeField:isSupported(), org.joda.time.tz.DateTimeZoneBuilder:writeTo(java.lang.String-java.io.DataOutput), org.joda.time.DateTimeField:getName(), org.joda.time.field.AbstractReadableInstantFieldProperty:compareTo(org.joda.time.ReadablePartial), org.joda.time.field.ImpreciseDateTimeField:getDifference(long-long), org.joda.time.MutableDateTime:setZoneRetainFields(org.joda.time.DateTimeZone)),
	edges = mapOf(
		org.joda.time.base.BaseDateTime:<init>() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:<init>(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:<init>(long) to listOf(org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractDateTime:<init>(), org.joda.time.base.BaseDateTime:checkChronology(org.joda.time.Chronology), org.joda.time.base.BaseDateTime:checkInstant(long-org.joda.time.Chronology), org.joda.time.base.BaseDateTime:adjustForMinMax()),
		org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.AbstractDateTime:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getInstantConverter(java.lang.Object), org.joda.time.convert.InstantConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.base.BaseDateTime:checkChronology(org.joda.time.Chronology), org.joda.time.convert.InstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.base.BaseDateTime:checkInstant(long-org.joda.time.Chronology), org.joda.time.base.BaseDateTime:adjustForMinMax()),
		org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractDateTime:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getInstantConverter(java.lang.Object), org.joda.time.convert.InstantConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.base.BaseDateTime:checkChronology(org.joda.time.Chronology), org.joda.time.convert.InstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.base.BaseDateTime:checkInstant(long-org.joda.time.Chronology), org.joda.time.base.BaseDateTime:adjustForMinMax()),
		org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractDateTime:<init>(), org.joda.time.base.BaseDateTime:checkChronology(org.joda.time.Chronology), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.base.BaseDateTime:checkInstant(long-org.joda.time.Chronology), org.joda.time.base.BaseDateTime:adjustForMinMax()),
		org.joda.time.base.BaseDateTime:adjustForMinMax() to listOf(org.joda.time.Chronology:withUTC()),
		org.joda.time.base.BaseDateTime:checkChronology(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:setMillis(long) to listOf(org.joda.time.base.BaseDateTime:checkInstant(long-org.joda.time.Chronology)),
		org.joda.time.base.BaseDateTime:setChronology(org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:checkChronology(org.joda.time.Chronology)),
		org.joda.time.chrono.AssembledChronology$Fields:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.chrono.AssembledChronology$Fields:copyFieldsFrom(org.joda.time.Chronology) to listOf(org.joda.time.Chronology:millis(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:seconds(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:minutes(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:hours(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:halfdays(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:days(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:weeks(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:weekyears(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:months(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:years(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:centuries(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:eras(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField), org.joda.time.Chronology:millisOfSecond(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:millisOfDay(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:secondOfMinute(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:secondOfDay(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:minuteOfHour(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:minuteOfDay(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:hourOfDay(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:clockhourOfDay(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:hourOfHalfday(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:clockhourOfHalfday(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:halfdayOfDay(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:dayOfWeek(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:dayOfMonth(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:dayOfYear(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:weekyear(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:weekyearOfCentury(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:monthOfYear(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:year(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:yearOfEra(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:yearOfCentury(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:centuryOfEra(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField), org.joda.time.Chronology:era(), org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField)),
		org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DurationField) to listOf(org.joda.time.DurationField:isSupported()),
		org.joda.time.chrono.AssembledChronology$Fields:isSupported(org.joda.time.DateTimeField) to listOf(org.joda.time.DateTimeField:isSupported()),
		org.joda.time.chrono.BasicFixedMonthChronology:<init>(org.joda.time.Chronology-java.lang.Object-int) to listOf(org.joda.time.chrono.BasicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.BasicFixedMonthChronology:setYear(long-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getYear(long), org.joda.time.chrono.BasicFixedMonthChronology:getDayOfYear(long-int), org.joda.time.chrono.BasicFixedMonthChronology:getMillisOfDay(long), org.joda.time.chrono.BasicFixedMonthChronology:isLeapYear(int), org.joda.time.chrono.BasicFixedMonthChronology:getYearMonthDayMillis(int-int-int)),
		org.joda.time.chrono.BasicFixedMonthChronology:getYearDifference(long-long) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getYear(long), org.joda.time.chrono.BasicFixedMonthChronology:getYear(long), org.joda.time.chrono.BasicFixedMonthChronology:getYearMillis(int), org.joda.time.chrono.BasicFixedMonthChronology:getYearMillis(int)),
		org.joda.time.chrono.BasicFixedMonthChronology:getDayOfMonth(long) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getDayOfYear(long)),
		org.joda.time.chrono.BasicFixedMonthChronology:getDaysInYearMonth(int-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicFixedMonthChronology:getMonthOfYear(long) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getDayOfYear(long)),
		org.joda.time.chrono.BasicFixedMonthChronology:getMonthOfYear(long-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getYearMillis(int)),
		org.joda.time.chrono.CopticChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone-int) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.CopticChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.chrono.LimitChronology:getInstance(org.joda.time.Chronology-org.joda.time.ReadableDateTime-org.joda.time.ReadableDateTime), org.joda.time.chrono.CopticChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.chrono.CopticChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.CopticChronology:<init>(org.joda.time.Chronology-java.lang.Object-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.CopticChronology:readResolve() to listOf(org.joda.time.chrono.CopticChronology:getBase(), org.joda.time.chrono.CopticChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.Chronology:getZone(), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.CopticChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.CopticChronology:getZone(), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.CopticChronology:isLeapDay(long) to listOf(org.joda.time.chrono.CopticChronology:dayOfMonth(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.CopticChronology:monthOfYear(), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.chrono.CopticChronology:calculateFirstDayOfYearMillis(int) to listOf(org.joda.time.chrono.CopticChronology:isLeapYear(int)),
		org.joda.time.chrono.CopticChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.CopticChronology:getBase(), org.joda.time.chrono.BasicFixedMonthChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.chrono.BasicMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-int), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.chrono.CopticChronology:toString() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:toString()),
		org.joda.time.chrono.CopticChronology:hashCode() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:hashCode()),
		org.joda.time.chrono.CopticChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:equals(java.lang.Object)),
		org.joda.time.chrono.CopticChronology:getMinimumDaysInFirstWeek() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getMinimumDaysInFirstWeek()),
		org.joda.time.chrono.CopticChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getDateTimeMillis(int-int-int-int-int-int-int)),
		org.joda.time.chrono.CopticChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.chrono.CopticChronology:getZone() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getZone()),
		org.joda.time.chrono.CopticChronology:<clinit>() to listOf(org.joda.time.chrono.BasicSingleEraDateTimeField:<init>(java.lang.String), java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.CopticChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.GJEraDateTimeField:<init>(org.joda.time.chrono.BasicChronology) to listOf(org.joda.time.DateTimeFieldType:era(), org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType)),
		org.joda.time.chrono.GJEraDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long)),
		org.joda.time.chrono.GJEraDateTimeField:getAsText(int-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:eraValueToText(int)),
		org.joda.time.chrono.GJEraDateTimeField:set(long-int) to listOf(org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.chrono.GJEraDateTimeField:get(long), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:setYear(long-int)),
		org.joda.time.chrono.GJEraDateTimeField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:eraTextToValue(java.lang.String), org.joda.time.chrono.GJEraDateTimeField:set(long-int)),
		org.joda.time.chrono.GJEraDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.GJEraDateTimeField:get(long), org.joda.time.chrono.BasicChronology:setYear(long-int)),
		org.joda.time.chrono.GJEraDateTimeField:roundCeiling(long) to listOf(org.joda.time.chrono.GJEraDateTimeField:get(long), org.joda.time.chrono.BasicChronology:setYear(long-int)),
		org.joda.time.chrono.GJEraDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.chrono.GJEraDateTimeField:roundFloor(long)),
		org.joda.time.chrono.GJEraDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.chrono.GJEraDateTimeField:roundFloor(long)),
		org.joda.time.chrono.GJEraDateTimeField:roundHalfEven(long) to listOf(org.joda.time.chrono.GJEraDateTimeField:roundFloor(long)),
		org.joda.time.chrono.GJEraDateTimeField:getDurationField() to listOf(org.joda.time.DurationFieldType:eras(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.GJEraDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:getEraMaxTextLength()),
		org.joda.time.chrono.GJEraDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:era()),
		org.joda.time.chrono.ISOChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.chrono.ISOChronology:<init>(org.joda.time.Chronology), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.ISOChronology:<init>(org.joda.time.Chronology) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.ISOChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.ISOChronology:getZone(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.ISOChronology:toString() to listOf(org.joda.time.chrono.ISOChronology:getZone(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.chrono.ISOChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.ISOChronology:getBase(), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeFieldType:centuryOfEra(), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DateTimeFieldType:yearOfCentury(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:weekyearOfCentury(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType)),
		org.joda.time.chrono.ISOChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.ISOChronology:getZone(), org.joda.time.chrono.ISOChronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.chrono.ISOChronology:hashCode() to listOf(java.lang.String:hashCode(), org.joda.time.chrono.ISOChronology:getZone(), org.joda.time.DateTimeZone:hashCode()),
		org.joda.time.chrono.ISOChronology:writeReplace() to listOf(org.joda.time.chrono.ISOChronology:getZone(), org.joda.time.chrono.ISOChronology$Stub:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.ISOChronology:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.GregorianChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:<init>(org.joda.time.Chronology), java.util.concurrent.ConcurrentHashMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.StrictChronology:getInstance(org.joda.time.Chronology) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.StrictChronology:<init>(org.joda.time.Chronology)),
		org.joda.time.chrono.StrictChronology:<init>(org.joda.time.Chronology) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.StrictChronology:withUTC() to listOf(org.joda.time.chrono.StrictChronology:getZone(), org.joda.time.chrono.StrictChronology:getBase(), org.joda.time.Chronology:withUTC(), org.joda.time.chrono.StrictChronology:getInstance(org.joda.time.Chronology)),
		org.joda.time.chrono.StrictChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.StrictChronology:withUTC(), org.joda.time.chrono.StrictChronology:getZone(), org.joda.time.chrono.StrictChronology:getBase(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.chrono.StrictChronology:getInstance(org.joda.time.Chronology)),
		org.joda.time.chrono.StrictChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField)),
		org.joda.time.chrono.StrictChronology:convertField(org.joda.time.DateTimeField) to listOf(org.joda.time.field.StrictDateTimeField:getInstance(org.joda.time.DateTimeField)),
		org.joda.time.chrono.StrictChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.StrictChronology:getBase(), org.joda.time.chrono.StrictChronology:getBase(), java.lang.Object:equals(java.lang.Object)),
		org.joda.time.chrono.StrictChronology:hashCode() to listOf(org.joda.time.chrono.StrictChronology:getBase(), java.lang.Object:hashCode()),
		org.joda.time.chrono.StrictChronology:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.StrictChronology:getBase(), org.joda.time.Chronology:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.convert.ConverterManager:getInstance() to listOf(org.joda.time.convert.ConverterManager:<init>()),
		org.joda.time.convert.ConverterManager:<init>() to listOf(java.lang.Object:<init>(), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[]), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[]), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[]), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[]), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:getInstantConverter(java.lang.Object) to listOf(java.lang.Object:getClass(), org.joda.time.convert.ConverterSet:select(java.lang.Class), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.convert.ConverterManager:getInstantConverters() to listOf(org.joda.time.convert.ConverterSet:size(), org.joda.time.convert.ConverterSet:copyInto(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:addInstantConverter(org.joda.time.convert.InstantConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterInstantConverters(), org.joda.time.convert.ConverterSet:add(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:removeInstantConverter(org.joda.time.convert.InstantConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterInstantConverters(), org.joda.time.convert.ConverterSet:remove(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:checkAlterInstantConverters() to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission)),
		org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object) to listOf(java.lang.Object:getClass(), org.joda.time.convert.ConverterSet:select(java.lang.Class), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.convert.ConverterManager:getPartialConverters() to listOf(org.joda.time.convert.ConverterSet:size(), org.joda.time.convert.ConverterSet:copyInto(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:addPartialConverter(org.joda.time.convert.PartialConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterPartialConverters(), org.joda.time.convert.ConverterSet:add(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:removePartialConverter(org.joda.time.convert.PartialConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterPartialConverters(), org.joda.time.convert.ConverterSet:remove(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:checkAlterPartialConverters() to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission)),
		org.joda.time.convert.ConverterManager:getDurationConverter(java.lang.Object) to listOf(java.lang.Object:getClass(), org.joda.time.convert.ConverterSet:select(java.lang.Class), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.convert.ConverterManager:getDurationConverters() to listOf(org.joda.time.convert.ConverterSet:size(), org.joda.time.convert.ConverterSet:copyInto(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:addDurationConverter(org.joda.time.convert.DurationConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterDurationConverters(), org.joda.time.convert.ConverterSet:add(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:removeDurationConverter(org.joda.time.convert.DurationConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterDurationConverters(), org.joda.time.convert.ConverterSet:remove(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:checkAlterDurationConverters() to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission)),
		org.joda.time.convert.ConverterManager:getPeriodConverter(java.lang.Object) to listOf(java.lang.Object:getClass(), org.joda.time.convert.ConverterSet:select(java.lang.Class), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.convert.ConverterManager:getPeriodConverters() to listOf(org.joda.time.convert.ConverterSet:size(), org.joda.time.convert.ConverterSet:copyInto(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:addPeriodConverter(org.joda.time.convert.PeriodConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterPeriodConverters(), org.joda.time.convert.ConverterSet:add(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:removePeriodConverter(org.joda.time.convert.PeriodConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterPeriodConverters(), org.joda.time.convert.ConverterSet:remove(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:checkAlterPeriodConverters() to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission)),
		org.joda.time.convert.ConverterManager:getIntervalConverter(java.lang.Object) to listOf(java.lang.Object:getClass(), org.joda.time.convert.ConverterSet:select(java.lang.Class), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.convert.ConverterManager:getIntervalConverters() to listOf(org.joda.time.convert.ConverterSet:size(), org.joda.time.convert.ConverterSet:copyInto(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:addIntervalConverter(org.joda.time.convert.IntervalConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterIntervalConverters(), org.joda.time.convert.ConverterSet:add(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:removeIntervalConverter(org.joda.time.convert.IntervalConverter) to listOf(org.joda.time.convert.ConverterManager:checkAlterIntervalConverters(), org.joda.time.convert.ConverterSet:remove(org.joda.time.convert.Converter-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterManager:checkAlterIntervalConverters() to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission)),
		org.joda.time.convert.ConverterManager:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.convert.ConverterSet:size(), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), org.joda.time.convert.ConverterSet:size(), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), org.joda.time.convert.ConverterSet:size(), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), org.joda.time.convert.ConverterSet:size(), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), org.joda.time.convert.ConverterSet:size(), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.convert.NullConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.NullConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadWritablePeriod:setPeriod(org.joda.time.ReadablePeriod)),
		org.joda.time.convert.NullConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadWritableInterval:setChronology(org.joda.time.Chronology), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.ReadWritableInterval:setInterval(long-long)),
		org.joda.time.convert.NullConverter:<clinit>() to listOf(org.joda.time.convert.NullConverter:<init>()),
		org.joda.time.convert.StringConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.StringConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:parseMillis(java.lang.String)),
		org.joda.time.convert.StringConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:getZone(), org.joda.time.format.DateTimeFormatter:getZone(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:parseMillis(java.lang.String), org.joda.time.Chronology:get(org.joda.time.ReadablePartial-long)),
		org.joda.time.convert.StringConverter:getDurationMillis(java.lang.Object) to listOf(java.lang.String:length(), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:substring(int-int), java.lang.String:length(), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:substring(int-int), java.lang.Long:parseLong(java.lang.String), java.lang.String:substring(int), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.String:substring(int-int), java.lang.Integer:parseInt(java.lang.String), java.lang.String:length(), java.lang.String:substring(int-int), java.lang.Long:parseLong(java.lang.String), java.lang.Long:parseLong(java.lang.String), org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.field.FieldUtils:safeAdd(long-long)),
		org.joda.time.convert.StringConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.ReadWritablePeriod:clear(), org.joda.time.format.PeriodFormatter:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int), java.lang.String:length(), org.joda.time.ReadWritablePeriod:getPeriodType(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType), org.joda.time.format.PeriodFormatter:parseMutablePeriod(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.convert.StringConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology) to listOf(java.lang.String:indexOf(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:substring(int-int), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:substring(int), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology), org.joda.time.format.ISOPeriodFormat:standard(), java.lang.String:charAt(int), org.joda.time.convert.StringConverter:getPeriodType(java.lang.Object), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType), org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), java.lang.String:charAt(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.convert.StringConverter:getPeriodType(java.lang.Object), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType), org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.ReadWritableInterval:setInterval(long-long), org.joda.time.ReadWritableInterval:setChronology(org.joda.time.Chronology)),
		org.joda.time.convert.StringConverter:<clinit>() to listOf(org.joda.time.convert.StringConverter:<init>()),
		org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType) to listOf(org.joda.time.DateTimeFieldType:<init>(java.lang.String)),
		org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:getField(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:era(), org.joda.time.Chronology:yearOfEra(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.Chronology:year(), org.joda.time.Chronology:dayOfYear(), org.joda.time.Chronology:monthOfYear(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.Chronology:weekyearOfCentury(), org.joda.time.Chronology:weekyear(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.Chronology:halfdayOfDay(), org.joda.time.Chronology:hourOfHalfday(), org.joda.time.Chronology:clockhourOfHalfday(), org.joda.time.Chronology:clockhourOfDay(), org.joda.time.Chronology:hourOfDay(), org.joda.time.Chronology:minuteOfDay(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.Chronology:secondOfDay(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.Chronology:millisOfDay(), org.joda.time.Chronology:millisOfSecond(), java.lang.InternalError:<init>()),
		org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:readResolve() to listOf(org.joda.time.DateTimeFieldType:access$000(), org.joda.time.DateTimeFieldType:access$100(), org.joda.time.DateTimeFieldType:access$200(), org.joda.time.DateTimeFieldType:access$300(), org.joda.time.DateTimeFieldType:access$400(), org.joda.time.DateTimeFieldType:access$500(), org.joda.time.DateTimeFieldType:access$600(), org.joda.time.DateTimeFieldType:access$700(), org.joda.time.DateTimeFieldType:access$800(), org.joda.time.DateTimeFieldType:access$900(), org.joda.time.DateTimeFieldType:access$1000(), org.joda.time.DateTimeFieldType:access$1100(), org.joda.time.DateTimeFieldType:access$1200(), org.joda.time.DateTimeFieldType:access$1300(), org.joda.time.DateTimeFieldType:access$1400(), org.joda.time.DateTimeFieldType:access$1500(), org.joda.time.DateTimeFieldType:access$1600(), org.joda.time.DateTimeFieldType:access$1700(), org.joda.time.DateTimeFieldType:access$1800(), org.joda.time.DateTimeFieldType:access$1900(), org.joda.time.DateTimeFieldType:access$2000(), org.joda.time.DateTimeFieldType:access$2100(), org.joda.time.DateTimeFieldType:access$2200()),
		org.joda.time.DateTimeZone$LazyInit:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeZone$LazyInit:buildFormatter() to listOf(org.joda.time.DateTimeZone$LazyInit$1:<init>(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter(), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology)),
		org.joda.time.DateTimeZone$LazyInit:buildMap() to listOf(java.util.HashMap:<init>(), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Collections:unmodifiableMap(java.util.Map)),
		org.joda.time.DateTimeZone$LazyInit:<clinit>() to listOf(org.joda.time.DateTimeZone$LazyInit:buildMap(), org.joda.time.DateTimeZone$LazyInit:buildFormatter()),
		org.joda.time.field.AbstractPartialFieldProperty:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.field.AbstractPartialFieldProperty:getFieldType() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getType()),
		org.joda.time.field.AbstractPartialFieldProperty:getName() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getName()),
		org.joda.time.field.AbstractPartialFieldProperty:getAsString() to listOf(org.joda.time.field.AbstractPartialFieldProperty:get(), java.lang.Integer:toString(int)),
		org.joda.time.field.AbstractPartialFieldProperty:getAsText() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getAsText(java.util.Locale)),
		org.joda.time.field.AbstractPartialFieldProperty:getAsText(java.util.Locale) to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.DateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale)),
		org.joda.time.field.AbstractPartialFieldProperty:getAsShortText() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getAsShortText(java.util.Locale)),
		org.joda.time.field.AbstractPartialFieldProperty:getAsShortText(java.util.Locale) to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.DateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale)),
		org.joda.time.field.AbstractPartialFieldProperty:getDurationField() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.field.AbstractPartialFieldProperty:getRangeDurationField() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getRangeDurationField()),
		org.joda.time.field.AbstractPartialFieldProperty:getMinimumValueOverall() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getMinimumValue()),
		org.joda.time.field.AbstractPartialFieldProperty:getMinimumValue() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial)),
		org.joda.time.field.AbstractPartialFieldProperty:getMaximumValueOverall() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.AbstractPartialFieldProperty:getMaximumValue() to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial)),
		org.joda.time.field.AbstractPartialFieldProperty:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale)),
		org.joda.time.field.AbstractPartialFieldProperty:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.field.AbstractPartialFieldProperty:getField(), org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale)),
		org.joda.time.field.AbstractPartialFieldProperty:compareTo(org.joda.time.ReadableInstant) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.field.AbstractPartialFieldProperty:getFieldType(), org.joda.time.ReadableInstant:get(org.joda.time.DateTimeFieldType)),
		org.joda.time.field.AbstractPartialFieldProperty:compareTo(org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.field.AbstractPartialFieldProperty:getFieldType(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType)),
		org.joda.time.field.AbstractPartialFieldProperty:equals(java.lang.Object) to listOf(org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.field.AbstractPartialFieldProperty:getFieldType(), org.joda.time.field.AbstractPartialFieldProperty:getFieldType(), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.ReadablePartial:getChronology(), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.ReadablePartial:getChronology(), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object)),
		org.joda.time.field.AbstractPartialFieldProperty:hashCode() to listOf(org.joda.time.field.AbstractPartialFieldProperty:get(), org.joda.time.field.AbstractPartialFieldProperty:getFieldType(), java.lang.Object:hashCode(), org.joda.time.field.AbstractPartialFieldProperty:getReadablePartial(), org.joda.time.ReadablePartial:getChronology(), java.lang.Object:hashCode()),
		org.joda.time.field.AbstractPartialFieldProperty:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.field.AbstractPartialFieldProperty:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int)),
		org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DateTimeFieldType:getDurationType(), org.joda.time.field.ScaledDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType-int), org.joda.time.DateTimeField:getMinimumValue(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.field.RemainderDateTimeField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.field.RemainderDateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType)),
		org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.field.RemainderDateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMinimumValue(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.DividedDateTimeField:getRangeDurationField() to listOf(org.joda.time.field.DecoratedDateTimeField:getRangeDurationField()),
		org.joda.time.field.DividedDateTimeField:get(long) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.field.DividedDateTimeField:add(long-int) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.field.DividedDateTimeField:add(long-long) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-long)),
		org.joda.time.field.DividedDateTimeField:addWrapField(long-int) to listOf(org.joda.time.field.DividedDateTimeField:get(long), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.field.DividedDateTimeField:set(long-int)),
		org.joda.time.field.DividedDateTimeField:getDifference(long-long) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.field.DividedDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.field.DividedDateTimeField:set(long-int) to listOf(org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long), org.joda.time.field.DividedDateTimeField:getRemainder(int), org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.field.DividedDateTimeField:roundFloor(long) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.field.DividedDateTimeField:get(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.field.DividedDateTimeField:remainder(long) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:remainder(long), org.joda.time.field.DividedDateTimeField:get(long), org.joda.time.field.DividedDateTimeField:set(long-int)),
		org.joda.time.field.PreciseDurationDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField) to listOf(org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType), org.joda.time.DurationField:isPrecise(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:getUnitMillis(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.PreciseDurationDateTimeField:set(long-int) to listOf(org.joda.time.field.PreciseDurationDateTimeField:getMinimumValue(), org.joda.time.field.PreciseDurationDateTimeField:getMaximumValueForSet(long-int), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.PreciseDurationDateTimeField:get(long)),
		org.joda.time.field.PreciseDurationDateTimeField:getMaximumValueForSet(long-int) to listOf(org.joda.time.field.PreciseDurationDateTimeField:getMaximumValue(long)),
		org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType) to listOf(java.util.HashMap:<init>(int), java.util.HashMap:get(java.lang.Object), org.joda.time.field.UnsupportedDurationField:<init>(org.joda.time.DurationFieldType), java.util.HashMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.field.UnsupportedDurationField:<init>(org.joda.time.DurationFieldType) to listOf(org.joda.time.DurationField:<init>()),
		org.joda.time.field.UnsupportedDurationField:getName() to listOf(org.joda.time.DurationFieldType:getName()),
		org.joda.time.field.UnsupportedDurationField:getValue(long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getValueAsLong(long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getValue(long-long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getValueAsLong(long-long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getMillis(int) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getMillis(long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getMillis(int-long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getMillis(long-long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:add(long-int) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:add(long-long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getDifference(long-long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.UnsupportedDurationField:unsupported()),
		org.joda.time.field.UnsupportedDurationField:equals(java.lang.Object) to listOf(org.joda.time.field.UnsupportedDurationField:getName(), org.joda.time.field.UnsupportedDurationField:getName(), org.joda.time.field.UnsupportedDurationField:getName(), org.joda.time.field.UnsupportedDurationField:getName(), java.lang.String:equals(java.lang.Object)),
		org.joda.time.field.UnsupportedDurationField:hashCode() to listOf(org.joda.time.field.UnsupportedDurationField:getName(), java.lang.String:hashCode()),
		org.joda.time.field.UnsupportedDurationField:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.field.UnsupportedDurationField:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.field.UnsupportedDurationField:readResolve() to listOf(org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.field.UnsupportedDurationField:unsupported() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.field.UnsupportedDurationField:compareTo(java.lang.Object) to listOf(org.joda.time.field.UnsupportedDurationField:compareTo(org.joda.time.DurationField)),
		org.joda.time.format.DateTimeFormatterBuilder$FixedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean) to listOf(org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean-int)),
		org.joda.time.format.DateTimeFormatterBuilder$FixedNumber:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), java.lang.CharSequence:charAt(int)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:values() to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[]:clone()),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:valueOf(java.lang.String) to listOf(java.lang.Enum:valueOf(java.lang.Class-java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:<init>(java.lang.String-int) to listOf(java.lang.Enum:<init>(java.lang.String-int)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.DateTimeZone:getID(), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(java.lang.CharSequence:length(), java.lang.Math:min(int-int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:subSequence(int-int), java.lang.CharSequence:toString(), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.CharSequence:charAt(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.util.Map:get(java.lang.Object), java.util.List:size(), java.util.List:get(int), org.joda.time.format.DateTimeFormatterBuilder:csStartsWith(java.lang.CharSequence-int-java.lang.String), java.lang.String:length(), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), org.joda.time.DateTimeZone:forID(java.lang.String), org.joda.time.format.DateTimeParserBucket:setZone(org.joda.time.DateTimeZone), java.lang.String:length()),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:<clinit>() to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId:<init>(java.lang.String-int), java.util.ArrayList:<init>(), org.joda.time.DateTimeZone:getAvailableIDs(), java.util.ArrayList:<init>(java.util.Collection), java.util.Collections:sort(java.util.List), java.util.HashMap:<init>(), java.util.List:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), java.lang.String:indexOf(int), java.lang.String:length(), java.lang.Math:max(int-int), java.lang.String:substring(int-int), java.lang.String:substring(int), java.util.Map:containsKey(java.lang.Object), java.util.ArrayList:<init>(), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:get(java.lang.Object), java.util.List:add(java.lang.Object), java.util.List:add(java.lang.Object), java.lang.String:length(), java.lang.Math:max(int-int)),
		org.joda.time.format.DateTimeParserBucket$SavedState:<init>(org.joda.time.format.DateTimeParserBucket) to listOf(java.lang.Object:<init>(), org.joda.time.format.DateTimeParserBucket:access$000(org.joda.time.format.DateTimeParserBucket), org.joda.time.format.DateTimeParserBucket:access$100(org.joda.time.format.DateTimeParserBucket), org.joda.time.format.DateTimeParserBucket:access$200(org.joda.time.format.DateTimeParserBucket), org.joda.time.format.DateTimeParserBucket:access$300(org.joda.time.format.DateTimeParserBucket)),
		org.joda.time.format.DateTimeParserBucket$SavedState:restoreState(org.joda.time.format.DateTimeParserBucket) to listOf(org.joda.time.format.DateTimeParserBucket:access$002(org.joda.time.format.DateTimeParserBucket-org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket:access$102(org.joda.time.format.DateTimeParserBucket-java.lang.Integer), org.joda.time.format.DateTimeParserBucket:access$202(org.joda.time.format.DateTimeParserBucket-org.joda.time.format.DateTimeParserBucket$SavedField[]), org.joda.time.format.DateTimeParserBucket:access$300(org.joda.time.format.DateTimeParserBucket), org.joda.time.format.DateTimeParserBucket:access$402(org.joda.time.format.DateTimeParserBucket-boolean), org.joda.time.format.DateTimeParserBucket:access$302(org.joda.time.format.DateTimeParserBucket-int)),
		org.joda.time.LocalDate:now() to listOf(org.joda.time.LocalDate:<init>()),
		org.joda.time.LocalDate:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.LocalDate:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDate:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.LocalDate:<init>(org.joda.time.Chronology)),
		org.joda.time.LocalDate:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.LocalDate:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.LocalDate:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseLocalDate(java.lang.String)),
		org.joda.time.LocalDate:fromCalendarFields(java.util.Calendar) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), org.joda.time.LocalDate:<init>(int-int-int)),
		org.joda.time.LocalDate:fromDateFields(java.util.Date) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Date:getTime(), java.util.GregorianCalendar:<init>(), java.util.GregorianCalendar:setTime(java.util.Date), org.joda.time.LocalDate:fromCalendarFields(java.util.Calendar), java.util.Date:getYear(), java.util.Date:getMonth(), java.util.Date:getDate(), org.joda.time.LocalDate:<init>(int-int-int)),
		org.joda.time.LocalDate:<init>() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:<init>(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:<init>(long) to listOf(org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:<init>(long-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.LocalDate:<init>(java.lang.Object) to listOf(org.joda.time.LocalDate:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.LocalDate:<init>(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.LocalDate:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.LocalDate:<init>(int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalDate:<init>(int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDate:<init>(int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.LocalDate:readResolve() to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object), org.joda.time.Chronology:withUTC(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:year(), org.joda.time.Chronology:monthOfYear(), org.joda.time.Chronology:dayOfMonth(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.LocalDate:getValue(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.LocalDate:get(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:isSupported(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:isSupported(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.DateTimeFieldType:getDurationType(), java.util.Set:contains(java.lang.Object), org.joda.time.LocalDate:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:getUnitMillis(), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:days(), org.joda.time.DurationField:getUnitMillis(), org.joda.time.LocalDate:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:isSupported()),
		org.joda.time.LocalDate:isSupported(org.joda.time.DurationFieldType) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), java.util.Set:contains(java.lang.Object), org.joda.time.DurationField:getUnitMillis(), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:days(), org.joda.time.DurationField:getUnitMillis(), org.joda.time.DurationField:isSupported()),
		org.joda.time.LocalDate:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.base.BaseLocal:equals(java.lang.Object)),
		org.joda.time.LocalDate:hashCode() to listOf(org.joda.time.base.BaseLocal:hashCode()),
		org.joda.time.LocalDate:compareTo(org.joda.time.ReadablePartial) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.base.BaseLocal:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDate:toDateTimeAtStartOfDay() to listOf(org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), org.joda.time.DateTime:withEarlierOffsetAtOverlap()),
		org.joda.time.LocalDate:toDateTimeAtMidnight() to listOf(org.joda.time.LocalDate:toDateTimeAtMidnight(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDate:toDateTimeAtMidnight(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getYear(), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDate:toDateTimeAtCurrentTime() to listOf(org.joda.time.LocalDate:toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDate:toDateTimeAtCurrentTime(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:toDateMidnight() to listOf(org.joda.time.LocalDate:toDateMidnight(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDate:toDateMidnight(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getYear(), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.DateMidnight:<init>(int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDate:toLocalDateTime(org.joda.time.LocalTime) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:getChronology(), org.joda.time.LocalTime:getChronology(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.LocalDate:getChronology(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:toDateTime(org.joda.time.LocalTime) to listOf(org.joda.time.LocalDate:toDateTime(org.joda.time.LocalTime-org.joda.time.DateTimeZone)),
		org.joda.time.LocalDate:toDateTime(org.joda.time.LocalTime-org.joda.time.DateTimeZone) to listOf(org.joda.time.LocalDate:toDateTimeAtCurrentTime(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getChronology(), org.joda.time.LocalTime:getChronology(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:getYear(), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.LocalTime:getHourOfDay(), org.joda.time.LocalTime:getMinuteOfHour(), org.joda.time.LocalTime:getSecondOfMinute(), org.joda.time.LocalTime:getMillisOfSecond(), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDate:toInterval() to listOf(org.joda.time.LocalDate:toInterval(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDate:toInterval(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone), org.joda.time.LocalDate:plusDays(int), org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone), org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant)),
		org.joda.time.LocalDate:toDate() to listOf(org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.LocalDate:getYear(), org.joda.time.LocalDate:getMonthOfYear(), java.util.Date:<init>(int-int-int), org.joda.time.LocalDate:fromDateFields(java.util.Date), org.joda.time.LocalDate:isBefore(org.joda.time.ReadablePartial), org.joda.time.LocalDate:equals(java.lang.Object), java.util.Date:getTime(), java.util.Date:setTime(long), org.joda.time.LocalDate:fromDateFields(java.util.Date), java.util.Date:getDate(), java.util.Date:getTime(), java.util.Date:setTime(long), java.util.Date:getTime(), java.util.Date:setTime(long), org.joda.time.LocalDate:equals(java.lang.Object), java.util.Date:getTime(), java.util.TimeZone:getDefault(), java.util.TimeZone:getDSTSavings(), java.util.Date:<init>(long), java.util.Date:getDate()),
		org.joda.time.LocalDate:withLocalMillis(long) to listOf(org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.LocalDate:getChronology(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDate:withFields(org.joda.time.ReadablePartial) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withField(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:isSupported(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:isSupported(org.joda.time.DurationFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.LocalDate:getChronology(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.LocalDate:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:add(long-long), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.LocalDate:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.LocalDate:plusYears(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:years(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:plusMonths(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:months(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:plusWeeks(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:plusDays(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:days(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.LocalDate:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.LocalDate:minusYears(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:years(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:minusMonths(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:months(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:minusWeeks(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:minusDays(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:days(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:property(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:isSupported(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDate:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:getEra() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:era(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getCenturyOfEra() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getYearOfEra() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getYearOfCentury() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getYear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getWeekyear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getMonthOfYear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getWeekOfWeekyear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getDayOfYear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getDayOfMonth() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:getDayOfWeek() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDate:withEra(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:era(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withCenturyOfEra(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withYearOfEra(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withYearOfCentury(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withYear(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withWeekyear(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withMonthOfYear(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withWeekOfWeekyear(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withDayOfYear(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withDayOfMonth(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:withDayOfWeek(int) to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate:era() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:era(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:centuryOfEra() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:yearOfCentury() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:yearOfEra() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:year() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:weekyear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:monthOfYear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:weekOfWeekyear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:dayOfYear() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:dayOfMonth() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:dayOfWeek() to listOf(org.joda.time.LocalDate:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField)),
		org.joda.time.LocalDate:toString() to listOf(org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDate:toString(java.lang.String) to listOf(org.joda.time.LocalDate:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDate:toString(java.lang.String-java.util.Locale) to listOf(org.joda.time.LocalDate:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDate:compareTo(java.lang.Object) to listOf(org.joda.time.LocalDate:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDate:<clinit>() to listOf(java.util.HashSet:<init>(), org.joda.time.DurationFieldType:days(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:weeks(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:months(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:weekyears(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:years(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:centuries(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:eras(), java.util.Set:add(java.lang.Object)),
		org.joda.time.MutableDateTime:now() to listOf(org.joda.time.MutableDateTime:<init>()),
		org.joda.time.MutableDateTime:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.MutableDateTime:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.MutableDateTime:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.MutableDateTime:<init>(org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.format.DateTimeFormatter:withOffsetParsed(), org.joda.time.MutableDateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.MutableDateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), org.joda.time.DateTime:toMutableDateTime()),
		org.joda.time.MutableDateTime:<init>() to listOf(org.joda.time.base.BaseDateTime:<init>()),
		org.joda.time.MutableDateTime:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.MutableDateTime:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:<init>(long) to listOf(org.joda.time.base.BaseDateTime:<init>(long)),
		org.joda.time.MutableDateTime:<init>(long-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.DateTimeZone)),
		org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:<init>(java.lang.Object) to listOf(org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone)),
		org.joda.time.MutableDateTime:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:<init>(int-int-int-int-int-int-int) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int)),
		org.joda.time.MutableDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone)),
		org.joda.time.MutableDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:setRounding(org.joda.time.DateTimeField) to listOf(org.joda.time.MutableDateTime:setRounding(org.joda.time.DateTimeField-int)),
		org.joda.time.MutableDateTime:setRounding(org.joda.time.DateTimeField-int) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.MutableDateTime:getMillis(), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setMillis(long) to listOf(org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.base.BaseDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setMillis(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:add(long) to listOf(org.joda.time.MutableDateTime:getMillis(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:add(org.joda.time.ReadableDuration) to listOf(org.joda.time.MutableDateTime:add(org.joda.time.ReadableDuration-int)),
		org.joda.time.MutableDateTime:add(org.joda.time.ReadableDuration-int) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.MutableDateTime:add(long)),
		org.joda.time.MutableDateTime:add(org.joda.time.ReadablePeriod) to listOf(org.joda.time.MutableDateTime:add(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutableDateTime:add(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setChronology(org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:setChronology(org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:setZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:getZone(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:setChronology(org.joda.time.Chronology)),
		org.joda.time.MutableDateTime:setZoneRetainFields(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:getZone(), org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:setChronology(org.joda.time.Chronology), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:set(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.MutableDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:add(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.MutableDateTime:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setYear(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addYears(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:years(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setWeekyear(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addWeekyears(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:weekyears(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setMonthOfYear(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addMonths(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:months(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setWeekOfWeekyear(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addWeeks(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setDayOfYear(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setDayOfMonth(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setDayOfWeek(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addDays(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:days(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setHourOfDay(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addHours(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:hours(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setMinuteOfDay(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:minuteOfDay(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setMinuteOfHour(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addMinutes(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:minutes(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setSecondOfDay(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:secondOfDay(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setSecondOfMinute(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addSeconds(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:seconds(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setMillisOfDay(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setMillisOfSecond(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:addMillis(int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:millis(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setDate(long) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.MutableDateTime:getMillisOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setDate(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.ReadableDateTime:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.MutableDateTime:getZone(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.MutableDateTime:setDate(long)),
		org.joda.time.MutableDateTime:setDate(int-int-int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.MutableDateTime:setDate(long)),
		org.joda.time.MutableDateTime:setTime(long) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:millisOfDay(), org.joda.time.DateTimeField:get(long), org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setTime(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.MutableDateTime:setTime(long)),
		org.joda.time.MutableDateTime:setTime(int-int-int-int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:setDateTime(int-int-int-int-int-int-int) to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime:property(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.MutableDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:isSupported(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:era() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:era(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:centuryOfEra() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:yearOfCentury() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:yearOfEra() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:year() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:weekyear() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:monthOfYear() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:weekOfWeekyear() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:dayOfYear() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:dayOfMonth() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:dayOfWeek() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:hourOfDay() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:minuteOfDay() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:minuteOfDay(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:minuteOfHour() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:secondOfDay() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:secondOfDay(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:secondOfMinute() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:millisOfDay() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:millisOfSecond() to listOf(org.joda.time.MutableDateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField)),
		org.joda.time.MutableDateTime:copy() to listOf(org.joda.time.MutableDateTime:clone()),
		org.joda.time.MutableDateTime:clone() to listOf(java.lang.Object:clone(), java.lang.InternalError:<init>(java.lang.String)),
		org.joda.time.Seconds:seconds(int) to listOf(org.joda.time.Seconds:<init>(int)),
		org.joda.time.Seconds:secondsBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:secondsBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:seconds(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.Seconds:seconds(int), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:secondsIn(org.joda.time.ReadableInterval) to listOf(org.joda.time.ReadableInterval:getStart(), org.joda.time.ReadableInterval:getEnd(), org.joda.time.DurationFieldType:seconds(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:standardSecondsIn(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BaseSingleFieldPeriod:standardPeriodIn(org.joda.time.ReadablePeriod-long), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:parseSeconds(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:getSeconds(), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:<init>(int) to listOf(org.joda.time.base.BaseSingleFieldPeriod:<init>(int)),
		org.joda.time.Seconds:readResolve() to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:getFieldType() to listOf(org.joda.time.DurationFieldType:seconds()),
		org.joda.time.Seconds:getPeriodType() to listOf(org.joda.time.PeriodType:seconds()),
		org.joda.time.Seconds:toStandardWeeks() to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Seconds:toStandardDays() to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Days:days(int)),
		org.joda.time.Seconds:toStandardHours() to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Hours:hours(int)),
		org.joda.time.Seconds:toStandardMinutes() to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Seconds:toStandardDuration() to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Seconds:getSeconds() to listOf(org.joda.time.Seconds:getValue()),
		org.joda.time.Seconds:plus(int) to listOf(org.joda.time.Seconds:getValue(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:plus(org.joda.time.Seconds) to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Seconds:plus(int)),
		org.joda.time.Seconds:minus(int) to listOf(org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Seconds:plus(int)),
		org.joda.time.Seconds:minus(org.joda.time.Seconds) to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Seconds:minus(int)),
		org.joda.time.Seconds:multipliedBy(int) to listOf(org.joda.time.Seconds:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:dividedBy(int) to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:negated() to listOf(org.joda.time.Seconds:getValue(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Seconds:isGreaterThan(org.joda.time.Seconds) to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Seconds:getValue(), org.joda.time.Seconds:getValue()),
		org.joda.time.Seconds:isLessThan(org.joda.time.Seconds) to listOf(org.joda.time.Seconds:getValue(), org.joda.time.Seconds:getValue(), org.joda.time.Seconds:getValue()),
		org.joda.time.Seconds:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Seconds:getValue(), java.lang.String:valueOf(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Seconds:<clinit>() to listOf(org.joda.time.Seconds:<init>(int), org.joda.time.Seconds:<init>(int), org.joda.time.Seconds:<init>(int), org.joda.time.Seconds:<init>(int), org.joda.time.Seconds:<init>(int), org.joda.time.Seconds:<init>(int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.PeriodType:seconds(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType)),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(java.io.DataInput-java.lang.String) to listOf(org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(java.lang.String-int-org.joda.time.tz.DateTimeZoneBuilder$Recurrence-org.joda.time.tz.DateTimeZoneBuilder$Recurrence)),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(java.lang.String-int-org.joda.time.tz.DateTimeZoneBuilder$Recurrence-org.joda.time.tz.DateTimeZoneBuilder$Recurrence) to listOf(org.joda.time.DateTimeZone:<init>(java.lang.String)),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(long), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(long), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(long-int-int), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(long-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:previousTransition(long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:previous(long-int-int), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:previous(long-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:equals(java.lang.Object) to listOf(org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getID(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getID(), java.lang.String:equals(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:equals(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:equals(java.lang.Object)),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:writeTo(java.io.DataOutput) to listOf(org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:writeTo(java.io.DataOutput), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:writeTo(java.io.DataOutput)),
		org.joda.time.tz.DateTimeZoneBuilder$DSTZone:findMatchingRecurrence(long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(long-int-int), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(long-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.InputStream-java.lang.String) to listOf(org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.DataInput-java.lang.String), java.io.DataInputStream:<init>(java.io.InputStream), org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.DataInput-java.lang.String)),
		org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.DataInput-java.lang.String) to listOf(java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUTF(), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.tz.FixedDateTimeZone:<init>(java.lang.String-java.lang.String-int-int), org.joda.time.DateTimeZone:equals(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(java.io.DataInput-java.lang.String), org.joda.time.tz.CachedDateTimeZone:forZone(org.joda.time.DateTimeZone), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(java.io.DataInput-java.lang.String), java.io.IOException:<init>(java.lang.String)),
		org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long) to listOf(java.io.DataOutput:writeByte(int), java.io.DataOutput:writeInt(int), java.io.DataOutput:writeByte(int), java.io.DataOutput:writeInt(int), java.io.DataOutput:writeByte(int), java.io.DataOutput:writeLong(long)),
		org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput) to listOf(java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readLong()),
		org.joda.time.tz.DateTimeZoneBuilder:buildFixedZone(java.lang.String-java.lang.String-int-int) to listOf(java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), org.joda.time.tz.FixedDateTimeZone:<init>(java.lang.String-java.lang.String-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder:<init>() to listOf(java.lang.Object:<init>(), java.util.ArrayList:<init>(int)),
		org.joda.time.tz.DateTimeZoneBuilder:addCutover(int-char-int-int-int-boolean-int) to listOf(java.util.ArrayList:size(), org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(char-int-int-int-boolean-int), java.util.ArrayList:size(), java.util.ArrayList:get(int), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setUpperLimit(int-org.joda.time.tz.DateTimeZoneBuilder$OfYear), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>(), java.util.ArrayList:add(java.lang.Object)),
		org.joda.time.tz.DateTimeZoneBuilder:setStandardOffset(int) to listOf(org.joda.time.tz.DateTimeZoneBuilder:getLastRuleSet(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setStandardOffset(int)),
		org.joda.time.tz.DateTimeZoneBuilder:setFixedSavings(java.lang.String-int) to listOf(org.joda.time.tz.DateTimeZoneBuilder:getLastRuleSet(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:setFixedSavings(java.lang.String-int)),
		org.joda.time.tz.DateTimeZoneBuilder:addRecurringSavings(java.lang.String-int-int-int-char-int-int-int-boolean-int) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(char-int-int-int-boolean-int), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear-java.lang.String-int), org.joda.time.tz.DateTimeZoneBuilder$Rule:<init>(org.joda.time.tz.DateTimeZoneBuilder$Recurrence-int-int), org.joda.time.tz.DateTimeZoneBuilder:getLastRuleSet(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:addRule(org.joda.time.tz.DateTimeZoneBuilder$Rule)),
		org.joda.time.tz.DateTimeZoneBuilder:getLastRuleSet() to listOf(java.util.ArrayList:size(), org.joda.time.tz.DateTimeZoneBuilder:addCutover(int-char-int-int-int-boolean-int), java.util.ArrayList:size(), java.util.ArrayList:get(int)),
		org.joda.time.tz.DateTimeZoneBuilder:toDateTimeZone(java.lang.String-boolean) to listOf(java.lang.IllegalArgumentException:<init>(), java.util.ArrayList:<init>(), java.util.ArrayList:size(), java.util.ArrayList:get(int), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:firstTransition(long), org.joda.time.tz.DateTimeZoneBuilder:addTransition(java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$Transition), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>(org.joda.time.tz.DateTimeZoneBuilder$RuleSet), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:nextTransition(long-int), org.joda.time.tz.DateTimeZoneBuilder:addTransition(java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$Transition), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:buildTailZone(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:getUpperLimit(int), java.util.ArrayList:size(), org.joda.time.tz.DateTimeZoneBuilder:buildFixedZone(java.lang.String-java.lang.String-int-int), java.util.ArrayList:size(), java.util.ArrayList:get(int), org.joda.time.tz.DateTimeZoneBuilder$Transition:getNameKey(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getWallOffset(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getStandardOffset(), org.joda.time.tz.DateTimeZoneBuilder:buildFixedZone(java.lang.String-java.lang.String-int-int), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:create(java.lang.String-boolean-java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$DSTZone), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:isCachable(), org.joda.time.tz.CachedDateTimeZone:forZone(org.joda.time.DateTimeZone)),
		org.joda.time.tz.DateTimeZoneBuilder:addTransition(java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$Transition) to listOf(java.util.ArrayList:size(), java.util.ArrayList:add(java.lang.Object), java.util.ArrayList:get(int), org.joda.time.tz.DateTimeZoneBuilder$Transition:isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition), java.util.ArrayList:get(int), org.joda.time.tz.DateTimeZoneBuilder$Transition:getWallOffset(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getWallOffset(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), java.util.ArrayList:add(java.lang.Object), java.util.ArrayList:remove(int), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), org.joda.time.tz.DateTimeZoneBuilder$Transition:withMillis(long), org.joda.time.tz.DateTimeZoneBuilder:addTransition(java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$Transition)),
		org.joda.time.tz.DateTimeZoneBuilder:writeTo(java.lang.String-java.io.OutputStream) to listOf(org.joda.time.tz.DateTimeZoneBuilder:writeTo(java.lang.String-java.io.DataOutput), java.io.DataOutputStream:<init>(java.io.OutputStream), org.joda.time.tz.DateTimeZoneBuilder:writeTo(java.lang.String-java.io.DataOutput), java.io.DataOutputStream:flush()),
		org.joda.time.tz.DateTimeZoneBuilder:writeTo(java.lang.String-java.io.DataOutput) to listOf(org.joda.time.tz.DateTimeZoneBuilder:toDateTimeZone(java.lang.String-boolean), java.io.DataOutput:writeByte(int), org.joda.time.DateTimeZone:getNameKey(long), java.io.DataOutput:writeUTF(java.lang.String), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long), org.joda.time.DateTimeZone:getStandardOffset(long), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long), java.io.DataOutput:writeByte(int), org.joda.time.tz.CachedDateTimeZone:getUncachedZone(), java.io.DataOutput:writeByte(int), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:writeTo(java.io.DataOutput)),
		org.joda.time.tz.ZoneInfoCompiler$RuleSet:<init>(org.joda.time.tz.ZoneInfoCompiler$Rule) to listOf(java.lang.Object:<init>(), java.util.ArrayList:<init>(), java.util.List:add(java.lang.Object)),
		org.joda.time.tz.ZoneInfoCompiler$RuleSet:addRule(org.joda.time.tz.ZoneInfoCompiler$Rule) to listOf(java.util.List:get(int), java.lang.String:equals(java.lang.Object), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.List:add(java.lang.Object)),
		org.joda.time.tz.ZoneInfoCompiler$RuleSet:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-int-java.lang.String) to listOf(java.util.List:size(), java.util.List:get(int), java.lang.Math:min(int-int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.util.List:get(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.lang.String:indexOf(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.String:substring(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.String:substring(int-int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), org.joda.time.tz.DateTimeZoneBuilder:setStandardOffset(int), java.util.List:get(int), org.joda.time.tz.ZoneInfoCompiler$Rule:<init>(org.joda.time.tz.ZoneInfoCompiler$Rule), org.joda.time.tz.ZoneInfoCompiler$Rule:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-int-java.lang.String), java.util.List:size(), java.util.List:get(int), org.joda.time.tz.ZoneInfoCompiler$Rule:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-int-java.lang.String)),
		org.joda.time.Weeks:weeks(int) to listOf(org.joda.time.Weeks:<init>(int)),
		org.joda.time.Weeks:weeksBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DurationFieldType:weeks(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:weeksBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:weeks(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.Weeks:weeks(int), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:weeksIn(org.joda.time.ReadableInterval) to listOf(org.joda.time.ReadableInterval:getStart(), org.joda.time.ReadableInterval:getEnd(), org.joda.time.DurationFieldType:weeks(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:standardWeeksIn(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BaseSingleFieldPeriod:standardPeriodIn(org.joda.time.ReadablePeriod-long), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:parseWeeks(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:getWeeks(), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:<init>(int) to listOf(org.joda.time.base.BaseSingleFieldPeriod:<init>(int)),
		org.joda.time.Weeks:readResolve() to listOf(org.joda.time.Weeks:getValue(), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:getFieldType() to listOf(org.joda.time.DurationFieldType:weeks()),
		org.joda.time.Weeks:getPeriodType() to listOf(org.joda.time.PeriodType:weeks()),
		org.joda.time.Weeks:toStandardDays() to listOf(org.joda.time.Weeks:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Days:days(int)),
		org.joda.time.Weeks:toStandardHours() to listOf(org.joda.time.Weeks:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Hours:hours(int)),
		org.joda.time.Weeks:toStandardMinutes() to listOf(org.joda.time.Weeks:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Weeks:toStandardSeconds() to listOf(org.joda.time.Weeks:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Weeks:toStandardDuration() to listOf(org.joda.time.Weeks:getValue(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Weeks:getWeeks() to listOf(org.joda.time.Weeks:getValue()),
		org.joda.time.Weeks:plus(int) to listOf(org.joda.time.Weeks:getValue(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:plus(org.joda.time.Weeks) to listOf(org.joda.time.Weeks:getValue(), org.joda.time.Weeks:plus(int)),
		org.joda.time.Weeks:minus(int) to listOf(org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Weeks:plus(int)),
		org.joda.time.Weeks:minus(org.joda.time.Weeks) to listOf(org.joda.time.Weeks:getValue(), org.joda.time.Weeks:minus(int)),
		org.joda.time.Weeks:multipliedBy(int) to listOf(org.joda.time.Weeks:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:dividedBy(int) to listOf(org.joda.time.Weeks:getValue(), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:negated() to listOf(org.joda.time.Weeks:getValue(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Weeks:isGreaterThan(org.joda.time.Weeks) to listOf(org.joda.time.Weeks:getValue(), org.joda.time.Weeks:getValue(), org.joda.time.Weeks:getValue()),
		org.joda.time.Weeks:isLessThan(org.joda.time.Weeks) to listOf(org.joda.time.Weeks:getValue(), org.joda.time.Weeks:getValue(), org.joda.time.Weeks:getValue()),
		org.joda.time.Weeks:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Weeks:getValue(), java.lang.String:valueOf(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Weeks:<clinit>() to listOf(org.joda.time.Weeks:<init>(int), org.joda.time.Weeks:<init>(int), org.joda.time.Weeks:<init>(int), org.joda.time.Weeks:<init>(int), org.joda.time.Weeks:<init>(int), org.joda.time.Weeks:<init>(int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.PeriodType:weeks(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType)),
		org.joda.time.base.BaseDuration:<init>(long) to listOf(org.joda.time.base.AbstractDuration:<init>()),
		org.joda.time.base.BaseDuration:<init>(long-long) to listOf(org.joda.time.base.AbstractDuration:<init>(), org.joda.time.field.FieldUtils:safeSubtract(long-long)),
		org.joda.time.base.BaseDuration:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.AbstractDuration:<init>(), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.field.FieldUtils:safeSubtract(long-long)),
		org.joda.time.base.BaseDuration:<init>(java.lang.Object) to listOf(org.joda.time.base.AbstractDuration:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getDurationConverter(java.lang.Object), org.joda.time.convert.DurationConverter:getDurationMillis(java.lang.Object)),
		org.joda.time.base.BaseDuration:toPeriod(org.joda.time.PeriodType) to listOf(org.joda.time.base.BaseDuration:getMillis(), org.joda.time.Period:<init>(long-org.joda.time.PeriodType)),
		org.joda.time.base.BaseDuration:toPeriod(org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDuration:getMillis(), org.joda.time.Period:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BaseDuration:toPeriod(org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDuration:getMillis(), org.joda.time.Period:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.base.BaseDuration:toPeriodFrom(org.joda.time.ReadableInstant) to listOf(org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration)),
		org.joda.time.base.BaseDuration:toPeriodFrom(org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType)),
		org.joda.time.base.BaseDuration:toPeriodTo(org.joda.time.ReadableInstant) to listOf(org.joda.time.Period:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant)),
		org.joda.time.base.BaseDuration:toPeriodTo(org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.Period:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.base.BaseDuration:toIntervalFrom(org.joda.time.ReadableInstant) to listOf(org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration)),
		org.joda.time.base.BaseDuration:toIntervalTo(org.joda.time.ReadableInstant) to listOf(org.joda.time.Interval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant)),
		org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object) to listOf(org.joda.time.chrono.BaseChronology:<init>(), org.joda.time.chrono.AssembledChronology:setFields()),
		org.joda.time.chrono.AssembledChronology:getZone() to listOf(org.joda.time.Chronology:getZone()),
		org.joda.time.chrono.AssembledChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.BaseChronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.chrono.AssembledChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.chrono.BaseChronology:getDateTimeMillis(int-int-int-int-int-int-int)),
		org.joda.time.chrono.AssembledChronology:getDateTimeMillis(long-int-int-int-int) to listOf(org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.chrono.BaseChronology:getDateTimeMillis(long-int-int-int-int)),
		org.joda.time.chrono.AssembledChronology:setFields() to listOf(org.joda.time.chrono.AssembledChronology$Fields:<init>(), org.joda.time.chrono.AssembledChronology$Fields:copyFieldsFrom(org.joda.time.Chronology), org.joda.time.chrono.AssembledChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.chrono.BaseChronology:millis(), org.joda.time.chrono.BaseChronology:seconds(), org.joda.time.chrono.BaseChronology:minutes(), org.joda.time.chrono.BaseChronology:hours(), org.joda.time.chrono.BaseChronology:halfdays(), org.joda.time.chrono.BaseChronology:days(), org.joda.time.chrono.BaseChronology:weeks(), org.joda.time.chrono.BaseChronology:weekyears(), org.joda.time.chrono.BaseChronology:months(), org.joda.time.chrono.BaseChronology:years(), org.joda.time.chrono.BaseChronology:centuries(), org.joda.time.chrono.BaseChronology:eras(), org.joda.time.chrono.BaseChronology:millisOfSecond(), org.joda.time.chrono.BaseChronology:millisOfDay(), org.joda.time.chrono.BaseChronology:secondOfMinute(), org.joda.time.chrono.BaseChronology:secondOfDay(), org.joda.time.chrono.BaseChronology:minuteOfHour(), org.joda.time.chrono.BaseChronology:minuteOfDay(), org.joda.time.chrono.BaseChronology:hourOfDay(), org.joda.time.chrono.BaseChronology:clockhourOfDay(), org.joda.time.chrono.BaseChronology:hourOfHalfday(), org.joda.time.chrono.BaseChronology:clockhourOfHalfday(), org.joda.time.chrono.BaseChronology:halfdayOfDay(), org.joda.time.chrono.BaseChronology:dayOfWeek(), org.joda.time.chrono.BaseChronology:dayOfMonth(), org.joda.time.chrono.BaseChronology:dayOfYear(), org.joda.time.chrono.BaseChronology:weekOfWeekyear(), org.joda.time.chrono.BaseChronology:weekyear(), org.joda.time.chrono.BaseChronology:weekyearOfCentury(), org.joda.time.chrono.BaseChronology:monthOfYear(), org.joda.time.chrono.BaseChronology:year(), org.joda.time.chrono.BaseChronology:yearOfEra(), org.joda.time.chrono.BaseChronology:yearOfCentury(), org.joda.time.chrono.BaseChronology:centuryOfEra(), org.joda.time.chrono.BaseChronology:era(), org.joda.time.Chronology:hourOfDay(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.Chronology:millisOfDay(), org.joda.time.Chronology:year(), org.joda.time.Chronology:monthOfYear(), org.joda.time.Chronology:dayOfMonth()),
		org.joda.time.chrono.AssembledChronology:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:defaultReadObject(), org.joda.time.chrono.AssembledChronology:setFields()),
		org.joda.time.chrono.BasicGJChronology:<init>(org.joda.time.Chronology-java.lang.Object-int) to listOf(org.joda.time.chrono.BasicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.BasicGJChronology:isLeapDay(long) to listOf(org.joda.time.chrono.BasicGJChronology:dayOfMonth(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.BasicGJChronology:monthOfYear(), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.chrono.BasicGJChronology:getMonthOfYear(long-int) to listOf(org.joda.time.chrono.BasicGJChronology:getYearMillis(int), org.joda.time.chrono.BasicGJChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicGJChronology:getDaysInYearMonth(int-int) to listOf(org.joda.time.chrono.BasicGJChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicGJChronology:getDaysInMonthMaxForSet(long-int) to listOf(org.joda.time.chrono.BasicGJChronology:getDaysInMonthMax(long)),
		org.joda.time.chrono.BasicGJChronology:getTotalMillisByYearMonth(int-int) to listOf(org.joda.time.chrono.BasicGJChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicGJChronology:getYearDifference(long-long) to listOf(org.joda.time.chrono.BasicGJChronology:getYear(long), org.joda.time.chrono.BasicGJChronology:getYear(long), org.joda.time.chrono.BasicGJChronology:getYearMillis(int), org.joda.time.chrono.BasicGJChronology:getYearMillis(int), org.joda.time.chrono.BasicGJChronology:isLeapYear(int), org.joda.time.chrono.BasicGJChronology:isLeapYear(int), org.joda.time.chrono.BasicGJChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicGJChronology:setYear(long-int) to listOf(org.joda.time.chrono.BasicGJChronology:getYear(long), org.joda.time.chrono.BasicGJChronology:getDayOfYear(long-int), org.joda.time.chrono.BasicGJChronology:getMillisOfDay(long), org.joda.time.chrono.BasicGJChronology:isLeapYear(int), org.joda.time.chrono.BasicGJChronology:isLeapYear(int), org.joda.time.chrono.BasicGJChronology:isLeapYear(int), org.joda.time.chrono.BasicGJChronology:getYearMonthDayMillis(int-int-int)),
		org.joda.time.chrono.EthiopicChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone-int) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.EthiopicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.chrono.LimitChronology:getInstance(org.joda.time.Chronology-org.joda.time.ReadableDateTime-org.joda.time.ReadableDateTime), org.joda.time.chrono.EthiopicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.chrono.EthiopicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.EthiopicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.EthiopicChronology:readResolve() to listOf(org.joda.time.chrono.EthiopicChronology:getBase(), org.joda.time.chrono.EthiopicChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.Chronology:getZone(), org.joda.time.chrono.EthiopicChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.EthiopicChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.EthiopicChronology:getZone(), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.EthiopicChronology:isLeapDay(long) to listOf(org.joda.time.chrono.EthiopicChronology:dayOfMonth(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.EthiopicChronology:monthOfYear(), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.chrono.EthiopicChronology:calculateFirstDayOfYearMillis(int) to listOf(org.joda.time.chrono.EthiopicChronology:isLeapYear(int)),
		org.joda.time.chrono.EthiopicChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.EthiopicChronology:getBase(), org.joda.time.chrono.BasicFixedMonthChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.chrono.BasicMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-int), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.chrono.EthiopicChronology:toString() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:toString()),
		org.joda.time.chrono.EthiopicChronology:hashCode() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:hashCode()),
		org.joda.time.chrono.EthiopicChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:equals(java.lang.Object)),
		org.joda.time.chrono.EthiopicChronology:getMinimumDaysInFirstWeek() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getMinimumDaysInFirstWeek()),
		org.joda.time.chrono.EthiopicChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getDateTimeMillis(int-int-int-int-int-int-int)),
		org.joda.time.chrono.EthiopicChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.chrono.EthiopicChronology:getZone() to listOf(org.joda.time.chrono.BasicFixedMonthChronology:getZone()),
		org.joda.time.chrono.EthiopicChronology:<clinit>() to listOf(org.joda.time.chrono.BasicSingleEraDateTimeField:<init>(java.lang.String), java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.EthiopicChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale) to listOf(java.util.Locale:getDefault(), java.util.concurrent.ConcurrentMap:get(java.lang.Object), org.joda.time.chrono.GJLocaleSymbols:<init>(java.util.Locale), java.util.concurrent.ConcurrentMap:putIfAbsent(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.GJLocaleSymbols:addSymbols(java.util.TreeMap-java.lang.String[]-java.lang.Integer[]) to listOf(java.util.TreeMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.GJLocaleSymbols:addNumerals(java.util.TreeMap-int-int-java.lang.Integer[]) to listOf(java.lang.String:valueOf(int), java.lang.String:intern(), java.util.TreeMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[]) to listOf(java.lang.String:length()),
		org.joda.time.chrono.GJLocaleSymbols:<init>(java.util.Locale) to listOf(java.lang.Object:<init>(), org.joda.time.DateTimeUtils:getDateFormatSymbols(java.util.Locale), java.text.DateFormatSymbols:getEras(), java.text.DateFormatSymbols:getWeekdays(), org.joda.time.chrono.GJLocaleSymbols:realignDaysOfWeek(java.lang.String[]), java.text.DateFormatSymbols:getShortWeekdays(), org.joda.time.chrono.GJLocaleSymbols:realignDaysOfWeek(java.lang.String[]), java.text.DateFormatSymbols:getMonths(), org.joda.time.chrono.GJLocaleSymbols:realignMonths(java.lang.String[]), java.text.DateFormatSymbols:getShortMonths(), org.joda.time.chrono.GJLocaleSymbols:realignMonths(java.lang.String[]), java.text.DateFormatSymbols:getAmPmStrings(), java.lang.Integer:valueOf(int), java.util.TreeMap:<init>(java.util.Comparator), org.joda.time.chrono.GJLocaleSymbols:addSymbols(java.util.TreeMap-java.lang.String[]-java.lang.Integer[]), java.util.Locale:getLanguage(), java.lang.String:equals(java.lang.Object), java.util.TreeMap:put(java.lang.Object-java.lang.Object), java.util.TreeMap:put(java.lang.Object-java.lang.Object), java.util.TreeMap:<init>(java.util.Comparator), org.joda.time.chrono.GJLocaleSymbols:addSymbols(java.util.TreeMap-java.lang.String[]-java.lang.Integer[]), org.joda.time.chrono.GJLocaleSymbols:addSymbols(java.util.TreeMap-java.lang.String[]-java.lang.Integer[]), org.joda.time.chrono.GJLocaleSymbols:addNumerals(java.util.TreeMap-int-int-java.lang.Integer[]), java.util.TreeMap:<init>(java.util.Comparator), org.joda.time.chrono.GJLocaleSymbols:addSymbols(java.util.TreeMap-java.lang.String[]-java.lang.Integer[]), org.joda.time.chrono.GJLocaleSymbols:addSymbols(java.util.TreeMap-java.lang.String[]-java.lang.Integer[]), org.joda.time.chrono.GJLocaleSymbols:addNumerals(java.util.TreeMap-int-int-java.lang.Integer[]), org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[]), org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[]), org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[]), org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[]), org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[]), org.joda.time.chrono.GJLocaleSymbols:maxLength(java.lang.String[])),
		org.joda.time.chrono.GJLocaleSymbols:eraTextToValue(java.lang.String) to listOf(java.util.TreeMap:get(java.lang.Object), java.lang.Integer:intValue(), org.joda.time.DateTimeFieldType:era(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String)),
		org.joda.time.chrono.GJLocaleSymbols:monthOfYearTextToValue(java.lang.String) to listOf(java.util.TreeMap:get(java.lang.Object), java.lang.Integer:intValue(), org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String)),
		org.joda.time.chrono.GJLocaleSymbols:dayOfWeekTextToValue(java.lang.String) to listOf(java.util.TreeMap:get(java.lang.Object), java.lang.Integer:intValue(), org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String)),
		org.joda.time.chrono.GJLocaleSymbols:halfdayTextToValue(java.lang.String) to listOf(java.lang.String:equalsIgnoreCase(java.lang.String), org.joda.time.DateTimeFieldType:halfdayOfDay(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String)),
		org.joda.time.chrono.GJLocaleSymbols:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>()),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:<init>() to listOf(org.joda.time.chrono.GregorianChronology:getInstanceUTC(), org.joda.time.chrono.GregorianChronology:year(), org.joda.time.DateTimeFieldType:yearOfEra(), org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:getRangeDurationField() to listOf(org.joda.time.chrono.GregorianChronology:getInstanceUTC(), org.joda.time.chrono.GregorianChronology:eras()),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:get(long) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:add(long-int) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:add(long-long) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-long)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:addWrapField(long-int) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:addWrapField(long-int)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:getDifference(long-long) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:set(long-int) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getMaximumValue(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long), org.joda.time.field.DecoratedDateTimeField:set(long-int)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:getMaximumValue() to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:roundCeiling(long) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundCeiling(long)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:remainder(long) to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.chrono.ISOYearOfEraDateTimeField:<clinit>() to listOf(org.joda.time.chrono.ISOYearOfEraDateTimeField:<init>()),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeZone-org.joda.time.DurationField-org.joda.time.DurationField-org.joda.time.DurationField) to listOf(org.joda.time.DateTimeField:getType(), org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeField:isSupported(), java.lang.IllegalArgumentException:<init>(), org.joda.time.chrono.ZonedChronology:useTimeArithmetic(org.joda.time.DurationField)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:isLenient() to listOf(org.joda.time.DateTimeField:isLenient()),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:get(long) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsText(long-java.util.Locale) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:getAsText(long-java.util.Locale)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsShortText(long-java.util.Locale) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsText(int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsText(int-java.util.Locale)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getAsShortText(int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsShortText(int-java.util.Locale)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:add(long-int) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.DateTimeField:add(long-int), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:add(long-int), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:add(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.DateTimeField:add(long-long), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:add(long-long), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:addWrapField(long-int) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:set(long-int) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:get(long), org.joda.time.DateTimeZone:getID(), org.joda.time.IllegalInstantException:<init>(long-java.lang.String), org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), org.joda.time.IllegalInstantException:getMessage(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.String), org.joda.time.IllegalFieldValueException:initCause(java.lang.Throwable)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getDifference(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:isLeap(long) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getLeapAmount(long) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:getLeapAmount(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:roundCeiling(long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:remainder(long) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue() to listOf(org.joda.time.DateTimeField:getMinimumValue()),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue(long) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:getMinimumValue(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[])),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue() to listOf(org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue(long) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeField:getMaximumValue(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[])),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:getOffsetToAdd(long) to listOf(org.joda.time.DateTimeZone:getOffset(long), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.DateTimeZone:equals(java.lang.Object), java.lang.Object:equals(java.lang.Object), java.lang.Object:equals(java.lang.Object)),
		org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:hashCode() to listOf(java.lang.Object:hashCode(), org.joda.time.DateTimeZone:hashCode()),
		org.joda.time.convert.ConverterSet$Entry:<init>(java.lang.Class-org.joda.time.convert.Converter) to listOf(java.lang.Object:<init>()),
		org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:<init>()),
		org.joda.time.DateMidnight$Property:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeObject(java.lang.Object), org.joda.time.DateTimeField:getType(), java.io.ObjectOutputStream:writeObject(java.lang.Object)),
		org.joda.time.DateMidnight$Property:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readObject(), java.io.ObjectInputStream:readObject(), org.joda.time.DateMidnight:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.DateMidnight$Property:getMillis() to listOf(org.joda.time.DateMidnight:getMillis()),
		org.joda.time.DateMidnight$Property:getChronology() to listOf(org.joda.time.DateMidnight:getChronology()),
		org.joda.time.DateMidnight$Property:addToCopy(int) to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:add(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:addToCopy(long) to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:add(long-long), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:setCopy(int) to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:setCopy(java.lang.String) to listOf(org.joda.time.DateMidnight$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.DateMidnight$Property:withMaximumValue() to listOf(org.joda.time.DateMidnight$Property:getMaximumValue(), org.joda.time.DateMidnight$Property:setCopy(int)),
		org.joda.time.DateMidnight$Property:withMinimumValue() to listOf(org.joda.time.DateMidnight$Property:getMinimumValue(), org.joda.time.DateMidnight$Property:setCopy(int)),
		org.joda.time.DateMidnight$Property:roundFloorCopy() to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:roundCeilingCopy() to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:roundHalfFloorCopy() to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:roundHalfCeilingCopy() to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight$Property:roundHalfEvenCopy() to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:<init>()),
		org.joda.time.DateTime$Property:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeObject(java.lang.Object), org.joda.time.DateTimeField:getType(), java.io.ObjectOutputStream:writeObject(java.lang.Object)),
		org.joda.time.DateTime$Property:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readObject(), java.io.ObjectInputStream:readObject(), org.joda.time.DateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.DateTime$Property:getMillis() to listOf(org.joda.time.DateTime:getMillis()),
		org.joda.time.DateTime$Property:getChronology() to listOf(org.joda.time.DateTime:getChronology()),
		org.joda.time.DateTime$Property:addToCopy(int) to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:addToCopy(long) to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:add(long-long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:setCopy(int) to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:setCopy(java.lang.String) to listOf(org.joda.time.DateTime$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.DateTime$Property:withMaximumValue() to listOf(org.joda.time.DateTime$Property:getMaximumValue(), org.joda.time.DateTime$Property:setCopy(int), org.joda.time.IllegalInstantException:isIllegalInstant(java.lang.Throwable), org.joda.time.DateTime$Property:getChronology(), org.joda.time.Chronology:getZone(), org.joda.time.DateTime$Property:getMillis(), org.joda.time.DateTimeZone:previousTransition(long), org.joda.time.DateTime$Property:getChronology(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime$Property:withMinimumValue() to listOf(org.joda.time.DateTime$Property:getMinimumValue(), org.joda.time.DateTime$Property:setCopy(int), org.joda.time.IllegalInstantException:isIllegalInstant(java.lang.Throwable), org.joda.time.DateTime$Property:getChronology(), org.joda.time.Chronology:getZone(), org.joda.time.DateTime$Property:getMillis(), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.DateTime$Property:getChronology(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime$Property:roundFloorCopy() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:roundCeilingCopy() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:roundHalfFloorCopy() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:roundHalfCeilingCopy() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime$Property:roundHalfEvenCopy() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.Days:days(int) to listOf(org.joda.time.Days:<init>(int)),
		org.joda.time.Days:daysBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Days:days(int)),
		org.joda.time.Days:daysBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:days(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.Days:days(int), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.Days:days(int)),
		org.joda.time.Days:daysIn(org.joda.time.ReadableInterval) to listOf(org.joda.time.ReadableInterval:getStart(), org.joda.time.ReadableInterval:getEnd(), org.joda.time.DurationFieldType:days(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Days:days(int)),
		org.joda.time.Days:standardDaysIn(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BaseSingleFieldPeriod:standardPeriodIn(org.joda.time.ReadablePeriod-long), org.joda.time.Days:days(int)),
		org.joda.time.Days:parseDays(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:getDays(), org.joda.time.Days:days(int)),
		org.joda.time.Days:<init>(int) to listOf(org.joda.time.base.BaseSingleFieldPeriod:<init>(int)),
		org.joda.time.Days:readResolve() to listOf(org.joda.time.Days:getValue(), org.joda.time.Days:days(int)),
		org.joda.time.Days:getFieldType() to listOf(org.joda.time.DurationFieldType:days()),
		org.joda.time.Days:getPeriodType() to listOf(org.joda.time.PeriodType:days()),
		org.joda.time.Days:toStandardWeeks() to listOf(org.joda.time.Days:getValue(), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Days:toStandardHours() to listOf(org.joda.time.Days:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Hours:hours(int)),
		org.joda.time.Days:toStandardMinutes() to listOf(org.joda.time.Days:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Days:toStandardSeconds() to listOf(org.joda.time.Days:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Days:toStandardDuration() to listOf(org.joda.time.Days:getValue(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Days:getDays() to listOf(org.joda.time.Days:getValue()),
		org.joda.time.Days:plus(int) to listOf(org.joda.time.Days:getValue(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.Days:days(int)),
		org.joda.time.Days:plus(org.joda.time.Days) to listOf(org.joda.time.Days:getValue(), org.joda.time.Days:plus(int)),
		org.joda.time.Days:minus(int) to listOf(org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Days:plus(int)),
		org.joda.time.Days:minus(org.joda.time.Days) to listOf(org.joda.time.Days:getValue(), org.joda.time.Days:minus(int)),
		org.joda.time.Days:multipliedBy(int) to listOf(org.joda.time.Days:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Days:days(int)),
		org.joda.time.Days:dividedBy(int) to listOf(org.joda.time.Days:getValue(), org.joda.time.Days:days(int)),
		org.joda.time.Days:negated() to listOf(org.joda.time.Days:getValue(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Days:days(int)),
		org.joda.time.Days:isGreaterThan(org.joda.time.Days) to listOf(org.joda.time.Days:getValue(), org.joda.time.Days:getValue(), org.joda.time.Days:getValue()),
		org.joda.time.Days:isLessThan(org.joda.time.Days) to listOf(org.joda.time.Days:getValue(), org.joda.time.Days:getValue(), org.joda.time.Days:getValue()),
		org.joda.time.Days:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Days:getValue(), java.lang.String:valueOf(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Days:<clinit>() to listOf(org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.Days:<init>(int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.PeriodType:days(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType)),
		org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.DateTimeField:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.BaseDateTimeField:getName() to listOf(org.joda.time.DateTimeFieldType:getName()),
		org.joda.time.field.BaseDateTimeField:getAsText(long-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:get(long), org.joda.time.field.BaseDateTimeField:getAsText(int-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsText(long) to listOf(org.joda.time.field.BaseDateTimeField:getAsText(long-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:getAsText(int-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:getType(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.field.BaseDateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsText(int-java.util.Locale) to listOf(java.lang.Integer:toString(int)),
		org.joda.time.field.BaseDateTimeField:getAsShortText(long-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:get(long), org.joda.time.field.BaseDateTimeField:getAsShortText(int-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsShortText(long) to listOf(org.joda.time.field.BaseDateTimeField:getAsShortText(long-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:getAsShortText(int-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:getType(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.field.BaseDateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:getAsShortText(int-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:getAsText(int-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:add(long-int) to listOf(org.joda.time.field.BaseDateTimeField:getDurationField(), org.joda.time.DurationField:add(long-int)),
		org.joda.time.field.BaseDateTimeField:add(long-long) to listOf(org.joda.time.field.BaseDateTimeField:getDurationField(), org.joda.time.DurationField:add(long-long)),
		org.joda.time.field.BaseDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:getField(int), org.joda.time.field.BaseDateTimeField:getRangeDurationField(), org.joda.time.DurationField:getType(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DurationField:getType(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:getField(int), org.joda.time.field.BaseDateTimeField:getRangeDurationField(), org.joda.time.DurationField:getType(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DurationField:getType(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.BaseDateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.ReadablePartial:getField(int), org.joda.time.field.BaseDateTimeField:getRangeDurationField(), org.joda.time.DurationField:getType(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DurationField:getType(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.ReadablePartial:getField(int), org.joda.time.field.BaseDateTimeField:getRangeDurationField(), org.joda.time.DurationField:getType(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DurationField:getType(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.BaseDateTimeField:addWrapField(long-int) to listOf(org.joda.time.field.BaseDateTimeField:get(long), org.joda.time.field.BaseDateTimeField:getMinimumValue(long), org.joda.time.field.BaseDateTimeField:getMaximumValue(long), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.field.BaseDateTimeField:set(long-int)),
		org.joda.time.field.BaseDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial), org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.BaseDateTimeField:getDifference(long-long) to listOf(org.joda.time.field.BaseDateTimeField:getDurationField(), org.joda.time.DurationField:getDifference(long-long)),
		org.joda.time.field.BaseDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.BaseDateTimeField:getDurationField(), org.joda.time.DurationField:getDifferenceAsLong(long-long)),
		org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getField(int), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[])),
		org.joda.time.field.BaseDateTimeField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:convertText(java.lang.String-java.util.Locale), org.joda.time.field.BaseDateTimeField:set(long-int)),
		org.joda.time.field.BaseDateTimeField:set(long-java.lang.String) to listOf(org.joda.time.field.BaseDateTimeField:set(long-java.lang.String-java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:convertText(java.lang.String-java.util.Locale), org.joda.time.field.BaseDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.BaseDateTimeField:convertText(java.lang.String-java.util.Locale) to listOf(java.lang.Integer:parseInt(java.lang.String), org.joda.time.field.BaseDateTimeField:getType(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String)),
		org.joda.time.field.BaseDateTimeField:getMinimumValue(long) to listOf(org.joda.time.field.BaseDateTimeField:getMinimumValue()),
		org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.field.BaseDateTimeField:getMinimumValue()),
		org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.field.BaseDateTimeField:getMinimumValue(org.joda.time.ReadablePartial)),
		org.joda.time.field.BaseDateTimeField:getMaximumValue(long) to listOf(org.joda.time.field.BaseDateTimeField:getMaximumValue()),
		org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.field.BaseDateTimeField:getMaximumValue()),
		org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.field.BaseDateTimeField:getMaximumValue(org.joda.time.ReadablePartial)),
		org.joda.time.field.BaseDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:getMaximumValue(), java.lang.Integer:toString(int), java.lang.String:length()),
		org.joda.time.field.BaseDateTimeField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.field.BaseDateTimeField:getMaximumTextLength(java.util.Locale)),
		org.joda.time.field.BaseDateTimeField:roundCeiling(long) to listOf(org.joda.time.field.BaseDateTimeField:roundFloor(long), org.joda.time.field.BaseDateTimeField:add(long-int)),
		org.joda.time.field.BaseDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.field.BaseDateTimeField:roundFloor(long), org.joda.time.field.BaseDateTimeField:roundCeiling(long)),
		org.joda.time.field.BaseDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.field.BaseDateTimeField:roundFloor(long), org.joda.time.field.BaseDateTimeField:roundCeiling(long)),
		org.joda.time.field.BaseDateTimeField:roundHalfEven(long) to listOf(org.joda.time.field.BaseDateTimeField:roundFloor(long), org.joda.time.field.BaseDateTimeField:roundCeiling(long), org.joda.time.field.BaseDateTimeField:get(long)),
		org.joda.time.field.BaseDateTimeField:remainder(long) to listOf(org.joda.time.field.BaseDateTimeField:roundFloor(long)),
		org.joda.time.field.BaseDateTimeField:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.field.BaseDateTimeField:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:<init>(org.joda.time.field.ImpreciseDateTimeField-org.joda.time.DurationFieldType) to listOf(org.joda.time.field.BaseDurationField:<init>(org.joda.time.DurationFieldType)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getValue(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:getDifference(long-long)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getValueAsLong(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getMillis(int-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:add(long-int)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getMillis(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:add(long-long)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:add(long-int) to listOf(org.joda.time.field.ImpreciseDateTimeField:add(long-int)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:add(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:add(long-long)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getDifference(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:getDifference(long-long)),
		org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.field.ScaledDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType-int), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField) to listOf(org.joda.time.field.DividedDateTimeField:getType(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DateTimeFieldType)),
		org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType)),
		org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.field.DividedDateTimeField:getWrappedField(), org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType)),
		org.joda.time.field.RemainderDateTimeField:get(long) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.field.RemainderDateTimeField:addWrapField(long-int) to listOf(org.joda.time.field.RemainderDateTimeField:get(long), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.field.RemainderDateTimeField:set(long-int)),
		org.joda.time.field.RemainderDateTimeField:set(long-int) to listOf(org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long), org.joda.time.field.RemainderDateTimeField:getDivided(int), org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.field.RemainderDateTimeField:roundFloor(long) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.field.RemainderDateTimeField:roundCeiling(long) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundCeiling(long)),
		org.joda.time.field.RemainderDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfFloor(long)),
		org.joda.time.field.RemainderDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfCeiling(long)),
		org.joda.time.field.RemainderDateTimeField:roundHalfEven(long) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfEven(long)),
		org.joda.time.field.RemainderDateTimeField:remainder(long) to listOf(org.joda.time.field.RemainderDateTimeField:getWrappedField(), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.format.DateTimeFormat$StyleFormatter:<init>(int-int-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormat$StyleFormatter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormat$StyleFormatter:getFormatter(java.util.Locale), org.joda.time.format.DateTimeFormatter:getPrinter0(), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale)),
		org.joda.time.format.DateTimeFormat$StyleFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormat$StyleFormatter:getFormatter(java.util.Locale), org.joda.time.format.DateTimeFormatter:getPrinter0(), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.format.DateTimeFormat$StyleFormatter:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.format.DateTimeParserBucket:getLocale(), org.joda.time.format.DateTimeFormat$StyleFormatter:getFormatter(java.util.Locale), org.joda.time.format.DateTimeFormatter:getParser0(), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int)),
		org.joda.time.format.DateTimeFormat$StyleFormatter:getFormatter(java.util.Locale) to listOf(java.util.Locale:getDefault(), org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey:<init>(int-int-int-java.util.Locale), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), org.joda.time.format.DateTimeFormat$StyleFormatter:getPattern(java.util.Locale), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object)),
		org.joda.time.format.DateTimeFormat$StyleFormatter:getPattern(java.util.Locale) to listOf(java.text.DateFormat:getDateInstance(int-java.util.Locale), java.text.DateFormat:getTimeInstance(int-java.util.Locale), java.text.DateFormat:getDateTimeInstance(int-int-java.util.Locale), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.text.SimpleDateFormat:toPattern()),
		org.joda.time.format.DateTimeFormat$StyleFormatter:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$MatchingParser:<init>(org.joda.time.format.InternalParser[]) to listOf(java.lang.Object:<init>(), org.joda.time.format.InternalParser:estimateParsedLength()),
		org.joda.time.format.DateTimeFormatterBuilder$MatchingParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.format.DateTimeParserBucket:saveState(), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), java.lang.CharSequence:length(), org.joda.time.format.DateTimeParserBucket:saveState(), org.joda.time.format.DateTimeParserBucket:restoreState(java.lang.Object), org.joda.time.format.DateTimeParserBucket:restoreState(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:<init>(org.joda.time.DateTimeFieldType-int-boolean) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(java.lang.CharSequence:length(), java.lang.Math:min(int-int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:subSequence(int-int), java.lang.CharSequence:toString(), java.lang.Integer:parseInt(java.lang.String), java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int), org.joda.time.format.DateTimeParserBucket:getPivotYear(), org.joda.time.format.DateTimeParserBucket:getPivotYear(), java.lang.Integer:intValue(), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-int)),
		org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:getTwoDigitYear(long-org.joda.time.Chronology), java.lang.Appendable:append(char), java.lang.Appendable:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:getTwoDigitYear(long-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:get(long)),
		org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:getTwoDigitYear(org.joda.time.ReadablePartial), java.lang.Appendable:append(char), java.lang.Appendable:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:getTwoDigitYear(org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType)),
		org.joda.time.format.InternalPrinterDateTimePrinter:of(org.joda.time.format.InternalPrinter) to listOf(org.joda.time.format.DateTimePrinterInternalPrinter:getUnderlying(), org.joda.time.format.InternalPrinterDateTimePrinter:<init>(org.joda.time.format.InternalPrinter)),
		org.joda.time.format.InternalPrinterDateTimePrinter:<init>(org.joda.time.format.InternalPrinter) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.InternalPrinterDateTimePrinter:estimatePrintedLength() to listOf(org.joda.time.format.InternalPrinter:estimatePrintedLength()),
		org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.StringBuffer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale)),
		org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.io.Writer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale)),
		org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale)),
		org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.io.Writer-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.format.InternalPrinterDateTimePrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.format.InternalPrinterDateTimePrinter:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object)),
		org.joda.time.format.ISODateTimeFormat$Constants:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:dateElementParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:localDateParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:dateElementParser(), org.joda.time.format.DateTimeFormatter:withZoneUTC()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateElementParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:yearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:monthElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:dayOfMonthElement(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:weekyearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:weekElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:dayOfWeekElement(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:yearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:dayOfYearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser[]), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:timeParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:localTimeParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter(), org.joda.time.format.DateTimeFormatter:withZoneUTC()),
		org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser[]), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:hourElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:minuteElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:secondElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfSecond(int-int), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfMinute(int-int), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser[]), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfHour(int-int), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser[]), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateTimeParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:dateOptionalTimeParser(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser[]), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateOptionalTimeParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:dateElementParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:localDateOptionalTimeParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toParser(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:dateElementParser(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toFormatter(), org.joda.time.format.DateTimeFormatter:withZoneUTC()),
		org.joda.time.format.ISODateTimeFormat$Constants:time() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondFraction(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:timeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecond(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:tTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:time(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:tTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:timeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:tTime(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:tTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:ordinalDate() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:yearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:dayOfYearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:ordinalDateTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:tTime(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:ordinalDateTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:tTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:weekDateTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:weekDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:tTime(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:weekDateTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:weekDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:tTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicDate() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendYear(int-int), org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:dayOfMonth(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfSecond(int-int), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicTTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTime(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicTTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicDateTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:basicDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTTime(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicDateTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:basicDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDate() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendYear(int-int), org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDateTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTTime(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDateTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDate() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendWeekyear(int-int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.DateTimeFieldType:weekOfWeekyear(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDateTime() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTTime(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDateTimeNoMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDate(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:basicTTimeNoMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:yearMonth() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:yearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:monthElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:yearMonthDay() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:yearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:monthElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:dayOfMonthElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:weekyearWeek() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:weekyearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:weekElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:weekyearWeekDay() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:weekyearElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:weekElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:dayOfWeekElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:hourMinute() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:hourElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:minuteElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecond() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:hourElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:minuteElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:secondElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:hourElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:minuteElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:secondElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfSecond(int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondFraction() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat$Constants:hourElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:minuteElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:secondElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:fractionElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateHour() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat:hour(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinute() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:hourMinute(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecond() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecond(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecondMillis() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondMillis(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecondFraction() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondFraction(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:yearElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendYear(int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:monthElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYear(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dayOfMonthElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:weekyearElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendWeekyear(int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:weekElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:appendWeekOfWeekyear(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dayOfWeekElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:dayOfYearElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfYear(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:literalTElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:hourElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendHourOfDay(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:minuteElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendMinuteOfHour(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:secondElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendSecondOfMinute(int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:fractionElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfSecond(int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:offsetElement() to listOf(org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat$Constants:<clinit>() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:yearElement(), org.joda.time.format.ISODateTimeFormat$Constants:monthElement(), org.joda.time.format.ISODateTimeFormat$Constants:dayOfMonthElement(), org.joda.time.format.ISODateTimeFormat$Constants:weekyearElement(), org.joda.time.format.ISODateTimeFormat$Constants:weekElement(), org.joda.time.format.ISODateTimeFormat$Constants:dayOfWeekElement(), org.joda.time.format.ISODateTimeFormat$Constants:dayOfYearElement(), org.joda.time.format.ISODateTimeFormat$Constants:hourElement(), org.joda.time.format.ISODateTimeFormat$Constants:minuteElement(), org.joda.time.format.ISODateTimeFormat$Constants:secondElement(), org.joda.time.format.ISODateTimeFormat$Constants:fractionElement(), org.joda.time.format.ISODateTimeFormat$Constants:offsetElement(), org.joda.time.format.ISODateTimeFormat$Constants:literalTElement(), org.joda.time.format.ISODateTimeFormat$Constants:yearMonth(), org.joda.time.format.ISODateTimeFormat$Constants:yearMonthDay(), org.joda.time.format.ISODateTimeFormat$Constants:weekyearWeek(), org.joda.time.format.ISODateTimeFormat$Constants:weekyearWeekDay(), org.joda.time.format.ISODateTimeFormat$Constants:hourMinute(), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecond(), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondMillis(), org.joda.time.format.ISODateTimeFormat$Constants:hourMinuteSecondFraction(), org.joda.time.format.ISODateTimeFormat$Constants:dateHour(), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinute(), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecond(), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecondMillis(), org.joda.time.format.ISODateTimeFormat$Constants:dateHourMinuteSecondFraction(), org.joda.time.format.ISODateTimeFormat$Constants:time(), org.joda.time.format.ISODateTimeFormat$Constants:timeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:tTime(), org.joda.time.format.ISODateTimeFormat$Constants:tTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:dateTime(), org.joda.time.format.ISODateTimeFormat$Constants:dateTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:weekDateTime(), org.joda.time.format.ISODateTimeFormat$Constants:weekDateTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDate(), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDateTime(), org.joda.time.format.ISODateTimeFormat$Constants:ordinalDateTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:basicDate(), org.joda.time.format.ISODateTimeFormat$Constants:basicTime(), org.joda.time.format.ISODateTimeFormat$Constants:basicTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:basicTTime(), org.joda.time.format.ISODateTimeFormat$Constants:basicTTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:basicDateTime(), org.joda.time.format.ISODateTimeFormat$Constants:basicDateTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDate(), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDateTime(), org.joda.time.format.ISODateTimeFormat$Constants:basicOrdinalDateTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDate(), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDateTime(), org.joda.time.format.ISODateTimeFormat$Constants:basicWeekDateTimeNoMillis(), org.joda.time.format.ISODateTimeFormat$Constants:dateElementParser(), org.joda.time.format.ISODateTimeFormat$Constants:timeElementParser(), org.joda.time.format.ISODateTimeFormat$Constants:dateParser(), org.joda.time.format.ISODateTimeFormat$Constants:localDateParser(), org.joda.time.format.ISODateTimeFormat$Constants:timeParser(), org.joda.time.format.ISODateTimeFormat$Constants:localTimeParser(), org.joda.time.format.ISODateTimeFormat$Constants:dateTimeParser(), org.joda.time.format.ISODateTimeFormat$Constants:dateOptionalTimeParser(), org.joda.time.format.ISODateTimeFormat$Constants:localDateOptionalTimeParser()),
		org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:<init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) to listOf(org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:<init>(), java.util.HashSet:<init>(), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:getAffixes(), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:getAffixes(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.util.Set:add(java.lang.Object), java.util.Set:size(), java.util.Set:toArray(java.lang.Object[])),
		org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:calculatePrintedLength(int) to listOf(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:calculatePrintedLength(int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:calculatePrintedLength(int)),
		org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:printTo(java.lang.StringBuffer-int) to listOf(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.lang.StringBuffer-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.lang.StringBuffer-int)),
		org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:printTo(java.io.Writer-int) to listOf(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.io.Writer-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.io.Writer-int)),
		org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:parse(java.lang.String-int) to listOf(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:parse(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:parse(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:parse(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:matchesOtherAffix(int-java.lang.String-int)),
		org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:scan(java.lang.String-int) to listOf(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:scan(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:parse(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:scan(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:parse(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:matchesOtherAffix(int-java.lang.String-int)),
		org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:getAffixes() to listOf(java.lang.String[]:clone()),
		org.joda.time.format.PeriodFormatterBuilder$Separator:<init>(java.lang.String-java.lang.String-java.lang.String[]-org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-boolean-boolean) to listOf(java.lang.Object:<init>(), java.lang.String:equals(java.lang.Object), java.util.TreeSet:<init>(java.util.Comparator), java.util.TreeSet:add(java.lang.Object), java.util.TreeSet:add(java.lang.Object), java.util.TreeSet:add(java.lang.Object), java.util.ArrayList:<init>(java.util.Collection), java.util.Collections:reverse(java.util.List), java.util.ArrayList:size(), java.util.ArrayList:toArray(java.lang.Object[])),
		org.joda.time.format.PeriodFormatterBuilder$Separator:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Separator:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.format.PeriodPrinter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), java.lang.String:length(), java.lang.String:length(), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$Separator:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(java.lang.String), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), java.lang.StringBuffer:append(java.lang.String), org.joda.time.format.PeriodPrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Separator:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), java.io.Writer:write(java.lang.String), java.io.Writer:write(java.lang.String), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale), java.io.Writer:write(java.lang.String), org.joda.time.format.PeriodPrinter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Separator:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale) to listOf(org.joda.time.format.PeriodParser:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), java.lang.String:length(), java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length(), org.joda.time.format.PeriodParser:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale)),
		org.joda.time.Instant:now() to listOf(org.joda.time.Instant:<init>()),
		org.joda.time.Instant:ofEpochMilli(long) to listOf(org.joda.time.Instant:<init>(long)),
		org.joda.time.Instant:ofEpochSecond(long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.Instant:<init>(long)),
		org.joda.time.Instant:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.Instant:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.Instant:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), org.joda.time.DateTime:toInstant()),
		org.joda.time.Instant:<init>() to listOf(org.joda.time.base.AbstractInstant:<init>(), org.joda.time.DateTimeUtils:currentTimeMillis()),
		org.joda.time.Instant:<init>(long) to listOf(org.joda.time.base.AbstractInstant:<init>()),
		org.joda.time.Instant:<init>(java.lang.Object) to listOf(org.joda.time.base.AbstractInstant:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getInstantConverter(java.lang.Object), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.convert.InstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.Instant:withMillis(long) to listOf(org.joda.time.Instant:<init>(long)),
		org.joda.time.Instant:withDurationAdded(long-int) to listOf(org.joda.time.Instant:getChronology(), org.joda.time.Instant:getMillis(), org.joda.time.Chronology:add(long-long-int), org.joda.time.Instant:withMillis(long)),
		org.joda.time.Instant:withDurationAdded(org.joda.time.ReadableDuration-int) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.Instant:withDurationAdded(long-int)),
		org.joda.time.Instant:plus(long) to listOf(org.joda.time.Instant:withDurationAdded(long-int)),
		org.joda.time.Instant:plus(org.joda.time.ReadableDuration) to listOf(org.joda.time.Instant:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.Instant:minus(long) to listOf(org.joda.time.Instant:withDurationAdded(long-int)),
		org.joda.time.Instant:minus(org.joda.time.ReadableDuration) to listOf(org.joda.time.Instant:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.Instant:getChronology() to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC()),
		org.joda.time.Instant:toDateTime() to listOf(org.joda.time.Instant:getMillis(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.Instant:toDateTimeISO() to listOf(org.joda.time.Instant:toDateTime()),
		org.joda.time.Instant:toMutableDateTime() to listOf(org.joda.time.Instant:getMillis(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.Instant:toMutableDateTimeISO() to listOf(org.joda.time.Instant:toMutableDateTime()),
		org.joda.time.Instant:<clinit>() to listOf(org.joda.time.Instant:<init>(long)),
		org.joda.time.LocalTime:now() to listOf(org.joda.time.LocalTime:<init>()),
		org.joda.time.LocalTime:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.LocalTime:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.LocalTime:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.LocalTime:<init>(org.joda.time.Chronology)),
		org.joda.time.LocalTime:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:localTimeParser(), org.joda.time.LocalTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.LocalTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseLocalTime(java.lang.String)),
		org.joda.time.LocalTime:fromMillisOfDay(long) to listOf(org.joda.time.LocalTime:fromMillisOfDay(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:fromMillisOfDay(long-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:fromCalendarFields(java.util.Calendar) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), org.joda.time.LocalTime:<init>(int-int-int-int)),
		org.joda.time.LocalTime:fromDateFields(java.util.Date) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Date:getHours(), java.util.Date:getMinutes(), java.util.Date:getSeconds(), java.util.Date:getTime(), org.joda.time.LocalTime:<init>(int-int-int-int)),
		org.joda.time.LocalTime:<init>() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(long) to listOf(org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(long-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalTime:<init>(java.lang.Object) to listOf(org.joda.time.LocalTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.format.ISODateTimeFormat:localTimeParser(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int)),
		org.joda.time.LocalTime:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.format.ISODateTimeFormat:localTimeParser(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int)),
		org.joda.time.LocalTime:<init>(int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalTime:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalTime:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(int-int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalTime:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalTime:<init>(int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int)),
		org.joda.time.LocalTime:readResolve() to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object), org.joda.time.Chronology:withUTC(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:hourOfDay(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.Chronology:millisOfSecond(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.LocalTime:getValue(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.LocalTime:get(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:isSupported(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalTime:isSupported(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.DateTimeFieldType:getDurationType(), org.joda.time.LocalTime:isSupported(org.joda.time.DurationFieldType), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.LocalTime:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:days()),
		org.joda.time.LocalTime:isSupported(org.joda.time.DurationFieldType) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), java.util.Set:contains(java.lang.Object), org.joda.time.DurationField:getUnitMillis(), org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:days(), org.joda.time.DurationField:getUnitMillis(), org.joda.time.DurationField:isSupported()),
		org.joda.time.LocalTime:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.base.BaseLocal:equals(java.lang.Object)),
		org.joda.time.LocalTime:compareTo(org.joda.time.ReadablePartial) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.base.BaseLocal:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.LocalTime:withLocalMillis(long) to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.LocalTime:getChronology(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:withFields(org.joda.time.ReadablePartial) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:withField(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:isSupported(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:isSupported(org.joda.time.DurationFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.LocalTime:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.LocalTime:plusHours(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:hours(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:plusMinutes(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:minutes(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:plusSeconds(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:seconds(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:plusMillis(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millis(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.LocalTime:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.LocalTime:minusHours(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:hours(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:minusMinutes(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:minutes(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:minusSeconds(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:seconds(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:minusMillis(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millis(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:property(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:isSupported(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalTime:getHourOfDay() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalTime:getMinuteOfHour() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalTime:getSecondOfMinute() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalTime:getMillisOfSecond() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalTime:getMillisOfDay() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalTime:withHourOfDay(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:withMinuteOfHour(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:withSecondOfMinute(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:withMillisOfSecond(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:withMillisOfDay(int) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime:hourOfDay() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalTime:minuteOfHour() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalTime:secondOfMinute() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalTime:millisOfSecond() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalTime:millisOfDay() to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalTime:toDateTimeToday() to listOf(org.joda.time.LocalTime:toDateTimeToday(org.joda.time.DateTimeZone)),
		org.joda.time.LocalTime:toDateTimeToday(org.joda.time.DateTimeZone) to listOf(org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalTime:toString() to listOf(org.joda.time.format.ISODateTimeFormat:time(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalTime:toString(java.lang.String) to listOf(org.joda.time.LocalTime:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalTime:toString(java.lang.String-java.util.Locale) to listOf(org.joda.time.LocalTime:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalTime:compareTo(java.lang.Object) to listOf(org.joda.time.LocalTime:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.LocalTime:<clinit>() to listOf(org.joda.time.LocalTime:<init>(int-int-int-int), java.util.HashSet:<init>(), org.joda.time.DurationFieldType:millis(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:seconds(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:minutes(), java.util.Set:add(java.lang.Object), org.joda.time.DurationFieldType:hours(), java.util.Set:add(java.lang.Object)),
		org.joda.time.TimeOfDay$Property:<init>(org.joda.time.TimeOfDay-int) to listOf(org.joda.time.field.AbstractPartialFieldProperty:<init>()),
		org.joda.time.TimeOfDay$Property:getField() to listOf(org.joda.time.TimeOfDay:getField(int)),
		org.joda.time.TimeOfDay$Property:get() to listOf(org.joda.time.TimeOfDay:getValue(int)),
		org.joda.time.TimeOfDay$Property:addToCopy(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay$Property:getField(), org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay$Property:addNoWrapToCopy(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay$Property:getField(), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay$Property:getField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay$Property:setCopy(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay$Property:setCopy(java.lang.String) to listOf(org.joda.time.TimeOfDay$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.TimeOfDay$Property:withMaximumValue() to listOf(org.joda.time.TimeOfDay$Property:getMaximumValue(), org.joda.time.TimeOfDay$Property:setCopy(int)),
		org.joda.time.TimeOfDay$Property:withMinimumValue() to listOf(org.joda.time.TimeOfDay$Property:getMinimumValue(), org.joda.time.TimeOfDay$Property:setCopy(int)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:readFrom(java.io.DataInput) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(java.io.DataInput), java.io.DataInput:readUTF(), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear-java.lang.String-int)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear-java.lang.String-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(long-int-int) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(long-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:previous(long-int-int) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:previous(long-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:equals(java.lang.Object) to listOf(java.lang.String:equals(java.lang.Object), org.joda.time.tz.DateTimeZoneBuilder$OfYear:equals(java.lang.Object)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:writeTo(java.io.DataOutput) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:writeTo(java.io.DataOutput), java.io.DataOutput:writeUTF(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:rename(java.lang.String) to listOf(org.joda.time.tz.DateTimeZoneBuilder$Recurrence:<init>(org.joda.time.tz.DateTimeZoneBuilder$OfYear-java.lang.String-int)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:renameAppend(java.lang.String) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.String:intern(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:rename(java.lang.String)),
		org.joda.time.tz.DateTimeZoneBuilder$Recurrence:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString()),
		org.joda.time.tz.ZoneInfoLogger$1:<init>() to listOf(java.lang.ThreadLocal:<init>()),
		org.joda.time.tz.ZoneInfoLogger$1:initialValue() to listOf(org.joda.time.tz.ZoneInfoLogger$1:initialValue()),
		org.joda.time.YearMonth:now() to listOf(org.joda.time.YearMonth:<init>()),
		org.joda.time.YearMonth:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.YearMonth:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.YearMonth:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.YearMonth:<init>(org.joda.time.Chronology)),
		org.joda.time.YearMonth:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.YearMonth:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.YearMonth:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseLocalDate(java.lang.String), org.joda.time.LocalDate:getYear(), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.YearMonth:<init>(int-int)),
		org.joda.time.YearMonth:fromCalendarFields(java.util.Calendar) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Calendar:get(int), java.util.Calendar:get(int), org.joda.time.YearMonth:<init>(int-int)),
		org.joda.time.YearMonth:fromDateFields(java.util.Date) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Date:getYear(), java.util.Date:getMonth(), org.joda.time.YearMonth:<init>(int-int)),
		org.joda.time.YearMonth:<init>() to listOf(org.joda.time.base.BasePartial:<init>()),
		org.joda.time.YearMonth:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.YearMonth:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.YearMonth:<init>(long) to listOf(org.joda.time.base.BasePartial:<init>(long)),
		org.joda.time.YearMonth:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology)),
		org.joda.time.YearMonth:<init>(java.lang.Object) to listOf(org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.YearMonth:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.YearMonth:<init>(int-int) to listOf(org.joda.time.YearMonth:<init>(int-int-org.joda.time.Chronology)),
		org.joda.time.YearMonth:<init>(int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(int[]-org.joda.time.Chronology)),
		org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[]) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-int[])),
		org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-org.joda.time.Chronology)),
		org.joda.time.YearMonth:readResolve() to listOf(org.joda.time.YearMonth:getChronology(), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object), org.joda.time.YearMonth:getChronology(), org.joda.time.Chronology:withUTC(), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-org.joda.time.Chronology)),
		org.joda.time.YearMonth:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:year(), org.joda.time.Chronology:monthOfYear(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.YearMonth:getFieldTypes() to listOf(org.joda.time.DateTimeFieldType[]:clone()),
		org.joda.time.YearMonth:withChronologyRetainFields(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.YearMonth:getChronology(), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-org.joda.time.Chronology), org.joda.time.YearMonth:getValues(), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.YearMonth:withField(org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.YearMonth:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.YearMonth:getValue(int), org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth:getField(int), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.YearMonth:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth:getField(int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.YearMonth:getValues(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.YearMonth:indexOf(org.joda.time.DurationFieldType), org.joda.time.YearMonth:getField(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.YearMonth:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.YearMonth:plusYears(int) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.YearMonth:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonth:plusMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.YearMonth:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonth:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.YearMonth:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.YearMonth:minusYears(int) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.YearMonth:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonth:minusMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.YearMonth:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonth:toLocalDate(int) to listOf(org.joda.time.YearMonth:getYear(), org.joda.time.YearMonth:getMonthOfYear(), org.joda.time.YearMonth:getChronology(), org.joda.time.LocalDate:<init>(int-int-int-org.joda.time.Chronology)),
		org.joda.time.YearMonth:toInterval() to listOf(org.joda.time.YearMonth:toInterval(org.joda.time.DateTimeZone)),
		org.joda.time.YearMonth:toInterval(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.YearMonth:toLocalDate(int), org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone), org.joda.time.YearMonth:plusMonths(int), org.joda.time.YearMonth:toLocalDate(int), org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone), org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant)),
		org.joda.time.YearMonth:getYear() to listOf(org.joda.time.YearMonth:getValue(int)),
		org.joda.time.YearMonth:getMonthOfYear() to listOf(org.joda.time.YearMonth:getValue(int)),
		org.joda.time.YearMonth:withYear(int) to listOf(org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth:getChronology(), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth:withMonthOfYear(int) to listOf(org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth:property(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.YearMonth:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.YearMonth$Property:<init>(org.joda.time.YearMonth-int)),
		org.joda.time.YearMonth:year() to listOf(org.joda.time.YearMonth$Property:<init>(org.joda.time.YearMonth-int)),
		org.joda.time.YearMonth:monthOfYear() to listOf(org.joda.time.YearMonth$Property:<init>(org.joda.time.YearMonth-int)),
		org.joda.time.YearMonth:toString() to listOf(org.joda.time.format.ISODateTimeFormat:yearMonth(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.YearMonth:toString(java.lang.String) to listOf(org.joda.time.YearMonth:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.YearMonth:toString(java.lang.String-java.util.Locale) to listOf(org.joda.time.YearMonth:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.YearMonth:<clinit>() to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.DateTimeFieldType:monthOfYear()),
		org.joda.time.base.AbstractDateTime:<init>() to listOf(org.joda.time.base.AbstractInstant:<init>()),
		org.joda.time.base.AbstractDateTime:get(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getEra() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:era(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getCenturyOfEra() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getYearOfEra() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getYearOfCentury() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getYear() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getWeekyear() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getMonthOfYear() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getWeekOfWeekyear() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getDayOfYear() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getDayOfMonth() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getDayOfWeek() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getHourOfDay() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getMinuteOfDay() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:minuteOfDay(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getMinuteOfHour() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getSecondOfDay() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:secondOfDay(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getSecondOfMinute() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getMillisOfDay() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:getMillisOfSecond() to listOf(org.joda.time.base.AbstractDateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.base.AbstractDateTime:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractDateTime:toCalendar(java.util.Locale) to listOf(java.util.Locale:getDefault(), org.joda.time.base.AbstractDateTime:getZone(), org.joda.time.DateTimeZone:toTimeZone(), java.util.Calendar:getInstance(java.util.TimeZone-java.util.Locale), org.joda.time.base.AbstractDateTime:toDate(), java.util.Calendar:setTime(java.util.Date)),
		org.joda.time.base.AbstractDateTime:toGregorianCalendar() to listOf(org.joda.time.base.AbstractDateTime:getZone(), org.joda.time.DateTimeZone:toTimeZone(), java.util.GregorianCalendar:<init>(java.util.TimeZone), org.joda.time.base.AbstractDateTime:toDate(), java.util.GregorianCalendar:setTime(java.util.Date)),
		org.joda.time.base.AbstractDateTime:toString() to listOf(org.joda.time.base.AbstractInstant:toString()),
		org.joda.time.base.AbstractDateTime:toString(java.lang.String) to listOf(org.joda.time.base.AbstractDateTime:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadableInstant)),
		org.joda.time.base.AbstractDateTime:toString(java.lang.String-java.util.Locale) to listOf(org.joda.time.base.AbstractDateTime:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadableInstant)),
		org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractInterval:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.base.BaseInterval:checkInterval(long-long)),
		org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.AbstractInterval:<init>(), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.base.BaseInterval:checkInterval(long-long)),
		org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration) to listOf(org.joda.time.base.AbstractInterval:<init>(), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.base.BaseInterval:checkInterval(long-long)),
		org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.AbstractInterval:<init>(), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.base.BaseInterval:checkInterval(long-long)),
		org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.AbstractInterval:<init>(), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.base.BaseInterval:checkInterval(long-long)),
		org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.AbstractInterval:<init>(), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.base.BaseInterval:checkInterval(long-long)),
		org.joda.time.base.BaseInterval:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractInterval:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getIntervalConverter(java.lang.Object), org.joda.time.convert.IntervalConverter:isReadableInterval(java.lang.Object-org.joda.time.Chronology), org.joda.time.ReadableInterval:getChronology(), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.convert.IntervalConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology), org.joda.time.MutableInterval:<init>(), org.joda.time.convert.IntervalConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology), org.joda.time.MutableInterval:getChronology(), org.joda.time.MutableInterval:getStartMillis(), org.joda.time.MutableInterval:getEndMillis(), org.joda.time.base.BaseInterval:checkInterval(long-long)),
		org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseInterval:checkInterval(long-long), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology)),
		org.joda.time.chrono.BaseChronology:<init>() to listOf(org.joda.time.Chronology:<init>()),
		org.joda.time.chrono.BaseChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.BaseChronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:dayOfMonth(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:millisOfDay(), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.chrono.BaseChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.BaseChronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:dayOfMonth(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:hourOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:minuteOfHour(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:secondOfMinute(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:millisOfSecond(), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.chrono.BaseChronology:getDateTimeMillis(long-int-int-int-int) to listOf(org.joda.time.chrono.BaseChronology:hourOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:minuteOfHour(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:secondOfMinute(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BaseChronology:millisOfSecond(), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.chrono.BaseChronology:validate(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getField(int), org.joda.time.DateTimeField:getMinimumValue(), org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), org.joda.time.DateTimeField:getMinimumValue(), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.DateTimeField:getMaximumValue(), org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), org.joda.time.DateTimeField:getMaximumValue(), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.ReadablePartial:getField(int), org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number)),
		org.joda.time.chrono.BaseChronology:get(org.joda.time.ReadablePartial-long) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.BaseChronology:set(org.joda.time.ReadablePartial-long) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.ReadablePartial:getValue(int), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.chrono.BaseChronology:get(org.joda.time.ReadablePeriod-long-long) to listOf(org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:getDifference(long-long), org.joda.time.DurationField:add(long-int)),
		org.joda.time.chrono.BaseChronology:get(org.joda.time.ReadablePeriod-long) to listOf(org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:isPrecise(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.DurationField:add(long-int)),
		org.joda.time.chrono.BaseChronology:add(org.joda.time.ReadablePeriod-long-int) to listOf(org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:add(long-long)),
		org.joda.time.chrono.BaseChronology:add(long-long-int) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.field.FieldUtils:safeAdd(long-long)),
		org.joda.time.chrono.BaseChronology:millis() to listOf(org.joda.time.DurationFieldType:millis(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:millisOfSecond() to listOf(org.joda.time.DateTimeFieldType:millisOfSecond(), org.joda.time.chrono.BaseChronology:millis(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:millisOfDay() to listOf(org.joda.time.DateTimeFieldType:millisOfDay(), org.joda.time.chrono.BaseChronology:millis(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:seconds() to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:secondOfMinute() to listOf(org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.chrono.BaseChronology:seconds(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:secondOfDay() to listOf(org.joda.time.DateTimeFieldType:secondOfDay(), org.joda.time.chrono.BaseChronology:seconds(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:minutes() to listOf(org.joda.time.DurationFieldType:minutes(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:minuteOfHour() to listOf(org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.chrono.BaseChronology:minutes(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:minuteOfDay() to listOf(org.joda.time.DateTimeFieldType:minuteOfDay(), org.joda.time.chrono.BaseChronology:minutes(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:hours() to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:hourOfDay() to listOf(org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.chrono.BaseChronology:hours(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:clockhourOfDay() to listOf(org.joda.time.DateTimeFieldType:clockhourOfDay(), org.joda.time.chrono.BaseChronology:hours(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:halfdays() to listOf(org.joda.time.DurationFieldType:halfdays(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:hourOfHalfday() to listOf(org.joda.time.DateTimeFieldType:hourOfHalfday(), org.joda.time.chrono.BaseChronology:hours(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:clockhourOfHalfday() to listOf(org.joda.time.DateTimeFieldType:clockhourOfHalfday(), org.joda.time.chrono.BaseChronology:hours(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:halfdayOfDay() to listOf(org.joda.time.DateTimeFieldType:halfdayOfDay(), org.joda.time.chrono.BaseChronology:halfdays(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:days() to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:dayOfWeek() to listOf(org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.chrono.BaseChronology:days(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:dayOfMonth() to listOf(org.joda.time.DateTimeFieldType:dayOfMonth(), org.joda.time.chrono.BaseChronology:days(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:dayOfYear() to listOf(org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.chrono.BaseChronology:days(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:weeks() to listOf(org.joda.time.DurationFieldType:weeks(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:weekOfWeekyear() to listOf(org.joda.time.DateTimeFieldType:weekOfWeekyear(), org.joda.time.chrono.BaseChronology:weeks(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:weekyears() to listOf(org.joda.time.DurationFieldType:weekyears(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:weekyear() to listOf(org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.chrono.BaseChronology:weekyears(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:weekyearOfCentury() to listOf(org.joda.time.DateTimeFieldType:weekyearOfCentury(), org.joda.time.chrono.BaseChronology:weekyears(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:months() to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:monthOfYear() to listOf(org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.chrono.BaseChronology:months(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:years() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:year() to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.chrono.BaseChronology:years(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:yearOfEra() to listOf(org.joda.time.DateTimeFieldType:yearOfEra(), org.joda.time.chrono.BaseChronology:years(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:yearOfCentury() to listOf(org.joda.time.DateTimeFieldType:yearOfCentury(), org.joda.time.chrono.BaseChronology:years(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:centuries() to listOf(org.joda.time.DurationFieldType:centuries(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:centuryOfEra() to listOf(org.joda.time.DateTimeFieldType:centuryOfEra(), org.joda.time.chrono.BaseChronology:centuries(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BaseChronology:eras() to listOf(org.joda.time.DurationFieldType:eras(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BaseChronology:era() to listOf(org.joda.time.DateTimeFieldType:era(), org.joda.time.chrono.BaseChronology:eras(), org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BasicSingleEraDateTimeField:<init>(java.lang.String) to listOf(org.joda.time.DateTimeFieldType:era(), org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType)),
		org.joda.time.chrono.BasicSingleEraDateTimeField:set(long-int) to listOf(org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int)),
		org.joda.time.chrono.BasicSingleEraDateTimeField:set(long-java.lang.String-java.util.Locale) to listOf(java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), org.joda.time.DateTimeFieldType:era(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String)),
		org.joda.time.chrono.BasicSingleEraDateTimeField:getDurationField() to listOf(org.joda.time.DurationFieldType:eras(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType)),
		org.joda.time.chrono.BasicSingleEraDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(java.lang.String:length()),
		org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long) to listOf(org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long-boolean)),
		org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long-boolean) to listOf(org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean)),
		org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean) to listOf(org.joda.time.DateTimeField:getType(), org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.DateTimeField:getRangeDurationField()),
		org.joda.time.chrono.GJChronology$CutoverField:get(long) to listOf(org.joda.time.DateTimeField:get(long), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.GJChronology$CutoverField:getAsText(long-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsText(long-java.util.Locale), org.joda.time.DateTimeField:getAsText(long-java.util.Locale)),
		org.joda.time.chrono.GJChronology$CutoverField:getAsText(int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsText(int-java.util.Locale)),
		org.joda.time.chrono.GJChronology$CutoverField:getAsShortText(long-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale)),
		org.joda.time.chrono.GJChronology$CutoverField:getAsShortText(int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsShortText(int-java.util.Locale)),
		org.joda.time.chrono.GJChronology$CutoverField:add(long-int) to listOf(org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.chrono.GJChronology$CutoverField:add(long-long) to listOf(org.joda.time.DateTimeField:add(long-long)),
		org.joda.time.chrono.GJChronology$CutoverField:add(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.DateTimeUtils:isContiguous(org.joda.time.ReadablePartial), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.GJChronology$CutoverField:add(long-int), org.joda.time.chrono.GJChronology:get(org.joda.time.ReadablePartial-long), org.joda.time.field.BaseDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.chrono.GJChronology$CutoverField:getDifference(long-long) to listOf(org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.chrono.GJChronology$CutoverField:getDifferenceAsLong(long-long) to listOf(org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.GJChronology$CutoverField:set(long-int) to listOf(org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$CutoverField:gregorianToJulian(long), org.joda.time.chrono.GJChronology$CutoverField:get(long), org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$CutoverField:julianToGregorian(long), org.joda.time.chrono.GJChronology$CutoverField:get(long), org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number)),
		org.joda.time.chrono.GJChronology$CutoverField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$CutoverField:gregorianToJulian(long), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$CutoverField:julianToGregorian(long)),
		org.joda.time.chrono.GJChronology$CutoverField:isLeap(long) to listOf(org.joda.time.DateTimeField:isLeap(long), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.chrono.GJChronology$CutoverField:getLeapAmount(long) to listOf(org.joda.time.DateTimeField:getLeapAmount(long), org.joda.time.DateTimeField:getLeapAmount(long)),
		org.joda.time.chrono.GJChronology$CutoverField:getLeapDurationField() to listOf(org.joda.time.DateTimeField:getLeapDurationField()),
		org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue() to listOf(org.joda.time.DateTimeField:getMinimumValue()),
		org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial)),
		org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[])),
		org.joda.time.chrono.GJChronology$CutoverField:getMinimumValue(long) to listOf(org.joda.time.DateTimeField:getMinimumValue(long), org.joda.time.DateTimeField:getMinimumValue(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue() to listOf(org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(long) to listOf(org.joda.time.DateTimeField:getMaximumValue(long), org.joda.time.DateTimeField:getMaximumValue(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTimeField:add(long-int), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.chrono.GJChronology:getInstanceUTC(), org.joda.time.chrono.GJChronology:set(org.joda.time.ReadablePartial-long), org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(long)),
		org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.chrono.GJChronology:getInstanceUTC(), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:getMaximumValue(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.GJChronology$CutoverField:getMaximumValue(long)),
		org.joda.time.chrono.GJChronology$CutoverField:roundFloor(long) to listOf(org.joda.time.DateTimeField:roundFloor(long), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$CutoverField:gregorianToJulian(long), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.chrono.GJChronology$CutoverField:roundCeiling(long) to listOf(org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$CutoverField:julianToGregorian(long)),
		org.joda.time.chrono.GJChronology$CutoverField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale), org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale), java.lang.Math:max(int-int)),
		org.joda.time.chrono.GJChronology$CutoverField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale), org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale), java.lang.Math:max(int-int)),
		org.joda.time.chrono.GJChronology$CutoverField:julianToGregorian(long) to listOf(org.joda.time.chrono.GJChronology:julianToGregorianByWeekyear(long), org.joda.time.chrono.GJChronology:julianToGregorianByYear(long)),
		org.joda.time.chrono.GJChronology$CutoverField:gregorianToJulian(long) to listOf(org.joda.time.chrono.GJChronology:gregorianToJulianByWeekyear(long), org.joda.time.chrono.GJChronology:gregorianToJulianByYear(long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.chrono.BasicChronology) to listOf(org.joda.time.DateTimeFieldType:yearOfEra(), org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:getRangeDurationField() to listOf(org.joda.time.chrono.BasicChronology:eras()),
		org.joda.time.chrono.GJYearOfEraDateTimeField:get(long) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:add(long-int) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:add(long-long) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:addWrapField(long-int) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:addWrapField(long-int)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:getDifference(long-long) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:set(long-int) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getMaximumValue(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.field.DecoratedDateTimeField:set(long-int)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:getMaximumValue() to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.chrono.GJYearOfEraDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:roundCeiling(long) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundCeiling(long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:remainder(long) to listOf(org.joda.time.chrono.GJYearOfEraDateTimeField:getWrappedField(), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.chrono.GJYearOfEraDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:yearOfEra()),
		org.joda.time.chrono.LenientChronology:getInstance(org.joda.time.Chronology) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.LenientChronology:<init>(org.joda.time.Chronology)),
		org.joda.time.chrono.LenientChronology:<init>(org.joda.time.Chronology) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.LenientChronology:withUTC() to listOf(org.joda.time.chrono.LenientChronology:getZone(), org.joda.time.chrono.LenientChronology:getBase(), org.joda.time.Chronology:withUTC(), org.joda.time.chrono.LenientChronology:getInstance(org.joda.time.Chronology)),
		org.joda.time.chrono.LenientChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.LenientChronology:withUTC(), org.joda.time.chrono.LenientChronology:getZone(), org.joda.time.chrono.LenientChronology:getBase(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.chrono.LenientChronology:getInstance(org.joda.time.Chronology)),
		org.joda.time.chrono.LenientChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField), org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField)),
		org.joda.time.chrono.LenientChronology:convertField(org.joda.time.DateTimeField) to listOf(org.joda.time.chrono.LenientChronology:getBase(), org.joda.time.field.LenientDateTimeField:getInstance(org.joda.time.DateTimeField-org.joda.time.Chronology)),
		org.joda.time.chrono.LenientChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.LenientChronology:getBase(), org.joda.time.chrono.LenientChronology:getBase(), java.lang.Object:equals(java.lang.Object)),
		org.joda.time.chrono.LenientChronology:hashCode() to listOf(org.joda.time.chrono.LenientChronology:getBase(), java.lang.Object:hashCode()),
		org.joda.time.chrono.LenientChronology:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.LenientChronology:getBase(), org.joda.time.Chronology:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.Chronology:withUTC(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.ZonedChronology:<init>(org.joda.time.Chronology-org.joda.time.DateTimeZone)),
		org.joda.time.chrono.ZonedChronology:useTimeArithmetic(org.joda.time.DurationField) to listOf(org.joda.time.DurationField:getUnitMillis()),
		org.joda.time.chrono.ZonedChronology:<init>(org.joda.time.Chronology-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.ZonedChronology:getZone() to listOf(org.joda.time.chrono.ZonedChronology:getParam()),
		org.joda.time.chrono.ZonedChronology:withUTC() to listOf(org.joda.time.chrono.ZonedChronology:getBase()),
		org.joda.time.chrono.ZonedChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.ZonedChronology:getParam(), org.joda.time.chrono.ZonedChronology:getBase(), org.joda.time.chrono.ZonedChronology:getBase(), org.joda.time.chrono.ZonedChronology:<init>(org.joda.time.Chronology-org.joda.time.DateTimeZone)),
		org.joda.time.chrono.ZonedChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.ZonedChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.ZonedChronology:localToUTC(long)),
		org.joda.time.chrono.ZonedChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.ZonedChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.chrono.ZonedChronology:localToUTC(long)),
		org.joda.time.chrono.ZonedChronology:getDateTimeMillis(long-int-int-int-int) to listOf(org.joda.time.chrono.ZonedChronology:getBase(), org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.chrono.ZonedChronology:localToUTC(long)),
		org.joda.time.chrono.ZonedChronology:localToUTC(long) to listOf(org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.DateTimeZone:getOffsetFromLocal(long), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getID(), org.joda.time.IllegalInstantException:<init>(long-java.lang.String)),
		org.joda.time.chrono.ZonedChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(java.util.HashMap:<init>(), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap)),
		org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap) to listOf(org.joda.time.DurationField:isSupported(), java.util.HashMap:containsKey(java.lang.Object), java.util.HashMap:get(java.lang.Object), org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.chrono.ZonedChronology$ZonedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DateTimeZone), java.util.HashMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap) to listOf(org.joda.time.DateTimeField:isSupported(), java.util.HashMap:containsKey(java.lang.Object), java.util.HashMap:get(java.lang.Object), org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.DateTimeField:getLeapDurationField(), org.joda.time.chrono.ZonedChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.ZonedChronology$ZonedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeZone-org.joda.time.DurationField-org.joda.time.DurationField-org.joda.time.DurationField), java.util.HashMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.ZonedChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.ZonedChronology:getBase(), org.joda.time.chrono.ZonedChronology:getBase(), java.lang.Object:equals(java.lang.Object), org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.chrono.ZonedChronology:hashCode() to listOf(org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.DateTimeZone:hashCode(), org.joda.time.chrono.ZonedChronology:getBase(), java.lang.Object:hashCode()),
		org.joda.time.chrono.ZonedChronology:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.ZonedChronology:getBase(), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.ZonedChronology:getZone(), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.convert.DateConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.DateConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology) to listOf(java.util.Date:getTime()),
		org.joda.time.convert.DateConverter:<clinit>() to listOf(org.joda.time.convert.DateConverter:<init>()),
		org.joda.time.convert.ReadableDurationConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.ReadableDurationConverter:getDurationMillis(java.lang.Object) to listOf(org.joda.time.ReadableDuration:getMillis()),
		org.joda.time.convert.ReadableDurationConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.ReadableDuration:getMillis(), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long), org.joda.time.ReadWritablePeriod:setValue(int-int)),
		org.joda.time.convert.ReadableDurationConverter:<clinit>() to listOf(org.joda.time.convert.ReadableDurationConverter:<init>()),
		org.joda.time.convert.ReadableInstantConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.ReadableInstantConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.ReadableInstant:getChronology(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.Chronology:getZone(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.convert.ReadableInstantConverter:getChronology(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadableInstant:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology)),
		org.joda.time.convert.ReadableInstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadableInstant:getMillis()),
		org.joda.time.convert.ReadableInstantConverter:<clinit>() to listOf(org.joda.time.convert.ReadableInstantConverter:<init>()),
		org.joda.time.DateTime:now() to listOf(org.joda.time.DateTime:<init>()),
		org.joda.time.DateTime:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.DateTime:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.DateTime:<init>(org.joda.time.Chronology)),
		org.joda.time.DateTime:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.format.DateTimeFormatter:withOffsetParsed(), org.joda.time.DateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.DateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String)),
		org.joda.time.DateTime:<init>() to listOf(org.joda.time.base.BaseDateTime:<init>()),
		org.joda.time.DateTime:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(org.joda.time.Chronology)),
		org.joda.time.DateTime:<init>(long) to listOf(org.joda.time.base.BaseDateTime:<init>(long)),
		org.joda.time.DateTime:<init>(long-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:<init>(java.lang.Object) to listOf(org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.DateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.DateTime:<init>(int-int-int-int-int) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-int) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-int-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-int-int) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.DateTime:toDateTimeISO() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.base.BaseDateTime:toDateTimeISO()),
		org.joda.time.DateTime:toDateTime(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.DateTime:getZone(), org.joda.time.base.BaseDateTime:toDateTime(org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:toDateTime(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.DateTime:getChronology(), org.joda.time.base.BaseDateTime:toDateTime(org.joda.time.Chronology)),
		org.joda.time.DateTime:withMillis(long) to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:withChronology(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.DateTime:getChronology(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTime:withChronology(org.joda.time.Chronology)),
		org.joda.time.DateTime:withZoneRetainFields(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.DateTime:getZone(), org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:withEarlierOffsetAtOverlap() to listOf(org.joda.time.DateTime:getZone(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeZone:adjustOffset(long-boolean), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withLaterOffsetAtOverlap() to listOf(org.joda.time.DateTime:getZone(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeZone:adjustOffset(long-boolean), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withDate(int-int-int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:withUTC(), org.joda.time.DateTime:getMillisOfDay(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.Chronology:getZone(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withDate(org.joda.time.LocalDate) to listOf(org.joda.time.LocalDate:getYear(), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.DateTime:withDate(int-int-int)),
		org.joda.time.DateTime:withTime(int-int-int-int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:withUTC(), org.joda.time.DateTime:getYear(), org.joda.time.DateTime:getMonthOfYear(), org.joda.time.DateTime:getDayOfMonth(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.Chronology:getZone(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withTime(org.joda.time.LocalTime) to listOf(org.joda.time.LocalTime:getHourOfDay(), org.joda.time.LocalTime:getMinuteOfHour(), org.joda.time.LocalTime:getSecondOfMinute(), org.joda.time.LocalTime:getMillisOfSecond(), org.joda.time.DateTime:withTime(int-int-int-int)),
		org.joda.time.DateTime:withTimeAtStartOfDay() to listOf(org.joda.time.DateTime:toLocalDate(), org.joda.time.DateTime:getZone(), org.joda.time.LocalDate:toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)),
		org.joda.time.DateTime:withFields(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.DateTime:getMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withField(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTime:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withDurationAdded(long-int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.DateTime:getMillis(), org.joda.time.Chronology:add(long-long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withDurationAdded(org.joda.time.ReadableDuration-int) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.DateTime:withDurationAdded(long-int)),
		org.joda.time.DateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.DateTime:getMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plus(long) to listOf(org.joda.time.DateTime:withDurationAdded(long-int)),
		org.joda.time.DateTime:plus(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateTime:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.DateTime:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.DateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.DateTime:plusYears(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:years(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plusMonths(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:months(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plusWeeks(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plusDays(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:days(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plusHours(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:hours(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plusMinutes(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:minutes(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plusSeconds(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:seconds(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:plusMillis(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:millis(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minus(long) to listOf(org.joda.time.DateTime:withDurationAdded(long-int)),
		org.joda.time.DateTime:minus(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateTime:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.DateTime:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.DateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.DateTime:minusYears(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:years(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minusMonths(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:months(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minusWeeks(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minusDays(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:days(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minusHours(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:hours(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minusMinutes(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:minutes(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minusSeconds(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:seconds(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:minusMillis(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:millis(), org.joda.time.DateTime:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:property(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:isSupported(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:toDateMidnight() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.DateMidnight:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:toYearMonthDay() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.YearMonthDay:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:toTimeOfDay() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.TimeOfDay:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:toLocalDateTime() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:toLocalDate() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:toLocalTime() to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.DateTime:getChronology(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateTime:withEra(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:era(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withCenturyOfEra(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withYearOfEra(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withYearOfCentury(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withYear(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withWeekyear(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withMonthOfYear(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withWeekOfWeekyear(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withDayOfYear(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withDayOfMonth(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withDayOfWeek(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withHourOfDay(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withMinuteOfHour(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withSecondOfMinute(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withMillisOfSecond(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:withMillisOfDay(int) to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTime:withMillis(long)),
		org.joda.time.DateTime:era() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:era(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:centuryOfEra() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:yearOfCentury() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:yearOfEra() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:year() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:weekyear() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:monthOfYear() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:weekOfWeekyear() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:dayOfYear() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:dayOfMonth() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:dayOfWeek() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:hourOfDay() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:minuteOfDay() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:minuteOfDay(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:minuteOfHour() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:secondOfDay() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:secondOfDay(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:secondOfMinute() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:millisOfDay() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DateTime:millisOfSecond() to listOf(org.joda.time.DateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.DateTime$Property:<init>(org.joda.time.DateTime-org.joda.time.DateTimeField)),
		org.joda.time.DurationField:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.DurationField:subtract(long-int) to listOf(org.joda.time.DurationField:subtract(long-long), org.joda.time.DurationField:add(long-int)),
		org.joda.time.DurationField:subtract(long-long) to listOf(java.lang.ArithmeticException:<init>(java.lang.String), org.joda.time.DurationField:add(long-long)),
		org.joda.time.field.DecoratedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType) to listOf(org.joda.time.field.BaseDurationField:<init>(org.joda.time.DurationFieldType), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:isSupported(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.DecoratedDurationField:isPrecise() to listOf(org.joda.time.DurationField:isPrecise()),
		org.joda.time.field.DecoratedDurationField:getValueAsLong(long-long) to listOf(org.joda.time.DurationField:getValueAsLong(long-long)),
		org.joda.time.field.DecoratedDurationField:getMillis(int-long) to listOf(org.joda.time.DurationField:getMillis(int-long)),
		org.joda.time.field.DecoratedDurationField:getMillis(long-long) to listOf(org.joda.time.DurationField:getMillis(long-long)),
		org.joda.time.field.DecoratedDurationField:add(long-int) to listOf(org.joda.time.DurationField:add(long-int)),
		org.joda.time.field.DecoratedDurationField:add(long-long) to listOf(org.joda.time.DurationField:add(long-long)),
		org.joda.time.field.DecoratedDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.DurationField:getDifferenceAsLong(long-long)),
		org.joda.time.field.DecoratedDurationField:getUnitMillis() to listOf(org.joda.time.DurationField:getUnitMillis()),
		org.joda.time.field.MillisDurationField:<init>() to listOf(org.joda.time.DurationField:<init>()),
		org.joda.time.field.MillisDurationField:getType() to listOf(org.joda.time.DurationFieldType:millis()),
		org.joda.time.field.MillisDurationField:getValue(long) to listOf(org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.MillisDurationField:getValue(long-long) to listOf(org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.MillisDurationField:add(long-int) to listOf(org.joda.time.field.FieldUtils:safeAdd(long-long)),
		org.joda.time.field.MillisDurationField:add(long-long) to listOf(org.joda.time.field.FieldUtils:safeAdd(long-long)),
		org.joda.time.field.MillisDurationField:getDifference(long-long) to listOf(org.joda.time.field.FieldUtils:safeSubtract(long-long), org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.MillisDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.FieldUtils:safeSubtract(long-long)),
		org.joda.time.field.MillisDurationField:compareTo(org.joda.time.DurationField) to listOf(org.joda.time.DurationField:getUnitMillis(), org.joda.time.field.MillisDurationField:getUnitMillis()),
		org.joda.time.field.MillisDurationField:equals(java.lang.Object) to listOf(org.joda.time.field.MillisDurationField:getUnitMillis(), org.joda.time.field.MillisDurationField:getUnitMillis()),
		org.joda.time.field.MillisDurationField:hashCode() to listOf(org.joda.time.field.MillisDurationField:getUnitMillis()),
		org.joda.time.field.MillisDurationField:compareTo(java.lang.Object) to listOf(org.joda.time.field.MillisDurationField:compareTo(org.joda.time.DurationField)),
		org.joda.time.field.MillisDurationField:<clinit>() to listOf(org.joda.time.field.MillisDurationField:<init>()),
		org.joda.time.field.SkipUndoDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField) to listOf(org.joda.time.field.SkipUndoDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField-int)),
		org.joda.time.field.SkipUndoDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField-int) to listOf(org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField), org.joda.time.field.DelegatedDateTimeField:getMinimumValue()),
		org.joda.time.field.SkipUndoDateTimeField:get(long) to listOf(org.joda.time.field.DelegatedDateTimeField:get(long)),
		org.joda.time.field.SkipUndoDateTimeField:set(long-int) to listOf(org.joda.time.field.SkipUndoDateTimeField:getMaximumValue(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.DelegatedDateTimeField:set(long-int)),
		org.joda.time.field.SkipUndoDateTimeField:readResolve() to listOf(org.joda.time.field.SkipUndoDateTimeField:getType(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser) to listOf(org.joda.time.format.DateTimePrinterInternalPrinter:of(org.joda.time.format.DateTimePrinter), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatter:getPrinter() to listOf(org.joda.time.format.InternalPrinterDateTimePrinter:of(org.joda.time.format.InternalPrinter)),
		org.joda.time.format.DateTimeFormatter:getParser() to listOf(org.joda.time.format.InternalParserDateTimeParser:of(org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale) to listOf(org.joda.time.format.DateTimeFormatter:getLocale(), org.joda.time.format.DateTimeFormatter:getLocale(), java.util.Locale:equals(java.lang.Object), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int)),
		org.joda.time.format.DateTimeFormatter:withOffsetParsed() to listOf(org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int)),
		org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology) to listOf(org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int)),
		org.joda.time.format.DateTimeFormatter:withZoneUTC() to listOf(org.joda.time.format.DateTimeFormatter:withZone(org.joda.time.DateTimeZone)),
		org.joda.time.format.DateTimeFormatter:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int)),
		org.joda.time.format.DateTimeFormatter:withPivotYear(java.lang.Integer) to listOf(java.lang.Integer:equals(java.lang.Object), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int)),
		org.joda.time.format.DateTimeFormatter:withPivotYear(int) to listOf(java.lang.Integer:valueOf(int), org.joda.time.format.DateTimeFormatter:withPivotYear(java.lang.Integer)),
		org.joda.time.format.DateTimeFormatter:withDefaultYear(int) to listOf(org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser-java.util.Locale-boolean-org.joda.time.Chronology-org.joda.time.DateTimeZone-java.lang.Integer-int)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadableInstant) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadableInstant)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuilder-org.joda.time.ReadableInstant) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadableInstant)),
		org.joda.time.format.DateTimeFormatter:printTo(java.io.Writer-org.joda.time.ReadableInstant) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadableInstant)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long-org.joda.time.Chronology)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-long) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuilder-long) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long)),
		org.joda.time.format.DateTimeFormatter:printTo(java.io.Writer-long) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long-org.joda.time.Chronology)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePartial) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuilder-org.joda.time.ReadablePartial) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial)),
		org.joda.time.format.DateTimeFormatter:printTo(java.io.Writer-org.joda.time.ReadablePartial) to listOf(org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial)),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial) to listOf(org.joda.time.format.DateTimeFormatter:requirePrinter(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadableInstant) to listOf(org.joda.time.format.DateTimeFormatter:requirePrinter(), org.joda.time.format.InternalPrinter:estimatePrintedLength(), java.lang.StringBuilder:<init>(int), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadableInstant), java.lang.StringBuilder:toString()),
		org.joda.time.format.DateTimeFormatter:print(long) to listOf(org.joda.time.format.DateTimeFormatter:requirePrinter(), org.joda.time.format.InternalPrinter:estimatePrintedLength(), java.lang.StringBuilder:<init>(int), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long), java.lang.StringBuilder:toString()),
		org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial) to listOf(org.joda.time.format.DateTimeFormatter:requirePrinter(), org.joda.time.format.InternalPrinter:estimatePrintedLength(), java.lang.StringBuilder:<init>(int), org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial), java.lang.StringBuilder:toString()),
		org.joda.time.format.DateTimeFormatter:printTo(java.lang.Appendable-long-org.joda.time.Chronology) to listOf(org.joda.time.format.DateTimeFormatter:requirePrinter(), org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.Chronology:withUTC(), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale)),
		org.joda.time.format.DateTimeFormatter:requirePrinter() to listOf(java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatter:parseInto(org.joda.time.ReadWritableInstant-java.lang.String-int) to listOf(org.joda.time.format.DateTimeFormatter:requireParser(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadWritableInstant:getMillis(), org.joda.time.ReadWritableInstant:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:get(long), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.String), org.joda.time.ReadWritableInstant:setMillis(long), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), java.lang.Integer:intValue(), org.joda.time.DateTimeZone:forOffsetMillis(int), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.ReadWritableInstant:setChronology(org.joda.time.Chronology), org.joda.time.ReadWritableInstant:setZone(org.joda.time.DateTimeZone)),
		org.joda.time.format.DateTimeFormatter:parseMillis(java.lang.String) to listOf(org.joda.time.format.DateTimeFormatter:requireParser(), org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int), org.joda.time.format.DateTimeParserBucket:doParseMillis(org.joda.time.format.InternalParser-java.lang.CharSequence)),
		org.joda.time.format.DateTimeFormatter:parseLocalDate(java.lang.String) to listOf(org.joda.time.format.DateTimeFormatter:parseLocalDateTime(java.lang.String), org.joda.time.LocalDateTime:toLocalDate()),
		org.joda.time.format.DateTimeFormatter:parseLocalTime(java.lang.String) to listOf(org.joda.time.format.DateTimeFormatter:parseLocalDateTime(java.lang.String), org.joda.time.LocalDateTime:toLocalTime()),
		org.joda.time.format.DateTimeFormatter:parseLocalDateTime(java.lang.String) to listOf(org.joda.time.format.DateTimeFormatter:requireParser(), org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), java.lang.String:length(), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.String), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), java.lang.Integer:intValue(), org.joda.time.DateTimeZone:forOffsetMillis(int), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology), org.joda.time.format.FormatUtils:createErrorMessage(java.lang.String-int), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String) to listOf(org.joda.time.format.DateTimeFormatter:requireParser(), org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), java.lang.String:length(), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.String), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), java.lang.Integer:intValue(), org.joda.time.DateTimeZone:forOffsetMillis(int), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), org.joda.time.DateTime:withZone(org.joda.time.DateTimeZone), org.joda.time.format.FormatUtils:createErrorMessage(java.lang.String-int), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatter:parseMutableDateTime(java.lang.String) to listOf(org.joda.time.format.DateTimeFormatter:requireParser(), org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), java.lang.String:length(), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.String), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), org.joda.time.format.DateTimeParserBucket:getOffsetInteger(), java.lang.Integer:intValue(), org.joda.time.DateTimeZone:forOffsetMillis(int), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.format.DateTimeParserBucket:getZone(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology), org.joda.time.MutableDateTime:setZone(org.joda.time.DateTimeZone), org.joda.time.format.FormatUtils:createErrorMessage(java.lang.String-int), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatter:requireParser() to listOf(java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatter:selectChronology(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:<init>(java.lang.String-java.lang.String-boolean-int-int) to listOf(java.lang.Object:<init>(), java.lang.IllegalArgumentException:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:estimatePrintedLength() to listOf(java.lang.String:length(), java.lang.String:length()),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(java.lang.Appendable:append(java.lang.CharSequence), java.lang.Appendable:append(char), java.lang.Appendable:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int), java.lang.Appendable:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int), java.lang.Appendable:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int), java.lang.Appendable:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:estimateParsedLength() to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:estimatePrintedLength()),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(java.lang.CharSequence:length(), java.lang.String:length(), java.lang.CharSequence:charAt(int), java.lang.Integer:valueOf(int), org.joda.time.format.DateTimeParserBucket:setOffset(java.lang.Integer), org.joda.time.format.DateTimeFormatterBuilder:csStartsWithIgnoreCase(java.lang.CharSequence-int-java.lang.String), java.lang.Integer:valueOf(int), org.joda.time.format.DateTimeParserBucket:setOffset(java.lang.Integer), java.lang.String:length(), java.lang.CharSequence:charAt(int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(java.lang.CharSequence-int-int), org.joda.time.format.FormatUtils:parseTwoDigits(java.lang.CharSequence-int), java.lang.CharSequence:charAt(int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(java.lang.CharSequence-int-int), org.joda.time.format.FormatUtils:parseTwoDigits(java.lang.CharSequence-int), java.lang.CharSequence:charAt(int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(java.lang.CharSequence-int-int), org.joda.time.format.FormatUtils:parseTwoDigits(java.lang.CharSequence-int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int), org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(java.lang.CharSequence-int-int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int), java.lang.Integer:valueOf(int), org.joda.time.format.DateTimeParserBucket:setOffset(java.lang.Integer)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:digitCount(java.lang.CharSequence-int-int) to listOf(java.lang.CharSequence:length(), java.lang.Math:min(int-int), java.lang.CharSequence:charAt(int)),
		org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser) to listOf(org.joda.time.format.DateTimeParserInternalParser:<init>(org.joda.time.format.DateTimeParser)),
		org.joda.time.format.DateTimeParserInternalParser:<init>(org.joda.time.format.DateTimeParser) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeParserInternalParser:estimateParsedLength() to listOf(org.joda.time.format.DateTimeParser:estimateParsedLength()),
		org.joda.time.format.DateTimeParserInternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(java.lang.CharSequence:toString(), org.joda.time.format.DateTimeParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.String-int)),
		org.joda.time.format.PeriodFormatterBuilder$Composite:<init>(java.util.List) to listOf(java.lang.Object:<init>(), java.util.ArrayList:<init>(), java.util.ArrayList:<init>(), org.joda.time.format.PeriodFormatterBuilder$Composite:decompose(java.util.List-java.util.List-java.util.List), java.util.List:size(), java.util.List:size(), java.util.List:toArray(java.lang.Object[]), java.util.List:size(), java.util.List:size(), java.util.List:toArray(java.lang.Object[])),
		org.joda.time.format.PeriodFormatterBuilder$Composite:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Composite:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Composite:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Composite:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodPrinter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Composite:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale) to listOf(java.lang.UnsupportedOperationException:<init>(), org.joda.time.format.PeriodParser:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale)),
		org.joda.time.format.PeriodFormatterBuilder$Composite:decompose(java.util.List-java.util.List-java.util.List) to listOf(java.util.List:size(), java.util.List:get(int), org.joda.time.format.PeriodFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]), java.util.List:add(java.lang.Object), java.util.List:get(int), org.joda.time.format.PeriodFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]), java.util.List:add(java.lang.Object)),
		org.joda.time.format.PeriodFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]) to listOf(java.util.List:add(java.lang.Object)),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:<init>(java.lang.String[]-java.lang.String[]) to listOf(org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:<init>(), java.lang.String[]:clone(), org.joda.time.format.PeriodFormatterBuilder:access$200(), java.util.concurrent.ConcurrentMap:get(java.lang.Object), java.util.regex.Pattern:compile(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:access$200(), java.util.concurrent.ConcurrentMap:putIfAbsent(java.lang.Object-java.lang.Object), java.lang.String[]:clone(), java.util.Arrays:sort(java.lang.Object[]-java.util.Comparator)),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:selectSuffixIndex(int) to listOf(java.lang.String:valueOf(int), java.util.regex.Pattern:matcher(java.lang.CharSequence), java.util.regex.Matcher:matches()),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:calculatePrintedLength(int) to listOf(org.joda.time.format.PeriodFormatterBuilder$RegExAffix:selectSuffixIndex(int), java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:printTo(java.lang.StringBuffer-int) to listOf(org.joda.time.format.PeriodFormatterBuilder$RegExAffix:selectSuffixIndex(int), java.lang.StringBuffer:append(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:printTo(java.io.Writer-int) to listOf(org.joda.time.format.PeriodFormatterBuilder$RegExAffix:selectSuffixIndex(int), java.io.Writer:write(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:parse(java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:matchesOtherAffix(int-java.lang.String-int), java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:scan(java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:matchesOtherAffix(int-java.lang.String-int)),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:getAffixes() to listOf(java.lang.String[]:clone()),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix:<clinit>() to listOf(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:<init>()),
		org.joda.time.IllegalInstantException:<init>(java.lang.String) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.IllegalInstantException:<init>(long-java.lang.String) to listOf(org.joda.time.IllegalInstantException:createMessage(long-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.IllegalInstantException:createMessage(long-java.lang.String) to listOf(org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.Instant:<init>(long), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadableInstant), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.IllegalInstantException:isIllegalInstant(java.lang.Throwable) to listOf(java.lang.Throwable:getCause(), java.lang.Throwable:getCause(), java.lang.Throwable:getCause(), org.joda.time.IllegalInstantException:isIllegalInstant(java.lang.Throwable)),
		org.joda.time.LocalTime$Property:<init>(org.joda.time.LocalTime-org.joda.time.DateTimeField) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:<init>()),
		org.joda.time.LocalTime$Property:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeObject(java.lang.Object), org.joda.time.DateTimeField:getType(), java.io.ObjectOutputStream:writeObject(java.lang.Object)),
		org.joda.time.LocalTime$Property:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readObject(), java.io.ObjectInputStream:readObject(), org.joda.time.LocalTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.LocalTime$Property:getMillis() to listOf(org.joda.time.LocalTime:getLocalMillis()),
		org.joda.time.LocalTime$Property:getChronology() to listOf(org.joda.time.LocalTime:getChronology()),
		org.joda.time.LocalTime$Property:addCopy(int) to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:add(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:addCopy(long) to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:add(long-long), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:addNoWrapToCopy(int) to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:add(long-int), org.joda.time.LocalTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:get(long), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:setCopy(int) to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:setCopy(java.lang.String) to listOf(org.joda.time.LocalTime$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.LocalTime$Property:withMaximumValue() to listOf(org.joda.time.LocalTime$Property:getMaximumValue(), org.joda.time.LocalTime$Property:setCopy(int)),
		org.joda.time.LocalTime$Property:withMinimumValue() to listOf(org.joda.time.LocalTime$Property:getMinimumValue(), org.joda.time.LocalTime$Property:setCopy(int)),
		org.joda.time.LocalTime$Property:roundFloorCopy() to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:roundCeilingCopy() to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:roundHalfFloorCopy() to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:roundHalfCeilingCopy() to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.LocalTime$Property:roundHalfEvenCopy() to listOf(org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.LocalTime:withLocalMillis(long)),
		org.joda.time.MutableDateTime$Property:<init>(org.joda.time.MutableDateTime-org.joda.time.DateTimeField) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:<init>()),
		org.joda.time.MutableDateTime$Property:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeObject(java.lang.Object), org.joda.time.DateTimeField:getType(), java.io.ObjectOutputStream:writeObject(java.lang.Object)),
		org.joda.time.MutableDateTime$Property:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readObject(), java.io.ObjectInputStream:readObject(), org.joda.time.MutableDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.MutableDateTime$Property:getMillis() to listOf(org.joda.time.MutableDateTime:getMillis()),
		org.joda.time.MutableDateTime$Property:getChronology() to listOf(org.joda.time.MutableDateTime:getChronology()),
		org.joda.time.MutableDateTime$Property:add(int) to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:add(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:add(long) to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:add(long-long), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:addWrapField(int) to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:set(int) to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:set(java.lang.String-java.util.Locale) to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:set(java.lang.String) to listOf(org.joda.time.MutableDateTime$Property:set(java.lang.String-java.util.Locale)),
		org.joda.time.MutableDateTime$Property:roundFloor() to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:roundCeiling() to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:roundHalfFloor() to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:roundHalfCeiling() to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.MutableDateTime$Property:roundHalfEven() to listOf(org.joda.time.MutableDateTime$Property:getField(), org.joda.time.MutableDateTime:getMillis(), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.MutableDateTime:setMillis(long)),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>() to listOf(java.lang.Object:<init>(), java.util.ArrayList:<init>(int)),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<init>(org.joda.time.tz.DateTimeZoneBuilder$RuleSet) to listOf(java.lang.Object:<init>(), java.util.ArrayList:<init>(java.util.Collection)),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:addRule(org.joda.time.tz.DateTimeZoneBuilder$Rule) to listOf(java.util.ArrayList:contains(java.lang.Object), java.util.ArrayList:add(java.lang.Object)),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:firstTransition(long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-java.lang.String-int-int), java.util.ArrayList:<init>(java.util.Collection), org.joda.time.tz.DateTimeZoneBuilder$RuleSet:nextTransition(long-int), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Transition), java.util.ArrayList:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), org.joda.time.tz.DateTimeZoneBuilder$Rule:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Rule-int), org.joda.time.tz.DateTimeZoneBuilder$Transition:getNameKey(), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-java.lang.String-int-int), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Transition), org.joda.time.tz.DateTimeZoneBuilder$Transition:getSaveMillis()),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:nextTransition(long-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), java.util.ArrayList:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), org.joda.time.tz.DateTimeZoneBuilder$Rule:next(long-int-int), java.util.Iterator:remove(), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:get(long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setInstant(int-int-int), org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Rule-int)),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:getUpperLimit(int) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:setInstant(int-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:buildTailZone(java.lang.String) to listOf(java.util.ArrayList:size(), java.util.ArrayList:get(int), java.util.ArrayList:get(int), org.joda.time.tz.DateTimeZoneBuilder$Rule:getToYear(), org.joda.time.tz.DateTimeZoneBuilder$Rule:getToYear(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(java.lang.String-int-org.joda.time.tz.DateTimeZoneBuilder$Recurrence-org.joda.time.tz.DateTimeZoneBuilder$Recurrence)),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString()),
		org.joda.time.tz.DateTimeZoneBuilder$RuleSet:<clinit>() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:year(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:<init>(java.util.StringTokenizer) to listOf(java.lang.Object:<init>(), java.util.StringTokenizer:hasMoreTokens(), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseMonth(java.lang.String), java.util.StringTokenizer:hasMoreTokens(), java.util.StringTokenizer:nextToken(), java.lang.String:startsWith(java.lang.String), java.lang.String:substring(int), org.joda.time.tz.ZoneInfoCompiler:parseDayOfWeek(java.lang.String), java.lang.Integer:parseInt(java.lang.String), java.lang.String:indexOf(java.lang.String), java.lang.String:substring(int), java.lang.Integer:parseInt(java.lang.String), java.lang.String:substring(int-int), org.joda.time.tz.ZoneInfoCompiler:parseDayOfWeek(java.lang.String), java.lang.String:indexOf(java.lang.String), java.lang.String:substring(int), java.lang.Integer:parseInt(java.lang.String), java.lang.String:substring(int-int), org.joda.time.tz.ZoneInfoCompiler:parseDayOfWeek(java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.StringTokenizer:hasMoreTokens(), java.util.StringTokenizer:nextToken(), java.lang.String:length(), java.lang.String:charAt(int), org.joda.time.tz.ZoneInfoCompiler:parseZoneChar(char), java.lang.String:equals(java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:parseTime(java.lang.String), org.joda.time.LocalDate:<init>(int-int-int), org.joda.time.LocalDate:plusMonths(int), org.joda.time.LocalDate:<init>(int-int-int), org.joda.time.LocalDate:plusDays(int), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.tz.ZoneInfoCompiler:parseTime(java.lang.String)),
		org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-java.lang.String-int-int-int) to listOf(org.joda.time.tz.DateTimeZoneBuilder:addRecurringSavings(java.lang.String-int-int-int-char-int-int-int-boolean-int)),
		org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:addCutover(org.joda.time.tz.DateTimeZoneBuilder-int) to listOf(org.joda.time.tz.DateTimeZoneBuilder:addCutover(int-char-int-int-int-boolean-int)),
		org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(boolean), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Years:years(int) to listOf(org.joda.time.Years:<init>(int)),
		org.joda.time.Years:yearsBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Years:years(int)),
		org.joda.time.Years:yearsBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:years(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.Years:years(int), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.Years:years(int)),
		org.joda.time.Years:yearsIn(org.joda.time.ReadableInterval) to listOf(org.joda.time.ReadableInterval:getStart(), org.joda.time.ReadableInterval:getEnd(), org.joda.time.DurationFieldType:years(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Years:years(int)),
		org.joda.time.Years:parseYears(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:getYears(), org.joda.time.Years:years(int)),
		org.joda.time.Years:<init>(int) to listOf(org.joda.time.base.BaseSingleFieldPeriod:<init>(int)),
		org.joda.time.Years:readResolve() to listOf(org.joda.time.Years:getValue(), org.joda.time.Years:years(int)),
		org.joda.time.Years:getFieldType() to listOf(org.joda.time.DurationFieldType:years()),
		org.joda.time.Years:getPeriodType() to listOf(org.joda.time.PeriodType:years()),
		org.joda.time.Years:getYears() to listOf(org.joda.time.Years:getValue()),
		org.joda.time.Years:plus(int) to listOf(org.joda.time.Years:getValue(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.Years:years(int)),
		org.joda.time.Years:plus(org.joda.time.Years) to listOf(org.joda.time.Years:getValue(), org.joda.time.Years:plus(int)),
		org.joda.time.Years:minus(int) to listOf(org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Years:plus(int)),
		org.joda.time.Years:minus(org.joda.time.Years) to listOf(org.joda.time.Years:getValue(), org.joda.time.Years:minus(int)),
		org.joda.time.Years:multipliedBy(int) to listOf(org.joda.time.Years:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Years:years(int)),
		org.joda.time.Years:dividedBy(int) to listOf(org.joda.time.Years:getValue(), org.joda.time.Years:years(int)),
		org.joda.time.Years:negated() to listOf(org.joda.time.Years:getValue(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Years:years(int)),
		org.joda.time.Years:isGreaterThan(org.joda.time.Years) to listOf(org.joda.time.Years:getValue(), org.joda.time.Years:getValue(), org.joda.time.Years:getValue()),
		org.joda.time.Years:isLessThan(org.joda.time.Years) to listOf(org.joda.time.Years:getValue(), org.joda.time.Years:getValue(), org.joda.time.Years:getValue()),
		org.joda.time.Years:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Years:getValue(), java.lang.String:valueOf(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Years:<clinit>() to listOf(org.joda.time.Years:<init>(int), org.joda.time.Years:<init>(int), org.joda.time.Years:<init>(int), org.joda.time.Years:<init>(int), org.joda.time.Years:<init>(int), org.joda.time.Years:<init>(int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.PeriodType:years(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType)),
		org.joda.time.base.AbstractDuration:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.base.AbstractDuration:toDuration() to listOf(org.joda.time.base.AbstractDuration:getMillis(), org.joda.time.Duration:<init>(long)),
		org.joda.time.base.AbstractDuration:toPeriod() to listOf(org.joda.time.base.AbstractDuration:getMillis(), org.joda.time.Period:<init>(long)),
		org.joda.time.base.AbstractDuration:compareTo(org.joda.time.ReadableDuration) to listOf(org.joda.time.base.AbstractDuration:getMillis(), org.joda.time.ReadableDuration:getMillis()),
		org.joda.time.base.AbstractDuration:isEqual(org.joda.time.ReadableDuration) to listOf(org.joda.time.base.AbstractDuration:compareTo(org.joda.time.ReadableDuration)),
		org.joda.time.base.AbstractDuration:isLongerThan(org.joda.time.ReadableDuration) to listOf(org.joda.time.base.AbstractDuration:compareTo(org.joda.time.ReadableDuration)),
		org.joda.time.base.AbstractDuration:isShorterThan(org.joda.time.ReadableDuration) to listOf(org.joda.time.base.AbstractDuration:compareTo(org.joda.time.ReadableDuration)),
		org.joda.time.base.AbstractDuration:equals(java.lang.Object) to listOf(org.joda.time.base.AbstractDuration:getMillis(), org.joda.time.ReadableDuration:getMillis()),
		org.joda.time.base.AbstractDuration:hashCode() to listOf(org.joda.time.base.AbstractDuration:getMillis()),
		org.joda.time.base.AbstractDuration:toString() to listOf(org.joda.time.base.AbstractDuration:getMillis(), java.lang.StringBuffer:<init>(), java.lang.StringBuffer:append(java.lang.String), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.StringBuffer-long), java.lang.StringBuffer:length(), java.lang.StringBuffer:insert(int-java.lang.String), java.lang.StringBuffer:length(), java.lang.StringBuffer:setLength(int), java.lang.StringBuffer:length(), java.lang.StringBuffer:insert(int-java.lang.String), java.lang.StringBuffer:append(char), java.lang.StringBuffer:toString()),
		org.joda.time.base.AbstractDuration:compareTo(java.lang.Object) to listOf(org.joda.time.base.AbstractDuration:compareTo(org.joda.time.ReadableDuration)),
		org.joda.time.base.BaseLocal:<init>() to listOf(org.joda.time.base.AbstractPartial:<init>()),
		org.joda.time.chrono.BasicChronology$HalfdayField:<init>() to listOf(org.joda.time.DateTimeFieldType:halfdayOfDay(), org.joda.time.chrono.BasicChronology:access$000(), org.joda.time.chrono.BasicChronology:access$100(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField)),
		org.joda.time.chrono.BasicChronology$HalfdayField:getAsText(int-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:halfdayValueToText(int)),
		org.joda.time.chrono.BasicChronology$HalfdayField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:halfdayTextToValue(java.lang.String), org.joda.time.chrono.BasicChronology$HalfdayField:set(long-int)),
		org.joda.time.chrono.BasicChronology$HalfdayField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:getHalfdayMaxTextLength()),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-int) to listOf(org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.chrono.BasicChronology:getAverageMillisPerMonth(), org.joda.time.field.ImpreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-long), org.joda.time.chrono.BasicChronology:getMaxMonth()),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getMonthOfYear(long)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(long-int) to listOf(org.joda.time.chrono.BasicChronology:getMillisOfDay(long), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), java.lang.Math:signum(float), java.lang.Math:signum(float), java.lang.Math:abs(int), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(int-int-int)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(long-long) to listOf(org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(long-int), org.joda.time.chrono.BasicChronology:getMillisOfDay(long), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), java.lang.Math:abs(long), org.joda.time.chrono.BasicChronology:getMinYear(), org.joda.time.chrono.BasicChronology:getMaxYear(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(int-int-int)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:monthOfYear(), java.lang.Object:equals(java.lang.Object), org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.DateTimeUtils:isContiguous(org.joda.time.ReadablePartial), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BasicMonthOfYearDateTimeField:add(long-int), org.joda.time.chrono.BasicChronology:get(org.joda.time.ReadablePartial-long), org.joda.time.field.ImpreciseDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:addWrapField(long-int) to listOf(org.joda.time.chrono.BasicMonthOfYearDateTimeField:get(long), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(long-int)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.BasicMonthOfYearDateTimeField:getDifference(long-long), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int), org.joda.time.chrono.BasicChronology:dayOfMonth(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.BasicChronology:getYearMonthMillis(int-int), org.joda.time.chrono.BasicChronology:getYearMonthMillis(int-int)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:set(long-int) to listOf(org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(int-int-int), org.joda.time.chrono.BasicChronology:getMillisOfDay(long)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:getRangeDurationField() to listOf(org.joda.time.chrono.BasicChronology:years()),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:isLeap(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:isLeapYear(int), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:getLeapAmount(long) to listOf(org.joda.time.chrono.BasicMonthOfYearDateTimeField:isLeap(long)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:getLeapDurationField() to listOf(org.joda.time.chrono.BasicChronology:days()),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), org.joda.time.chrono.BasicChronology:getYearMonthMillis(int-int)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:remainder(long) to listOf(org.joda.time.chrono.BasicMonthOfYearDateTimeField:roundFloor(long)),
		org.joda.time.chrono.BasicMonthOfYearDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:monthOfYear()),
		org.joda.time.chrono.GJCacheKey:<init>(org.joda.time.DateTimeZone-org.joda.time.Instant-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.chrono.GJCacheKey:hashCode() to listOf(org.joda.time.Instant:hashCode(), org.joda.time.DateTimeZone:hashCode()),
		org.joda.time.chrono.GJCacheKey:equals(java.lang.Object) to listOf(org.joda.time.Instant:equals(java.lang.Object), org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.chrono.GJMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology) to listOf(org.joda.time.chrono.BasicMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-int)),
		org.joda.time.chrono.GJMonthOfYearDateTimeField:getAsText(int-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:monthOfYearValueToText(int)),
		org.joda.time.chrono.GJMonthOfYearDateTimeField:getAsShortText(int-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:monthOfYearValueToShortText(int)),
		org.joda.time.chrono.GJMonthOfYearDateTimeField:convertText(java.lang.String-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:monthOfYearTextToValue(java.lang.String)),
		org.joda.time.chrono.GJMonthOfYearDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:getMonthMaxTextLength()),
		org.joda.time.chrono.GJMonthOfYearDateTimeField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:getMonthMaxShortTextLength()),
		org.joda.time.chrono.JulianChronology:adjustYearForSet(int) to listOf(org.joda.time.DateTimeFieldType:year(), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number)),
		org.joda.time.chrono.JulianChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.JulianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.chrono.JulianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.JulianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int) to listOf(org.joda.time.chrono.BasicGJChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.JulianChronology:readResolve() to listOf(org.joda.time.chrono.JulianChronology:getBase(), org.joda.time.chrono.JulianChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.Chronology:getZone(), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.JulianChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.JulianChronology:getZone(), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.JulianChronology:getDateMidnightMillis(int-int-int) to listOf(org.joda.time.chrono.JulianChronology:adjustYearForSet(int), org.joda.time.chrono.BasicGJChronology:getDateMidnightMillis(int-int-int)),
		org.joda.time.chrono.JulianChronology:calculateFirstDayOfYearMillis(int) to listOf(org.joda.time.chrono.JulianChronology:isLeapYear(int)),
		org.joda.time.chrono.JulianChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.JulianChronology:getBase(), org.joda.time.chrono.BasicGJChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField)),
		org.joda.time.chrono.JulianChronology:toString() to listOf(org.joda.time.chrono.BasicGJChronology:toString()),
		org.joda.time.chrono.JulianChronology:hashCode() to listOf(org.joda.time.chrono.BasicGJChronology:hashCode()),
		org.joda.time.chrono.JulianChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.BasicGJChronology:equals(java.lang.Object)),
		org.joda.time.chrono.JulianChronology:getMinimumDaysInFirstWeek() to listOf(org.joda.time.chrono.BasicGJChronology:getMinimumDaysInFirstWeek()),
		org.joda.time.chrono.JulianChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.BasicGJChronology:getDateTimeMillis(int-int-int-int-int-int-int)),
		org.joda.time.chrono.JulianChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.BasicGJChronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.chrono.JulianChronology:getZone() to listOf(org.joda.time.chrono.BasicGJChronology:getZone()),
		org.joda.time.chrono.JulianChronology:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DateTimeZone) to listOf(org.joda.time.DurationField:getType(), org.joda.time.field.BaseDurationField:<init>(org.joda.time.DurationFieldType), org.joda.time.DurationField:isSupported(), java.lang.IllegalArgumentException:<init>(), org.joda.time.chrono.ZonedChronology:useTimeArithmetic(org.joda.time.DurationField)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:isPrecise() to listOf(org.joda.time.DurationField:isPrecise(), org.joda.time.DurationField:isPrecise(), org.joda.time.DateTimeZone:isFixed()),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getUnitMillis() to listOf(org.joda.time.DurationField:getUnitMillis()),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getValue(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:addOffset(long), org.joda.time.DurationField:getValue(long-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getValueAsLong(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:addOffset(long), org.joda.time.DurationField:getValueAsLong(long-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getMillis(int-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:addOffset(long), org.joda.time.DurationField:getMillis(int-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getMillis(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:addOffset(long), org.joda.time.DurationField:getMillis(long-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:add(long-int) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long), org.joda.time.DurationField:add(long-int), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetFromLocalToSubtract(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:add(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long), org.joda.time.DurationField:add(long-long), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetFromLocalToSubtract(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getDifference(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long), org.joda.time.DurationField:getDifference(long-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long), org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long), org.joda.time.DurationField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetToAdd(long) to listOf(org.joda.time.DateTimeZone:getOffset(long), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:getOffsetFromLocalToSubtract(long) to listOf(org.joda.time.DateTimeZone:getOffsetFromLocal(long), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:addOffset(long) to listOf(org.joda.time.DateTimeZone:convertUTCToLocal(long)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.chrono.ZonedChronology$ZonedDurationField:hashCode() to listOf(java.lang.Object:hashCode(), org.joda.time.DateTimeZone:hashCode()),
		org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[]) to listOf(java.lang.Object:<init>()),
		org.joda.time.convert.ConverterSet:select(java.lang.Class) to listOf(java.lang.Object:hashCode(), org.joda.time.convert.ConverterSet:selectSlow(org.joda.time.convert.ConverterSet-java.lang.Class), org.joda.time.convert.ConverterSet$Entry:<init>(java.lang.Class-org.joda.time.convert.Converter), org.joda.time.convert.ConverterSet$Entry[]:clone(), java.lang.Object:hashCode()),
		org.joda.time.convert.ConverterSet:copyInto(org.joda.time.convert.Converter[]) to listOf(java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int)),
		org.joda.time.convert.ConverterSet:add(org.joda.time.convert.Converter-org.joda.time.convert.Converter[]) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.convert.Converter:getSupportedType(), org.joda.time.convert.Converter:getSupportedType(), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[]), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterSet:remove(org.joda.time.convert.Converter-org.joda.time.convert.Converter[]) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.convert.ConverterSet:remove(int-org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterSet:remove(int-org.joda.time.convert.Converter[]) to listOf(java.lang.IndexOutOfBoundsException:<init>(), org.joda.time.convert.ConverterSet:<init>(org.joda.time.convert.Converter[])),
		org.joda.time.convert.ConverterSet:selectSlow(org.joda.time.convert.ConverterSet-java.lang.Class) to listOf(org.joda.time.convert.Converter:getSupportedType(), java.lang.Class:isAssignableFrom(java.lang.Class), org.joda.time.convert.ConverterSet:remove(int-org.joda.time.convert.Converter[]), org.joda.time.convert.Converter:getSupportedType(), org.joda.time.convert.Converter:getSupportedType(), java.lang.Class:isAssignableFrom(java.lang.Class), org.joda.time.convert.ConverterSet:remove(int-org.joda.time.convert.Converter[]), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.convert.Converter:getSupportedType(), java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalStateException:<init>(java.lang.String)),
		org.joda.time.DateMidnight:now() to listOf(org.joda.time.DateMidnight:<init>()),
		org.joda.time.DateMidnight:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.DateMidnight:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.DateMidnight:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.DateMidnight:<init>(org.joda.time.Chronology)),
		org.joda.time.DateMidnight:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.format.DateTimeFormatter:withOffsetParsed(), org.joda.time.DateMidnight:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.DateMidnight:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), org.joda.time.DateTime:toDateMidnight()),
		org.joda.time.DateMidnight:<init>() to listOf(org.joda.time.base.BaseDateTime:<init>()),
		org.joda.time.DateMidnight:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.DateMidnight:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(org.joda.time.Chronology)),
		org.joda.time.DateMidnight:<init>(long) to listOf(org.joda.time.base.BaseDateTime:<init>(long)),
		org.joda.time.DateMidnight:<init>(long-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.DateTimeZone)),
		org.joda.time.DateMidnight:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:<init>(java.lang.Object) to listOf(org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:<init>(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone)),
		org.joda.time.DateMidnight:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.base.BaseDateTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:<init>(int-int-int) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int)),
		org.joda.time.DateMidnight:<init>(int-int-int-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.DateTimeZone)),
		org.joda.time.DateMidnight:<init>(int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:checkInstant(long-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.DateMidnight:withMillis(long) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.DateMidnight:checkInstant(long-org.joda.time.Chronology), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateMidnight:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:withChronology(org.joda.time.Chronology) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateMidnight:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:withZoneRetainFields(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.DateMidnight:getZone(), org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateMidnight:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:withFields(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.DateMidnight:getMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withField(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateMidnight:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateMidnight:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withDurationAdded(long-int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.DateMidnight:getMillis(), org.joda.time.Chronology:add(long-long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withDurationAdded(org.joda.time.ReadableDuration-int) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.DateMidnight:withDurationAdded(long-int)),
		org.joda.time.DateMidnight:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.DateMidnight:getMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:plus(long) to listOf(org.joda.time.DateMidnight:withDurationAdded(long-int)),
		org.joda.time.DateMidnight:plus(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateMidnight:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.DateMidnight:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.DateMidnight:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.DateMidnight:plusYears(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:years(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:plusMonths(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:months(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:plusWeeks(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:plusDays(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:days(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:minus(long) to listOf(org.joda.time.DateMidnight:withDurationAdded(long-int)),
		org.joda.time.DateMidnight:minus(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateMidnight:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.DateMidnight:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.DateMidnight:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.DateMidnight:minusYears(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:years(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:minusMonths(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:months(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:minusWeeks(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:minusDays(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:days(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:property(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateMidnight:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:isSupported(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:toYearMonthDay() to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateMidnight:getChronology(), org.joda.time.YearMonthDay:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:toLocalDate() to listOf(org.joda.time.DateMidnight:getMillis(), org.joda.time.DateMidnight:getChronology(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:toInterval() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:add(long-int), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.DateMidnight:withEra(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:era(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withCenturyOfEra(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withYearOfEra(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withYearOfCentury(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withYear(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:year(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withWeekyear(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withMonthOfYear(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withWeekOfWeekyear(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withDayOfYear(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withDayOfMonth(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:withDayOfWeek(int) to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.DateMidnight:getMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateMidnight:withMillis(long)),
		org.joda.time.DateMidnight:era() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:era(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:centuryOfEra() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:yearOfCentury() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:yearOfEra() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:year() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:year(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:weekyear() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:monthOfYear() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:weekOfWeekyear() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:dayOfYear() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:dayOfMonth() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateMidnight:dayOfWeek() to listOf(org.joda.time.DateMidnight:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.DateMidnight$Property:<init>(org.joda.time.DateMidnight-org.joda.time.DateTimeField)),
		org.joda.time.DateTimeUtils$FixedMillisProvider:<init>(long) to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeZone:getDefault() to listOf(java.util.concurrent.atomic.AtomicReference:get(), java.lang.System:getProperty(java.lang.String), org.joda.time.DateTimeZone:forID(java.lang.String), java.util.TimeZone:getDefault(), org.joda.time.DateTimeZone:forTimeZone(java.util.TimeZone), java.util.concurrent.atomic.AtomicReference:compareAndSet(java.lang.Object-java.lang.Object), java.util.concurrent.atomic.AtomicReference:get()),
		org.joda.time.DateTimeZone:setDefault(org.joda.time.DateTimeZone) to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.concurrent.atomic.AtomicReference:set(java.lang.Object)),
		org.joda.time.DateTimeZone:forID(java.lang.String) to listOf(org.joda.time.DateTimeZone:getDefault(), java.lang.String:equals(java.lang.Object), org.joda.time.DateTimeZone:getProvider(), org.joda.time.tz.Provider:getZone(java.lang.String), java.lang.String:startsWith(java.lang.String), java.lang.String:startsWith(java.lang.String), org.joda.time.DateTimeZone:parseOffset(java.lang.String), org.joda.time.DateTimeZone:printOffset(int), org.joda.time.DateTimeZone:fixedOffsetZone(java.lang.String-int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.DateTimeZone:forOffsetHours(int) to listOf(org.joda.time.DateTimeZone:forOffsetHoursMinutes(int-int)),
		org.joda.time.DateTimeZone:forOffsetHoursMinutes(int-int) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.Math:abs(int), org.joda.time.field.FieldUtils:safeMultiply(int-int), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeZone:forOffsetMillis(int)),
		org.joda.time.DateTimeZone:forOffsetMillis(int) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeZone:printOffset(int), org.joda.time.DateTimeZone:fixedOffsetZone(java.lang.String-int)),
		org.joda.time.DateTimeZone:forTimeZone(java.util.TimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.TimeZone:getID(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:equals(java.lang.Object), org.joda.time.DateTimeZone:getConvertedId(java.lang.String), org.joda.time.DateTimeZone:getProvider(), org.joda.time.tz.Provider:getZone(java.lang.String), org.joda.time.tz.Provider:getZone(java.lang.String), java.lang.String:startsWith(java.lang.String), java.lang.String:startsWith(java.lang.String), java.lang.String:substring(int), java.lang.String:length(), java.lang.String:charAt(int), java.lang.Character:isDigit(char), org.joda.time.DateTimeZone:convertToAsciiNumber(java.lang.String), org.joda.time.DateTimeZone:parseOffset(java.lang.String), org.joda.time.DateTimeZone:printOffset(int), org.joda.time.DateTimeZone:fixedOffsetZone(java.lang.String-int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.DateTimeZone:convertToAsciiNumber(java.lang.String) to listOf(java.lang.StringBuilder:<init>(java.lang.String), java.lang.StringBuilder:length(), java.lang.StringBuilder:charAt(int), java.lang.Character:digit(char-int), java.lang.StringBuilder:setCharAt(int-char), java.lang.StringBuilder:toString()),
		org.joda.time.DateTimeZone:fixedOffsetZone(java.lang.String-int) to listOf(org.joda.time.tz.FixedDateTimeZone:<init>(java.lang.String-java.lang.String-int-int)),
		org.joda.time.DateTimeZone:getAvailableIDs() to listOf(org.joda.time.DateTimeZone:getProvider(), org.joda.time.tz.Provider:getAvailableIDs()),
		org.joda.time.DateTimeZone:getProvider() to listOf(java.util.concurrent.atomic.AtomicReference:get(), org.joda.time.DateTimeZone:getDefaultProvider(), java.util.concurrent.atomic.AtomicReference:compareAndSet(java.lang.Object-java.lang.Object), java.util.concurrent.atomic.AtomicReference:get()),
		org.joda.time.DateTimeZone:setProvider(org.joda.time.tz.Provider) to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission), org.joda.time.DateTimeZone:getDefaultProvider(), org.joda.time.DateTimeZone:validateProvider(org.joda.time.tz.Provider), java.util.concurrent.atomic.AtomicReference:set(java.lang.Object)),
		org.joda.time.DateTimeZone:validateProvider(org.joda.time.tz.Provider) to listOf(org.joda.time.tz.Provider:getAvailableIDs(), java.util.Set:size(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Set:contains(java.lang.Object), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.tz.Provider:getZone(java.lang.String), org.joda.time.DateTimeZone:equals(java.lang.Object), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.DateTimeZone:getDefaultProvider() to listOf(java.lang.System:getProperty(java.lang.String), java.lang.Class:getClassLoader(), java.lang.Class:forName(java.lang.String-boolean-java.lang.ClassLoader), java.lang.Class:isAssignableFrom(java.lang.Class), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.Class:asSubclass(java.lang.Class), java.lang.Class:getConstructor(java.lang.Class[]), java.lang.reflect.Constructor:newInstance(java.lang.Object[]), org.joda.time.DateTimeZone:validateProvider(org.joda.time.tz.Provider), java.lang.RuntimeException:<init>(java.lang.Throwable), java.lang.System:getProperty(java.lang.String), java.io.File:<init>(java.lang.String), org.joda.time.tz.ZoneInfoProvider:<init>(java.io.File), org.joda.time.DateTimeZone:validateProvider(org.joda.time.tz.Provider), java.lang.RuntimeException:<init>(java.lang.Throwable), org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String), org.joda.time.DateTimeZone:validateProvider(org.joda.time.tz.Provider), java.lang.Exception:printStackTrace(), org.joda.time.tz.UTCProvider:<init>()),
		org.joda.time.DateTimeZone:getNameProvider() to listOf(java.util.concurrent.atomic.AtomicReference:get(), org.joda.time.DateTimeZone:getDefaultNameProvider(), java.util.concurrent.atomic.AtomicReference:compareAndSet(java.lang.Object-java.lang.Object), java.util.concurrent.atomic.AtomicReference:get()),
		org.joda.time.DateTimeZone:setNameProvider(org.joda.time.tz.NameProvider) to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission), org.joda.time.DateTimeZone:getDefaultNameProvider(), java.util.concurrent.atomic.AtomicReference:set(java.lang.Object)),
		org.joda.time.DateTimeZone:getDefaultNameProvider() to listOf(java.lang.System:getProperty(java.lang.String), java.lang.Class:getClassLoader(), java.lang.Class:forName(java.lang.String-boolean-java.lang.ClassLoader), java.lang.Class:isAssignableFrom(java.lang.Class), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.Class:asSubclass(java.lang.Class), java.lang.Class:getConstructor(java.lang.Class[]), java.lang.reflect.Constructor:newInstance(java.lang.Object[]), java.lang.RuntimeException:<init>(java.lang.Throwable), org.joda.time.tz.DefaultNameProvider:<init>()),
		org.joda.time.DateTimeZone:getConvertedId(java.lang.String) to listOf(java.util.Map:get(java.lang.Object)),
		org.joda.time.DateTimeZone:parseOffset(java.lang.String) to listOf(org.joda.time.format.DateTimeFormatter:parseMillis(java.lang.String)),
		org.joda.time.DateTimeZone:printOffset(int) to listOf(java.lang.StringBuffer:<init>(), java.lang.StringBuffer:append(char), java.lang.StringBuffer:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int), java.lang.StringBuffer:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int), java.lang.StringBuffer:toString(), java.lang.StringBuffer:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int), java.lang.StringBuffer:toString(), java.lang.StringBuffer:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int), java.lang.StringBuffer:toString()),
		org.joda.time.DateTimeZone:<init>(java.lang.String) to listOf(java.lang.Object:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.DateTimeZone:getShortName(long) to listOf(org.joda.time.DateTimeZone:getShortName(long-java.util.Locale)),
		org.joda.time.DateTimeZone:getShortName(long-java.util.Locale) to listOf(java.util.Locale:getDefault(), org.joda.time.DateTimeZone:getNameKey(long), org.joda.time.DateTimeZone:getNameProvider(), org.joda.time.DateTimeZone:isStandardOffset(long), org.joda.time.tz.DefaultNameProvider:getShortName(java.util.Locale-java.lang.String-java.lang.String-boolean), org.joda.time.tz.NameProvider:getShortName(java.util.Locale-java.lang.String-java.lang.String), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:printOffset(int)),
		org.joda.time.DateTimeZone:getName(long) to listOf(org.joda.time.DateTimeZone:getName(long-java.util.Locale)),
		org.joda.time.DateTimeZone:getName(long-java.util.Locale) to listOf(java.util.Locale:getDefault(), org.joda.time.DateTimeZone:getNameKey(long), org.joda.time.DateTimeZone:getNameProvider(), org.joda.time.DateTimeZone:isStandardOffset(long), org.joda.time.tz.DefaultNameProvider:getName(java.util.Locale-java.lang.String-java.lang.String-boolean), org.joda.time.tz.NameProvider:getName(java.util.Locale-java.lang.String-java.lang.String), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:printOffset(int)),
		org.joda.time.DateTimeZone:getOffset(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.ReadableInstant:getMillis(), org.joda.time.DateTimeZone:getOffset(long)),
		org.joda.time.DateTimeZone:isStandardOffset(long) to listOf(org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getStandardOffset(long)),
		org.joda.time.DateTimeZone:getOffsetFromLocal(long) to listOf(org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.DateTimeZone:previousTransition(long), org.joda.time.DateTimeZone:getOffset(long)),
		org.joda.time.DateTimeZone:convertUTCToLocal(long) to listOf(org.joda.time.DateTimeZone:getOffset(long), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long) to listOf(org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean)),
		org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean) to listOf(org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.DateTimeZone:getID(), org.joda.time.IllegalInstantException:<init>(long-java.lang.String), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.DateTimeZone:isLocalDateTimeGap(org.joda.time.LocalDateTime) to listOf(org.joda.time.DateTimeZone:isFixed(), org.joda.time.LocalDateTime:toDateTime(org.joda.time.DateTimeZone)),
		org.joda.time.DateTimeZone:adjustOffset(long-boolean) to listOf(org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:nextTransition(long)),
		org.joda.time.DateTimeZone:toTimeZone() to listOf(java.util.TimeZone:getTimeZone(java.lang.String)),
		org.joda.time.DateTimeZone:hashCode() to listOf(org.joda.time.DateTimeZone:getID(), java.lang.String:hashCode()),
		org.joda.time.DateTimeZone:toString() to listOf(org.joda.time.DateTimeZone:getID()),
		org.joda.time.DateTimeZone:writeReplace() to listOf(org.joda.time.DateTimeZone$Stub:<init>(java.lang.String)),
		org.joda.time.DateTimeZone:<clinit>() to listOf(java.util.concurrent.atomic.AtomicReference:<init>(), java.util.concurrent.atomic.AtomicReference:<init>(), java.util.concurrent.atomic.AtomicReference:<init>()),
		org.joda.time.field.BaseDurationField:<init>(org.joda.time.DurationFieldType) to listOf(org.joda.time.DurationField:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.BaseDurationField:getName() to listOf(org.joda.time.DurationFieldType:getName()),
		org.joda.time.field.BaseDurationField:getValue(long) to listOf(org.joda.time.field.BaseDurationField:getValueAsLong(long), org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.BaseDurationField:getValueAsLong(long) to listOf(org.joda.time.field.BaseDurationField:getUnitMillis()),
		org.joda.time.field.BaseDurationField:getValue(long-long) to listOf(org.joda.time.field.BaseDurationField:getValueAsLong(long-long), org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.BaseDurationField:getMillis(int) to listOf(org.joda.time.field.BaseDurationField:getUnitMillis()),
		org.joda.time.field.BaseDurationField:getMillis(long) to listOf(org.joda.time.field.BaseDurationField:getUnitMillis(), org.joda.time.field.FieldUtils:safeMultiply(long-long)),
		org.joda.time.field.BaseDurationField:getDifference(long-long) to listOf(org.joda.time.field.BaseDurationField:getDifferenceAsLong(long-long), org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.BaseDurationField:compareTo(org.joda.time.DurationField) to listOf(org.joda.time.DurationField:getUnitMillis(), org.joda.time.field.BaseDurationField:getUnitMillis()),
		org.joda.time.field.BaseDurationField:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.field.BaseDurationField:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.field.BaseDurationField:compareTo(java.lang.Object) to listOf(org.joda.time.field.BaseDurationField:compareTo(org.joda.time.DurationField)),
		org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:isSupported(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.DecoratedDateTimeField:isLenient() to listOf(org.joda.time.DateTimeField:isLenient()),
		org.joda.time.field.DecoratedDateTimeField:get(long) to listOf(org.joda.time.DateTimeField:get(long)),
		org.joda.time.field.DecoratedDateTimeField:set(long-int) to listOf(org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.field.DecoratedDateTimeField:getDurationField() to listOf(org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.field.DecoratedDateTimeField:getRangeDurationField() to listOf(org.joda.time.DateTimeField:getRangeDurationField()),
		org.joda.time.field.DecoratedDateTimeField:getMinimumValue() to listOf(org.joda.time.DateTimeField:getMinimumValue()),
		org.joda.time.field.DecoratedDateTimeField:getMaximumValue() to listOf(org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.DecoratedDateTimeField:roundFloor(long) to listOf(org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.field.LenientDateTimeField:getInstance(org.joda.time.DateTimeField-org.joda.time.Chronology) to listOf(org.joda.time.field.StrictDateTimeField:getWrappedField(), org.joda.time.DateTimeField:isLenient(), org.joda.time.field.LenientDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.Chronology)),
		org.joda.time.field.LenientDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.Chronology) to listOf(org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField)),
		org.joda.time.field.LenientDateTimeField:set(long-int) to listOf(org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:convertUTCToLocal(long), org.joda.time.field.LenientDateTimeField:get(long), org.joda.time.field.FieldUtils:safeSubtract(long-long), org.joda.time.field.LenientDateTimeField:getType(), org.joda.time.Chronology:withUTC(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:add(long-long), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:convertLocalToUTC(long-boolean-long)),
		org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField) to listOf(org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField-int)),
		org.joda.time.field.SkipDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField-int) to listOf(org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField), org.joda.time.field.DelegatedDateTimeField:getMinimumValue()),
		org.joda.time.field.SkipDateTimeField:get(long) to listOf(org.joda.time.field.DelegatedDateTimeField:get(long)),
		org.joda.time.field.SkipDateTimeField:set(long-int) to listOf(org.joda.time.field.SkipDateTimeField:getMaximumValue(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.DateTimeFieldType:year(), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number), org.joda.time.field.DelegatedDateTimeField:set(long-int)),
		org.joda.time.field.SkipDateTimeField:readResolve() to listOf(org.joda.time.field.SkipDateTimeField:getType(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.format.DateTimeFormat:forPattern(java.lang.String) to listOf(org.joda.time.format.DateTimeFormat:createFormatterForPattern(java.lang.String)),
		org.joda.time.format.DateTimeFormat:forStyle(java.lang.String) to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyle(java.lang.String)),
		org.joda.time.format.DateTimeFormat:patternForStyle(java.lang.String-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyle(java.lang.String), java.util.Locale:getDefault(), org.joda.time.format.DateTimeFormatter:getPrinter0(), org.joda.time.format.DateTimeFormat$StyleFormatter:getPattern(java.util.Locale)),
		org.joda.time.format.DateTimeFormat:shortDate() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:shortTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:shortDateTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:mediumDate() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:mediumTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:mediumDateTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:longDate() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:longTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:longDateTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:fullDate() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:fullTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:fullDateTime() to listOf(org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder-java.lang.String) to listOf(org.joda.time.format.DateTimeFormat:parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder-java.lang.String)),
		org.joda.time.format.DateTimeFormat:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormat:parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder-java.lang.String) to listOf(java.lang.String:length(), org.joda.time.format.DateTimeFormat:parseToken(java.lang.String-int[]), java.lang.String:length(), java.lang.String:charAt(int), org.joda.time.format.DateTimeFormatterBuilder:appendEraText(), org.joda.time.format.DateTimeFormatterBuilder:appendCenturyOfEra(int-int), org.joda.time.format.DateTimeFormat:parseToken(java.lang.String-int[]), org.joda.time.format.DateTimeFormat:isNumericToken(java.lang.String), org.joda.time.DateTime:<init>(), org.joda.time.DateTime:getWeekyear(), org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitWeekyear(int-boolean), org.joda.time.DateTime:<init>(), org.joda.time.DateTime:getYear(), org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitYear(int-boolean), org.joda.time.format.DateTimeFormat:parseToken(java.lang.String-int[]), org.joda.time.format.DateTimeFormat:isNumericToken(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:appendWeekyear(int-int), org.joda.time.format.DateTimeFormatterBuilder:appendYear(int-int), org.joda.time.format.DateTimeFormatterBuilder:appendYearOfEra(int-int), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYearText(), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYearShortText(), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYear(int), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int), org.joda.time.format.DateTimeFormatterBuilder:appendHalfdayOfDayText(), org.joda.time.format.DateTimeFormatterBuilder:appendClockhourOfHalfday(int), org.joda.time.format.DateTimeFormatterBuilder:appendHourOfDay(int), org.joda.time.format.DateTimeFormatterBuilder:appendClockhourOfDay(int), org.joda.time.format.DateTimeFormatterBuilder:appendHourOfHalfday(int), org.joda.time.format.DateTimeFormatterBuilder:appendMinuteOfHour(int), org.joda.time.format.DateTimeFormatterBuilder:appendSecondOfMinute(int), org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfSecond(int-int), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeekText(), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeekShortText(), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfYear(int), org.joda.time.format.DateTimeFormatterBuilder:appendWeekOfWeekyear(int), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneName(), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneShortName(java.util.Map), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneId(), java.lang.String:substring(int), java.lang.String:length(), java.lang.String:charAt(int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), java.lang.String:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormat:parseToken(java.lang.String-int[]) to listOf(java.lang.StringBuilder:<init>(), java.lang.String:length(), java.lang.String:charAt(int), java.lang.StringBuilder:append(char), java.lang.String:charAt(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(char), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.format.DateTimeFormat:isNumericToken(java.lang.String) to listOf(java.lang.String:length(), java.lang.String:charAt(int)),
		org.joda.time.format.DateTimeFormat:createFormatterForPattern(java.lang.String) to listOf(java.lang.String:length(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.DateTimeFormat:parsePatternTo(org.joda.time.format.DateTimeFormatterBuilder-java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:toFormatter(), java.util.concurrent.ConcurrentHashMap:size(), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object)),
		org.joda.time.format.DateTimeFormat:createFormatterForStyle(java.lang.String) to listOf(java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:charAt(int), org.joda.time.format.DateTimeFormat:selectStyle(char), java.lang.String:charAt(int), org.joda.time.format.DateTimeFormat:selectStyle(char), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int)),
		org.joda.time.format.DateTimeFormat:createFormatterForStyleIndex(int-int) to listOf(java.util.concurrent.atomic.AtomicReferenceArray:length(), org.joda.time.format.DateTimeFormat:createDateTimeFormatter(int-int), java.util.concurrent.atomic.AtomicReferenceArray:get(int), org.joda.time.format.DateTimeFormat:createDateTimeFormatter(int-int), java.util.concurrent.atomic.AtomicReferenceArray:compareAndSet(int-java.lang.Object-java.lang.Object), java.util.concurrent.atomic.AtomicReferenceArray:get(int)),
		org.joda.time.format.DateTimeFormat:createDateTimeFormatter(int-int) to listOf(org.joda.time.format.DateTimeFormat$StyleFormatter:<init>(int-int-int), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormat:selectStyle(char) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormat:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>(), java.util.concurrent.atomic.AtomicReferenceArray:<init>(int)),
		org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean-int) to listOf(org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter:<init>(org.joda.time.DateTimeFieldType-int-boolean)),
		org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:get(long), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int), org.joda.time.format.DateTimeFormatterBuilder:appendUnknownString(java.lang.Appendable-int)),
		org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int), org.joda.time.format.DateTimeFormatterBuilder:appendUnknownString(java.lang.Appendable-int), org.joda.time.format.DateTimeFormatterBuilder:appendUnknownString(java.lang.Appendable-int)),
		org.joda.time.format.DateTimePrinterInternalPrinter:of(org.joda.time.format.DateTimePrinter) to listOf(org.joda.time.format.DateTimePrinterInternalPrinter:<init>(org.joda.time.format.DateTimePrinter)),
		org.joda.time.format.DateTimePrinterInternalPrinter:<init>(org.joda.time.format.DateTimePrinter) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimePrinterInternalPrinter:estimatePrintedLength() to listOf(org.joda.time.format.DateTimePrinter:estimatePrintedLength()),
		org.joda.time.format.DateTimePrinterInternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.DateTimePrinter:printTo(java.lang.StringBuffer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.format.DateTimePrinter:printTo(java.io.Writer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), org.joda.time.format.DateTimePrinterInternalPrinter:estimatePrintedLength(), java.lang.StringBuffer:<init>(int), org.joda.time.format.DateTimePrinter:printTo(java.lang.StringBuffer-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.DateTimePrinterInternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.format.DateTimePrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.format.DateTimePrinter:printTo(java.io.Writer-org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.format.DateTimePrinterInternalPrinter:estimatePrintedLength(), java.lang.StringBuffer:<init>(int), org.joda.time.format.DateTimePrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePartial-java.util.Locale), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.ISOPeriodFormat:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.ISOPeriodFormat:standard() to listOf(org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.format.PeriodFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendYears(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendMonths(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendWeeks(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendDays(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendHours(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis(), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:toFormatter()),
		org.joda.time.format.ISOPeriodFormat:alternate() to listOf(org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.format.PeriodFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:printZeroAlways(), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendYears(), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendMonths(), org.joda.time.format.PeriodFormatterBuilder:appendDays(), org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendHours(), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis(), org.joda.time.format.PeriodFormatterBuilder:toFormatter()),
		org.joda.time.format.ISOPeriodFormat:alternateExtended() to listOf(org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.format.PeriodFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:printZeroAlways(), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendYears(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendMonths(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendDays(), org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendHours(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis(), org.joda.time.format.PeriodFormatterBuilder:toFormatter()),
		org.joda.time.format.ISOPeriodFormat:alternateWithWeeks() to listOf(org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.format.PeriodFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:printZeroAlways(), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendYears(), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendWeeks(), org.joda.time.format.PeriodFormatterBuilder:appendDays(), org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendHours(), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis(), org.joda.time.format.PeriodFormatterBuilder:toFormatter()),
		org.joda.time.format.ISOPeriodFormat:alternateExtendedWithWeeks() to listOf(org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.format.PeriodFormatterBuilder:appendLiteral(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:printZeroAlways(), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendYears(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:minimumPrintedDigits(int), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendWeeks(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendDays(), org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendHours(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis(), org.joda.time.format.PeriodFormatterBuilder:toFormatter()),
		org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-java.util.Locale-org.joda.time.PeriodType) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormatter:withLocale(java.util.Locale) to listOf(org.joda.time.format.PeriodFormatter:getLocale(), org.joda.time.format.PeriodFormatter:getLocale(), java.util.Locale:equals(java.lang.Object), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-java.util.Locale-org.joda.time.PeriodType)),
		org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType) to listOf(org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-java.util.Locale-org.joda.time.PeriodType)),
		org.joda.time.format.PeriodFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod) to listOf(org.joda.time.format.PeriodFormatter:checkPrinter(), org.joda.time.format.PeriodFormatter:checkPeriod(org.joda.time.ReadablePeriod), org.joda.time.format.PeriodFormatter:getPrinter(), org.joda.time.format.PeriodPrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormatter:printTo(java.io.Writer-org.joda.time.ReadablePeriod) to listOf(org.joda.time.format.PeriodFormatter:checkPrinter(), org.joda.time.format.PeriodFormatter:checkPeriod(org.joda.time.ReadablePeriod), org.joda.time.format.PeriodFormatter:getPrinter(), org.joda.time.format.PeriodPrinter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormatter:print(org.joda.time.ReadablePeriod) to listOf(org.joda.time.format.PeriodFormatter:checkPrinter(), org.joda.time.format.PeriodFormatter:checkPeriod(org.joda.time.ReadablePeriod), org.joda.time.format.PeriodFormatter:getPrinter(), org.joda.time.format.PeriodPrinter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale), java.lang.StringBuffer:<init>(int), org.joda.time.format.PeriodPrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale), java.lang.StringBuffer:toString()),
		org.joda.time.format.PeriodFormatter:checkPrinter() to listOf(java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.PeriodFormatter:checkPeriod(org.joda.time.ReadablePeriod) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.PeriodFormatter:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int) to listOf(org.joda.time.format.PeriodFormatter:checkParser(), org.joda.time.format.PeriodFormatter:checkPeriod(org.joda.time.ReadablePeriod), org.joda.time.format.PeriodFormatter:getParser(), org.joda.time.format.PeriodParser:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale)),
		org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:checkParser(), org.joda.time.format.PeriodFormatter:parseMutablePeriod(java.lang.String), org.joda.time.MutablePeriod:toPeriod()),
		org.joda.time.format.PeriodFormatter:parseMutablePeriod(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:checkParser(), org.joda.time.MutablePeriod:<init>(long-org.joda.time.PeriodType), org.joda.time.format.PeriodFormatter:getParser(), org.joda.time.format.PeriodParser:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale), java.lang.String:length(), org.joda.time.format.FormatUtils:createErrorMessage(java.lang.String-int), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.PeriodFormatter:checkParser() to listOf(java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:compare(java.lang.String-java.lang.String) to listOf(java.lang.String:length(), java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:compare(java.lang.Object-java.lang.Object) to listOf(org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1:compare(java.lang.String-java.lang.String)),
		org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.String) to listOf(java.lang.StringBuffer:<init>(), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(char), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(char), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(char), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:toString()),
		org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number) to listOf(org.joda.time.DateTimeFieldType:getName(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String) to listOf(org.joda.time.DateTimeFieldType:getName(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.String) to listOf(org.joda.time.DateTimeFieldType:getName(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DurationFieldType-java.lang.Number-java.lang.Number-java.lang.Number) to listOf(org.joda.time.DurationFieldType:getName(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationFieldType:getName(), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:<init>(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number) to listOf(org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.String) to listOf(org.joda.time.DateTimeFieldType:getName(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DurationFieldType-java.lang.String) to listOf(org.joda.time.DurationFieldType:getName(), org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationFieldType:getName(), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:<init>(java.lang.String-java.lang.String) to listOf(org.joda.time.IllegalFieldValueException:createMessage(java.lang.String-java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:getMessage()),
		org.joda.time.IllegalFieldValueException:getIllegalValueAsString() to listOf(java.lang.String:valueOf(java.lang.Object)),
		org.joda.time.IllegalFieldValueException:prependMessage(java.lang.String) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.LocalDateTime:now() to listOf(org.joda.time.LocalDateTime:<init>()),
		org.joda.time.LocalDateTime:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.LocalDateTime:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDateTime:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.LocalDateTime:<init>(org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:parse(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:localDateOptionalTimeParser(), org.joda.time.LocalDateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.LocalDateTime:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseLocalDateTime(java.lang.String)),
		org.joda.time.LocalDateTime:fromCalendarFields(java.util.Calendar) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int)),
		org.joda.time.LocalDateTime:fromDateFields(java.util.Date) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Date:getTime(), java.util.GregorianCalendar:<init>(), java.util.GregorianCalendar:setTime(java.util.Date), org.joda.time.LocalDateTime:fromCalendarFields(java.util.Calendar), java.util.Date:getYear(), java.util.Date:getMonth(), java.util.Date:getDate(), java.util.Date:getHours(), java.util.Date:getMinutes(), java.util.Date:getSeconds(), java.util.Date:getTime(), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int)),
		org.joda.time.LocalDateTime:<init>() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(long) to listOf(org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(long-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:getMillisKeepLocal(org.joda.time.DateTimeZone-long), org.joda.time.Chronology:withUTC()),
		org.joda.time.LocalDateTime:<init>(java.lang.Object) to listOf(org.joda.time.LocalDateTime:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.format.ISODateTimeFormat:localDateOptionalTimeParser(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.LocalDateTime:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.format.ISODateTimeFormat:localDateOptionalTimeParser(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.LocalDateTime:<init>(int-int-int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseLocal:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int)),
		org.joda.time.LocalDateTime:readResolve() to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object), org.joda.time.Chronology:withUTC(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:year(), org.joda.time.Chronology:monthOfYear(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.Chronology:millisOfDay(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.LocalDateTime:getValue(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.LocalDateTime:get(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:isSupported(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:isSupported()),
		org.joda.time.LocalDateTime:isSupported(org.joda.time.DurationFieldType) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:isSupported()),
		org.joda.time.LocalDateTime:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.base.BaseLocal:equals(java.lang.Object)),
		org.joda.time.LocalDateTime:compareTo(org.joda.time.ReadablePartial) to listOf(java.lang.Object:equals(java.lang.Object), org.joda.time.base.BaseLocal:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDateTime:toDateTime() to listOf(org.joda.time.LocalDateTime:toDateTime(org.joda.time.DateTimeZone)),
		org.joda.time.LocalDateTime:toDateTime(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.LocalDateTime:getYear(), org.joda.time.LocalDateTime:getMonthOfYear(), org.joda.time.LocalDateTime:getDayOfMonth(), org.joda.time.LocalDateTime:getHourOfDay(), org.joda.time.LocalDateTime:getMinuteOfHour(), org.joda.time.LocalDateTime:getSecondOfMinute(), org.joda.time.LocalDateTime:getMillisOfSecond(), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:toLocalDate() to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:toLocalTime() to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:toDate() to listOf(org.joda.time.LocalDateTime:getDayOfMonth(), org.joda.time.LocalDateTime:getYear(), org.joda.time.LocalDateTime:getMonthOfYear(), org.joda.time.LocalDateTime:getHourOfDay(), org.joda.time.LocalDateTime:getMinuteOfHour(), org.joda.time.LocalDateTime:getSecondOfMinute(), java.util.Date:<init>(int-int-int-int-int-int), java.util.Date:getTime(), org.joda.time.LocalDateTime:getMillisOfSecond(), java.util.Date:setTime(long), java.util.TimeZone:getDefault(), org.joda.time.LocalDateTime:correctDstTransition(java.util.Date-java.util.TimeZone)),
		org.joda.time.LocalDateTime:toDate(java.util.TimeZone) to listOf(java.util.Calendar:getInstance(java.util.TimeZone), java.util.Calendar:clear(), org.joda.time.LocalDateTime:getYear(), org.joda.time.LocalDateTime:getMonthOfYear(), org.joda.time.LocalDateTime:getDayOfMonth(), org.joda.time.LocalDateTime:getHourOfDay(), org.joda.time.LocalDateTime:getMinuteOfHour(), org.joda.time.LocalDateTime:getSecondOfMinute(), java.util.Calendar:set(int-int-int-int-int-int), java.util.Calendar:getTime(), java.util.Date:getTime(), org.joda.time.LocalDateTime:getMillisOfSecond(), java.util.Date:setTime(long), org.joda.time.LocalDateTime:correctDstTransition(java.util.Date-java.util.TimeZone)),
		org.joda.time.LocalDateTime:correctDstTransition(java.util.Date-java.util.TimeZone) to listOf(java.util.Calendar:getInstance(java.util.TimeZone), java.util.Calendar:setTime(java.util.Date), org.joda.time.LocalDateTime:fromCalendarFields(java.util.Calendar), org.joda.time.LocalDateTime:isBefore(org.joda.time.ReadablePartial), org.joda.time.LocalDateTime:isBefore(org.joda.time.ReadablePartial), java.util.Calendar:getTimeInMillis(), java.util.Calendar:setTimeInMillis(long), org.joda.time.LocalDateTime:fromCalendarFields(java.util.Calendar), org.joda.time.LocalDateTime:isBefore(org.joda.time.ReadablePartial), java.util.Calendar:getTimeInMillis(), java.util.Calendar:setTimeInMillis(long), org.joda.time.LocalDateTime:fromCalendarFields(java.util.Calendar), java.util.Calendar:getTimeInMillis(), java.util.Calendar:setTimeInMillis(long), org.joda.time.LocalDateTime:equals(java.lang.Object), java.util.Calendar:getInstance(java.util.TimeZone), java.util.Calendar:getTimeInMillis(), java.util.TimeZone:getDSTSavings(), java.util.Calendar:setTimeInMillis(long), org.joda.time.LocalDateTime:fromCalendarFields(java.util.Calendar), org.joda.time.LocalDateTime:equals(java.lang.Object), java.util.Calendar:getTime()),
		org.joda.time.LocalDateTime:withLocalMillis(long) to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.LocalDateTime:withDate(int-int-int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withTime(int-int-int-int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.Chronology:hourOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:minuteOfHour(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:secondOfMinute(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfSecond(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withFields(org.joda.time.ReadablePartial) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withField(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDateTime:getChronology(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withDurationAdded(org.joda.time.ReadableDuration-int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.ReadableDuration:getMillis(), org.joda.time.Chronology:add(long-long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plus(org.joda.time.ReadableDuration) to listOf(org.joda.time.LocalDateTime:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.LocalDateTime:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.LocalDateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.LocalDateTime:plusYears(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:years(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plusMonths(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:months(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plusWeeks(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plusDays(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:days(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plusHours(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:hours(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plusMinutes(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:minutes(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plusSeconds(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:seconds(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:plusMillis(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millis(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minus(org.joda.time.ReadableDuration) to listOf(org.joda.time.LocalDateTime:withDurationAdded(org.joda.time.ReadableDuration-int)),
		org.joda.time.LocalDateTime:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.LocalDateTime:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.LocalDateTime:minusYears(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:years(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minusMonths(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:months(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minusWeeks(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weeks(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minusDays(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:days(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minusHours(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:hours(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minusMinutes(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:minutes(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minusSeconds(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:seconds(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:minusMillis(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millis(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DurationField:subtract(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:property(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDateTime:isSupported(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.LocalDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:getEra() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:era(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getCenturyOfEra() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getYearOfEra() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getYearOfCentury() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getYear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getWeekyear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getMonthOfYear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getWeekOfWeekyear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getDayOfYear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getDayOfMonth() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getDayOfWeek() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getHourOfDay() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getMinuteOfHour() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getSecondOfMinute() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getMillisOfSecond() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:getMillisOfDay() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.LocalDateTime:withEra(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:era(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withCenturyOfEra(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withYearOfEra(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withYearOfCentury(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withYear(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withWeekyear(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withMonthOfYear(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withWeekOfWeekyear(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withDayOfYear(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withDayOfMonth(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withDayOfWeek(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withHourOfDay(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withMinuteOfHour(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withSecondOfMinute(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withMillisOfSecond(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:withMillisOfDay(int) to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime:era() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:era(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:centuryOfEra() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:centuryOfEra(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:yearOfCentury() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:yearOfCentury(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:yearOfEra() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:yearOfEra(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:year() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:year(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:weekyear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weekyear(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:monthOfYear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:weekOfWeekyear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:dayOfYear() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfYear(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:dayOfMonth() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:dayOfWeek() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:hourOfDay() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:minuteOfHour() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:secondOfMinute() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:millisOfSecond() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:millisOfDay() to listOf(org.joda.time.LocalDateTime:getChronology(), org.joda.time.Chronology:millisOfDay(), org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField)),
		org.joda.time.LocalDateTime:toString() to listOf(org.joda.time.format.ISODateTimeFormat:dateTime(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDateTime:toString(java.lang.String) to listOf(org.joda.time.LocalDateTime:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDateTime:toString(java.lang.String-java.util.Locale) to listOf(org.joda.time.LocalDateTime:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.LocalDateTime:compareTo(java.lang.Object) to listOf(org.joda.time.LocalDateTime:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.MutableInterval:parse(java.lang.String) to listOf(org.joda.time.MutableInterval:<init>(java.lang.Object)),
		org.joda.time.MutableInterval:<init>() to listOf(org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:<init>(long-long) to listOf(org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:<init>(long-long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant)),
		org.joda.time.MutableInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration)),
		org.joda.time.MutableInterval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant)),
		org.joda.time.MutableInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod)),
		org.joda.time.MutableInterval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant)),
		org.joda.time.MutableInterval:<init>(java.lang.Object) to listOf(org.joda.time.base.BaseInterval:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseInterval:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setInterval(long-long) to listOf(org.joda.time.MutableInterval:getChronology(), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setInterval(org.joda.time.ReadableInterval) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.ReadableInterval:getChronology(), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setInterval(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.MutableInterval:setInterval(long-long), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setChronology(org.joda.time.Chronology) to listOf(org.joda.time.MutableInterval:getStartMillis(), org.joda.time.MutableInterval:getEndMillis(), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setStartMillis(long) to listOf(org.joda.time.MutableInterval:getEndMillis(), org.joda.time.MutableInterval:getChronology(), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setStart(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.MutableInterval:getEndMillis(), org.joda.time.MutableInterval:getChronology(), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setEndMillis(long) to listOf(org.joda.time.MutableInterval:getStartMillis(), org.joda.time.MutableInterval:getChronology(), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setEnd(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.MutableInterval:getStartMillis(), org.joda.time.MutableInterval:getChronology(), org.joda.time.base.BaseInterval:setInterval(long-long-org.joda.time.Chronology)),
		org.joda.time.MutableInterval:setDurationAfterStart(long) to listOf(org.joda.time.MutableInterval:getStartMillis(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.MutableInterval:setEndMillis(long)),
		org.joda.time.MutableInterval:setDurationBeforeEnd(long) to listOf(org.joda.time.MutableInterval:getEndMillis(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.MutableInterval:setStartMillis(long)),
		org.joda.time.MutableInterval:setDurationAfterStart(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.MutableInterval:getStartMillis(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.MutableInterval:setEndMillis(long)),
		org.joda.time.MutableInterval:setDurationBeforeEnd(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.MutableInterval:getEndMillis(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.MutableInterval:setStartMillis(long)),
		org.joda.time.MutableInterval:setPeriodAfterStart(org.joda.time.ReadablePeriod) to listOf(org.joda.time.MutableInterval:getStartMillis(), org.joda.time.MutableInterval:setEndMillis(long), org.joda.time.MutableInterval:getChronology(), org.joda.time.MutableInterval:getStartMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.MutableInterval:setEndMillis(long)),
		org.joda.time.MutableInterval:setPeriodBeforeEnd(org.joda.time.ReadablePeriod) to listOf(org.joda.time.MutableInterval:getEndMillis(), org.joda.time.MutableInterval:setStartMillis(long), org.joda.time.MutableInterval:getChronology(), org.joda.time.MutableInterval:getEndMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.MutableInterval:setStartMillis(long)),
		org.joda.time.MutableInterval:copy() to listOf(org.joda.time.MutableInterval:clone()),
		org.joda.time.MutableInterval:clone() to listOf(java.lang.Object:clone(), java.lang.InternalError:<init>(java.lang.String)),
		org.joda.time.tz.DefaultNameProvider:<init>() to listOf(java.lang.Object:<init>(), org.joda.time.tz.DefaultNameProvider:createCache(), org.joda.time.tz.DefaultNameProvider:createCache()),
		org.joda.time.tz.DefaultNameProvider:getShortName(java.util.Locale-java.lang.String-java.lang.String) to listOf(org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String)),
		org.joda.time.tz.DefaultNameProvider:getName(java.util.Locale-java.lang.String-java.lang.String) to listOf(org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String)),
		org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String) to listOf(java.util.HashMap:get(java.lang.Object), org.joda.time.tz.DefaultNameProvider:createCache(), java.util.HashMap:put(java.lang.Object-java.lang.Object), java.util.Map:get(java.lang.Object), org.joda.time.tz.DefaultNameProvider:createCache(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.DateTimeUtils:getDateFormatSymbols(java.util.Locale), java.text.DateFormatSymbols:getZoneStrings(), java.lang.String:equals(java.lang.Object), org.joda.time.DateTimeUtils:getDateFormatSymbols(java.util.Locale), java.text.DateFormatSymbols:getZoneStrings(), java.lang.String:equals(java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.lang.String:equals(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:get(java.lang.Object)),
		org.joda.time.tz.DefaultNameProvider:getShortName(java.util.Locale-java.lang.String-java.lang.String-boolean) to listOf(org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String-boolean)),
		org.joda.time.tz.DefaultNameProvider:getName(java.util.Locale-java.lang.String-java.lang.String-boolean) to listOf(org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String-boolean)),
		org.joda.time.tz.DefaultNameProvider:getNameSet(java.util.Locale-java.lang.String-java.lang.String-boolean) to listOf(java.lang.String:startsWith(java.lang.String), java.lang.String:substring(int), java.util.HashMap:get(java.lang.Object), org.joda.time.tz.DefaultNameProvider:createCache(), java.util.HashMap:put(java.lang.Object-java.lang.Object), java.util.Map:get(java.lang.Object), org.joda.time.tz.DefaultNameProvider:createCache(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.DateTimeUtils:getDateFormatSymbols(java.util.Locale), java.text.DateFormatSymbols:getZoneStrings(), java.lang.String:equals(java.lang.Object), org.joda.time.DateTimeUtils:getDateFormatSymbols(java.util.Locale), java.text.DateFormatSymbols:getZoneStrings(), java.lang.String:equals(java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.lang.Boolean:valueOf(boolean), java.util.Map:get(java.lang.Object)),
		org.joda.time.tz.DefaultNameProvider:createCache() to listOf(java.util.HashMap:<init>(int)),
		org.joda.time.tz.ZoneInfoCompiler$Zone:<init>(java.util.StringTokenizer) to listOf(java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler$Zone:<init>(java.lang.String-java.util.StringTokenizer)),
		org.joda.time.tz.ZoneInfoCompiler$Zone:<init>(java.lang.String-java.util.StringTokenizer) to listOf(java.lang.Object:<init>(), java.lang.String:intern(), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseTime(java.lang.String), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseOptional(java.lang.String), java.util.StringTokenizer:nextToken(), java.lang.String:intern(), org.joda.time.tz.ZoneInfoCompiler:getStartOfYear(), java.util.StringTokenizer:hasMoreTokens(), java.util.StringTokenizer:nextToken(), java.lang.Integer:parseInt(java.lang.String), java.util.StringTokenizer:hasMoreTokens(), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:<init>(java.util.StringTokenizer)),
		org.joda.time.tz.ZoneInfoCompiler$Zone:chain(java.util.StringTokenizer) to listOf(org.joda.time.tz.ZoneInfoCompiler$Zone:chain(java.util.StringTokenizer), org.joda.time.tz.ZoneInfoCompiler$Zone:<init>(java.lang.String-java.util.StringTokenizer)),
		org.joda.time.tz.ZoneInfoCompiler$Zone:addToBuilder(org.joda.time.tz.DateTimeZoneBuilder-java.util.Map) to listOf(org.joda.time.tz.ZoneInfoCompiler$Zone:addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone-org.joda.time.tz.DateTimeZoneBuilder-java.util.Map)),
		org.joda.time.tz.ZoneInfoCompiler$Zone:addToBuilder(org.joda.time.tz.ZoneInfoCompiler$Zone-org.joda.time.tz.DateTimeZoneBuilder-java.util.Map) to listOf(org.joda.time.tz.DateTimeZoneBuilder:setStandardOffset(int), org.joda.time.tz.DateTimeZoneBuilder:setFixedSavings(java.lang.String-int), org.joda.time.tz.ZoneInfoCompiler:parseTime(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder:setStandardOffset(int), org.joda.time.tz.DateTimeZoneBuilder:setFixedSavings(java.lang.String-int), java.util.Map:get(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.tz.ZoneInfoCompiler$RuleSet:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-int-java.lang.String), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:addCutover(org.joda.time.tz.DateTimeZoneBuilder-int)),
		org.joda.time.tz.ZoneInfoCompiler$Zone:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.tz.ZoneInfoCompiler$Zone:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.YearMonth$Property:<init>(org.joda.time.YearMonth-int) to listOf(org.joda.time.field.AbstractPartialFieldProperty:<init>()),
		org.joda.time.YearMonth$Property:getField() to listOf(org.joda.time.YearMonth:getField(int)),
		org.joda.time.YearMonth$Property:get() to listOf(org.joda.time.YearMonth:getValue(int)),
		org.joda.time.YearMonth$Property:addToCopy(int) to listOf(org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth$Property:getField(), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth$Property:getField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth$Property:setCopy(int) to listOf(org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.YearMonth:getValues(), org.joda.time.YearMonth$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.YearMonth:<init>(org.joda.time.YearMonth-int[])),
		org.joda.time.YearMonth$Property:setCopy(java.lang.String) to listOf(org.joda.time.YearMonth$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.base.AbstractInstant:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.base.AbstractInstant:getZone() to listOf(org.joda.time.base.AbstractInstant:getChronology(), org.joda.time.Chronology:getZone()),
		org.joda.time.base.AbstractInstant:get(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.AbstractInstant:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractInstant:isSupported(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.base.AbstractInstant:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:isSupported()),
		org.joda.time.base.AbstractInstant:get(org.joda.time.DateTimeField) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.base.AbstractInstant:toInstant() to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.Instant:<init>(long)),
		org.joda.time.base.AbstractInstant:toDateTime() to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.base.AbstractInstant:getZone(), org.joda.time.DateTime:<init>(long-org.joda.time.DateTimeZone)),
		org.joda.time.base.AbstractInstant:toDateTimeISO() to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.base.AbstractInstant:getZone(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInstant:toDateTime(org.joda.time.DateTimeZone) to listOf(org.joda.time.base.AbstractInstant:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInstant:toDateTime(org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInstant:toMutableDateTime() to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.base.AbstractInstant:getZone(), org.joda.time.MutableDateTime:<init>(long-org.joda.time.DateTimeZone)),
		org.joda.time.base.AbstractInstant:toMutableDateTimeISO() to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.base.AbstractInstant:getZone(), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInstant:toMutableDateTime(org.joda.time.DateTimeZone) to listOf(org.joda.time.base.AbstractInstant:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInstant:toMutableDateTime(org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInstant:toDate() to listOf(org.joda.time.base.AbstractInstant:getMillis(), java.util.Date:<init>(long)),
		org.joda.time.base.AbstractInstant:equals(java.lang.Object) to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.base.AbstractInstant:getChronology(), org.joda.time.ReadableInstant:getChronology(), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object)),
		org.joda.time.base.AbstractInstant:hashCode() to listOf(org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.base.AbstractInstant:getMillis(), org.joda.time.base.AbstractInstant:getChronology(), java.lang.Object:hashCode()),
		org.joda.time.base.AbstractInstant:compareTo(org.joda.time.ReadableInstant) to listOf(org.joda.time.ReadableInstant:getMillis(), org.joda.time.base.AbstractInstant:getMillis()),
		org.joda.time.base.AbstractInstant:isAfter(long) to listOf(org.joda.time.base.AbstractInstant:getMillis()),
		org.joda.time.base.AbstractInstant:isAfterNow() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.AbstractInstant:isAfter(long)),
		org.joda.time.base.AbstractInstant:isAfter(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.base.AbstractInstant:isAfter(long)),
		org.joda.time.base.AbstractInstant:isBefore(long) to listOf(org.joda.time.base.AbstractInstant:getMillis()),
		org.joda.time.base.AbstractInstant:isBeforeNow() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.AbstractInstant:isBefore(long)),
		org.joda.time.base.AbstractInstant:isBefore(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.base.AbstractInstant:isBefore(long)),
		org.joda.time.base.AbstractInstant:isEqual(long) to listOf(org.joda.time.base.AbstractInstant:getMillis()),
		org.joda.time.base.AbstractInstant:isEqualNow() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.AbstractInstant:isEqual(long)),
		org.joda.time.base.AbstractInstant:isEqual(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.base.AbstractInstant:isEqual(long)),
		org.joda.time.base.AbstractInstant:toString() to listOf(org.joda.time.format.ISODateTimeFormat:dateTime(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadableInstant)),
		org.joda.time.base.AbstractInstant:toString(org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.base.AbstractInstant:toString(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadableInstant)),
		org.joda.time.base.AbstractInstant:compareTo(java.lang.Object) to listOf(org.joda.time.base.AbstractInstant:compareTo(org.joda.time.ReadableInstant)),
		org.joda.time.base.BasePartial:<init>() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BasePartial:<init>(long) to listOf(org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:get(org.joda.time.ReadablePartial-long)),
		org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPartialConverter(java.lang.Object), org.joda.time.convert.PartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.convert.PartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.base.BasePartial:<init>(int[]-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-int[]) to listOf(org.joda.time.base.AbstractPartial:<init>()),
		org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.Chronology:withUTC()),
		org.joda.time.base.BasePartial:getValues() to listOf(int[]:clone()),
		org.joda.time.base.BasePartial:setValue(int-int) to listOf(org.joda.time.base.BasePartial:getField(int), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int)),
		org.joda.time.base.BasePartial:setValues(int[]) to listOf(org.joda.time.base.BasePartial:getChronology(), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[]), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int)),
		org.joda.time.base.BasePartial:toString(java.lang.String) to listOf(java.lang.Object:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.base.BasePartial:toString(java.lang.String-java.util.Locale) to listOf(java.lang.Object:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.chrono.BasicChronology$YearInfo:<init>(int-long) to listOf(java.lang.Object:<init>()),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField) to listOf(org.joda.time.DateTimeFieldType:weekOfWeekyear(), org.joda.time.field.PreciseDurationDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getRangeDurationField() to listOf(org.joda.time.chrono.BasicChronology:weekyears()),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:roundFloor(long) to listOf(org.joda.time.field.PreciseDurationDateTimeField:roundFloor(long)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:roundCeiling(long) to listOf(org.joda.time.field.PreciseDurationDateTimeField:roundCeiling(long)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:remainder(long) to listOf(org.joda.time.field.PreciseDurationDateTimeField:remainder(long)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValue(long) to listOf(org.joda.time.chrono.BasicChronology:getWeekyear(long), org.joda.time.chrono.BasicChronology:getWeeksInYear(int)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.chrono.BasicChronology:getWeeksInYear(int)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.chrono.BasicChronology:getWeeksInYear(int)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValueForSet(long-int) to listOf(org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:getMaximumValue(long)),
		org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:weekOfWeekyear()),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long) to listOf(org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long) to listOf(org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-long) to listOf(org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean) to listOf(org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long-boolean), org.joda.time.chrono.GJChronology$LinkedDurationField:<init>(org.joda.time.DurationField-org.joda.time.chrono.GJChronology$ImpreciseCutoverField)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:add(long-int) to listOf(org.joda.time.DateTimeField:add(long-int), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:weekyear(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:weekyear(), org.joda.time.DateTimeField:add(long-int), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:year(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:gregorianToJulian(long), org.joda.time.DateTimeField:add(long-int), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:julianToGregorian(long)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:add(long-long) to listOf(org.joda.time.DateTimeField:add(long-long), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:weekyear(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:weekyear(), org.joda.time.DateTimeField:add(long-int), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:year(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.GJChronology:access$100(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GregorianChronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:gregorianToJulian(long), org.joda.time.DateTimeField:add(long-long), org.joda.time.chrono.GJChronology:access$000(org.joda.time.chrono.GJChronology), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:julianToGregorian(long)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getDifference(long-long) to listOf(org.joda.time.DateTimeField:getDifference(long-long), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:gregorianToJulian(long), org.joda.time.DateTimeField:getDifference(long-long), org.joda.time.DateTimeField:getDifference(long-long), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:julianToGregorian(long), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getDifferenceAsLong(long-long) to listOf(org.joda.time.DateTimeField:getDifferenceAsLong(long-long), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:gregorianToJulian(long), org.joda.time.DateTimeField:getDifferenceAsLong(long-long), org.joda.time.DateTimeField:getDifferenceAsLong(long-long), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:julianToGregorian(long), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getMinimumValue(long) to listOf(org.joda.time.DateTimeField:getMinimumValue(long), org.joda.time.DateTimeField:getMinimumValue(long)),
		org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getMaximumValue(long) to listOf(org.joda.time.DateTimeField:getMaximumValue(long), org.joda.time.DateTimeField:getMaximumValue(long)),
		org.joda.time.chrono.GregorianChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.GregorianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.chrono.GregorianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.GregorianChronology:<init>(org.joda.time.Chronology-java.lang.Object-int) to listOf(org.joda.time.chrono.BasicGJChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.GregorianChronology:readResolve() to listOf(org.joda.time.chrono.GregorianChronology:getBase(), org.joda.time.chrono.GregorianChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.Chronology:getZone(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int)),
		org.joda.time.chrono.GregorianChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.GregorianChronology:getZone(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.GregorianChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.GregorianChronology:getBase(), org.joda.time.chrono.BasicGJChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields)),
		org.joda.time.chrono.GregorianChronology:calculateFirstDayOfYearMillis(int) to listOf(org.joda.time.chrono.GregorianChronology:isLeapYear(int)),
		org.joda.time.chrono.GregorianChronology:toString() to listOf(org.joda.time.chrono.BasicGJChronology:toString()),
		org.joda.time.chrono.GregorianChronology:hashCode() to listOf(org.joda.time.chrono.BasicGJChronology:hashCode()),
		org.joda.time.chrono.GregorianChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.BasicGJChronology:equals(java.lang.Object)),
		org.joda.time.chrono.GregorianChronology:getMinimumDaysInFirstWeek() to listOf(org.joda.time.chrono.BasicGJChronology:getMinimumDaysInFirstWeek()),
		org.joda.time.chrono.GregorianChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.BasicGJChronology:getDateTimeMillis(int-int-int-int-int-int-int)),
		org.joda.time.chrono.GregorianChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.BasicGJChronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.chrono.GregorianChronology:getZone() to listOf(org.joda.time.chrono.BasicGJChronology:getZone()),
		org.joda.time.chrono.GregorianChronology:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:<init>(org.joda.time.chrono.LimitChronology-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-org.joda.time.DurationField) to listOf(org.joda.time.DateTimeField:getType(), org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:get(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getAsText(long-java.util.Locale) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getAsText(long-java.util.Locale)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getAsShortText(long-java.util.Locale) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:add(long-int) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-int), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:add(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:addWrapField(long-int) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getDifference(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:set(long-int) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:isLeap(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getLeapAmount(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getLeapAmount(long)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundCeiling(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:roundHalfEven(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:remainder(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:remainder(long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMinimumValue(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMinimumValue(long)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMaximumValue(long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumValue(long)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale)),
		org.joda.time.chrono.LimitChronology$LimitDateTimeField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.chrono.LimitChronology$LimitDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale)),
		org.joda.time.Chronology:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeFieldType:<init>(java.lang.String) to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeFieldType:isSupported(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:isSupported()),
		org.joda.time.DateTimeFieldType:toString() to listOf(org.joda.time.DateTimeFieldType:getName()),
		org.joda.time.DateTimeFieldType:<clinit>() to listOf(org.joda.time.DurationFieldType:eras(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:eras(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:centuries(), org.joda.time.DurationFieldType:eras(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:centuries(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:years(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:years(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:months(), org.joda.time.DurationFieldType:years(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:months(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:weekyears(), org.joda.time.DurationFieldType:centuries(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:weekyears(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:weeks(), org.joda.time.DurationFieldType:weekyears(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:weeks(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:halfdays(), org.joda.time.DurationFieldType:days(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:halfdays(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:halfdays(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:days(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:days(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:days(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:hours(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:days(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:minutes(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:millis(), org.joda.time.DurationFieldType:days(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:millis(), org.joda.time.DurationFieldType:seconds(), org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:<init>(java.lang.String-byte-org.joda.time.DurationFieldType-org.joda.time.DurationFieldType)),
		org.joda.time.DateTimeZone$Stub:<init>(java.lang.String) to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeZone$Stub:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeUTF(java.lang.String)),
		org.joda.time.DateTimeZone$Stub:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readUTF()),
		org.joda.time.DateTimeZone$Stub:readResolve() to listOf(org.joda.time.DateTimeZone:forID(java.lang.String)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getFieldType() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getType()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getName() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getName()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getChronology() to listOf(java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:get() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getAsString() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:get(), java.lang.Integer:toString(int)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getAsText() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getAsText(java.util.Locale)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getAsText(java.util.Locale) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:getAsText(long-java.util.Locale)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getAsShortText() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getAsShortText(java.util.Locale)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getAsShortText(java.util.Locale) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getDifference(org.joda.time.ReadableInstant) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.DateTimeField:getDifference(long-long), org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getDifferenceAsLong(org.joda.time.ReadableInstant) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long), org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getDurationField() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getRangeDurationField() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getRangeDurationField()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:isLeap() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getLeapAmount() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:getLeapAmount(long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getLeapDurationField() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getLeapDurationField()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getMinimumValueOverall() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getMinimumValue()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getMinimumValue() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:getMinimumValue(long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumValueOverall() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumValue() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:getMaximumValue(long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:remainder() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:toInterval() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:getField(), org.joda.time.field.AbstractReadableInstantFieldProperty:getMillis(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTimeField:add(long-int), org.joda.time.field.AbstractReadableInstantFieldProperty:getChronology(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:compareTo(org.joda.time.ReadableInstant) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.field.AbstractReadableInstantFieldProperty:get(), org.joda.time.field.AbstractReadableInstantFieldProperty:getFieldType(), org.joda.time.ReadableInstant:get(org.joda.time.DateTimeFieldType)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:compareTo(org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.field.AbstractReadableInstantFieldProperty:get(), org.joda.time.field.AbstractReadableInstantFieldProperty:getFieldType(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:equals(java.lang.Object) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:get(), org.joda.time.field.AbstractReadableInstantFieldProperty:get(), org.joda.time.field.AbstractReadableInstantFieldProperty:getFieldType(), org.joda.time.field.AbstractReadableInstantFieldProperty:getFieldType(), java.lang.Object:equals(java.lang.Object), org.joda.time.field.AbstractReadableInstantFieldProperty:getChronology(), org.joda.time.field.AbstractReadableInstantFieldProperty:getChronology(), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object)),
		org.joda.time.field.AbstractReadableInstantFieldProperty:hashCode() to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:get(), org.joda.time.field.AbstractReadableInstantFieldProperty:getFieldType(), java.lang.Object:hashCode(), org.joda.time.field.AbstractReadableInstantFieldProperty:getChronology(), java.lang.Object:hashCode()),
		org.joda.time.field.AbstractReadableInstantFieldProperty:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.field.AbstractReadableInstantFieldProperty:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.field.FieldUtils:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.field.FieldUtils:safeNegate(int) to listOf(java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeAdd(int-int) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeAdd(long-long) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeSubtract(long-long) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeMultiply(int-int) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeMultiply(long-int) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeMultiply(long-long) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeDivide(long-long) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeDivide(long-long-java.math.RoundingMode) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String), java.math.BigDecimal:<init>(long), java.math.BigDecimal:<init>(long), java.math.BigDecimal:divide(java.math.BigDecimal-java.math.RoundingMode), java.math.BigDecimal:longValue()),
		org.joda.time.field.FieldUtils:safeToInt(long) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(long), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:safeMultiplyToInt(long-long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-long), org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int) to listOf(org.joda.time.DateTimeField:getType(), java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number)),
		org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int) to listOf(java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number)),
		org.joda.time.field.FieldUtils:verifyValueBounds(java.lang.String-int-int-int) to listOf(java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), org.joda.time.IllegalFieldValueException:<init>(java.lang.String-java.lang.Number-java.lang.Number-java.lang.Number)),
		org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int) to listOf(org.joda.time.field.FieldUtils:getWrappedValue(int-int-int)),
		org.joda.time.field.FieldUtils:getWrappedValue(int-int-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object)),
		org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long) to listOf(org.joda.time.field.BaseDurationField:<init>(org.joda.time.DurationFieldType)),
		org.joda.time.field.PreciseDurationField:getMillis(long-long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-long)),
		org.joda.time.field.PreciseDurationField:add(long-int) to listOf(org.joda.time.field.FieldUtils:safeAdd(long-long)),
		org.joda.time.field.PreciseDurationField:add(long-long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-long), org.joda.time.field.FieldUtils:safeAdd(long-long)),
		org.joda.time.field.PreciseDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.FieldUtils:safeSubtract(long-long)),
		org.joda.time.field.PreciseDurationField:equals(java.lang.Object) to listOf(org.joda.time.field.PreciseDurationField:getType(), org.joda.time.field.PreciseDurationField:getType()),
		org.joda.time.field.PreciseDurationField:hashCode() to listOf(org.joda.time.field.PreciseDurationField:getType(), java.lang.Object:hashCode()),
		org.joda.time.field.ZeroIsMaxDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.DateTimeField:getMinimumValue(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.ZeroIsMaxDateTimeField:get(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:get(long), org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue()),
		org.joda.time.field.ZeroIsMaxDateTimeField:add(long-int) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.field.ZeroIsMaxDateTimeField:add(long-long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:add(long-long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:addWrapField(long-int) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:addWrapField(long-int)),
		org.joda.time.field.ZeroIsMaxDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.ZeroIsMaxDateTimeField:getDifference(long-long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:set(long-int) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.field.ZeroIsMaxDateTimeField:isLeap(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:getLeapAmount(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getLeapAmount(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:getLeapDurationField() to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getLeapDurationField()),
		org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue() to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumValue(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial)),
		org.joda.time.field.ZeroIsMaxDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[])),
		org.joda.time.field.ZeroIsMaxDateTimeField:roundFloor(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:roundCeiling(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundCeiling(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfFloor(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfCeiling(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:roundHalfEven(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfEven(long)),
		org.joda.time.field.ZeroIsMaxDateTimeField:remainder(long) to listOf(org.joda.time.field.ZeroIsMaxDateTimeField:getWrappedField(), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.format.DateTimeFormatterBuilder$Fraction:<init>(org.joda.time.DateTimeFieldType-int-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-long-org.joda.time.Chronology)),
		org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.ReadablePartial:getChronology(), org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-long-org.joda.time.Chronology)),
		org.joda.time.format.DateTimeFormatterBuilder$Fraction:printTo(java.lang.Appendable-long-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:remainder(long), org.joda.time.format.DateTimeFormatterBuilder:appendUnknownString(java.lang.Appendable-int), java.lang.Appendable:append(char), org.joda.time.format.DateTimeFormatterBuilder$Fraction:getFractionData(long-org.joda.time.DateTimeField), java.lang.Integer:toString(int), java.lang.Long:toString(long), java.lang.String:length(), java.lang.Appendable:append(char), java.lang.String:charAt(int), java.lang.String:length(), java.lang.String:charAt(int), java.lang.Appendable:append(char), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.DateTimeFormatterBuilder$Fraction:getFractionData(long-org.joda.time.DateTimeField) to listOf(org.joda.time.DateTimeField:getDurationField(), org.joda.time.DurationField:getUnitMillis()),
		org.joda.time.format.DateTimeFormatterBuilder$Fraction:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.format.DateTimeParserBucket:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), java.lang.CharSequence:length(), java.lang.Math:min(int-int), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DurationField:getUnitMillis(), java.lang.CharSequence:charAt(int), org.joda.time.DateTimeFieldType:millisOfSecond(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeField-int)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:<init>(int-java.util.Map) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:print(long-org.joda.time.DateTimeZone-java.util.Locale), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:print(long-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.DateTimeZone:getName(long-java.util.Locale), org.joda.time.DateTimeZone:getShortName(long-java.util.Locale)),
		org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.DateTimeUtils:getDefaultTimeZoneNames(), java.util.Map:keySet(), java.util.Set:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), org.joda.time.format.DateTimeFormatterBuilder:csStartsWith(java.lang.CharSequence-int-java.lang.String), java.lang.String:length(), java.lang.String:length(), java.util.Map:get(java.lang.Object), org.joda.time.format.DateTimeParserBucket:setZone(org.joda.time.DateTimeZone), java.lang.String:length()),
		org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale) to listOf(org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int)),
		org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer) to listOf(org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int)),
		org.joda.time.format.DateTimeParserBucket:<init>(long-org.joda.time.Chronology-java.util.Locale-java.lang.Integer-int) to listOf(java.lang.Object:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:getZone(), org.joda.time.Chronology:withUTC(), java.util.Locale:getDefault()),
		org.joda.time.format.DateTimeParserBucket:parseMillis(org.joda.time.format.DateTimeParser-java.lang.CharSequence) to listOf(org.joda.time.format.DateTimeParserBucket:reset(), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeParserBucket:doParseMillis(org.joda.time.format.InternalParser-java.lang.CharSequence)),
		org.joda.time.format.DateTimeParserBucket:doParseMillis(org.joda.time.format.InternalParser-java.lang.CharSequence) to listOf(org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int), java.lang.CharSequence:length(), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.CharSequence), java.lang.CharSequence:toString(), org.joda.time.format.FormatUtils:createErrorMessage(java.lang.String-int), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeParserBucket:getOffset() to listOf(java.lang.Integer:intValue()),
		org.joda.time.format.DateTimeParserBucket:setOffset(int) to listOf(java.lang.Integer:valueOf(int)),
		org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeField-int) to listOf(org.joda.time.format.DateTimeParserBucket:obtainSaveField(), org.joda.time.format.DateTimeParserBucket$SavedField:init(org.joda.time.DateTimeField-int)),
		org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.format.DateTimeParserBucket:obtainSaveField(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket$SavedField:init(org.joda.time.DateTimeField-int)),
		org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-java.lang.String-java.util.Locale) to listOf(org.joda.time.format.DateTimeParserBucket:obtainSaveField(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.format.DateTimeParserBucket$SavedField:init(org.joda.time.DateTimeField-java.lang.String-java.util.Locale)),
		org.joda.time.format.DateTimeParserBucket:obtainSaveField() to listOf(java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), org.joda.time.format.DateTimeParserBucket$SavedField:<init>()),
		org.joda.time.format.DateTimeParserBucket:saveState() to listOf(org.joda.time.format.DateTimeParserBucket$SavedState:<init>(org.joda.time.format.DateTimeParserBucket)),
		org.joda.time.format.DateTimeParserBucket:restoreState(java.lang.Object) to listOf(org.joda.time.format.DateTimeParserBucket$SavedState:restoreState(org.joda.time.format.DateTimeParserBucket)),
		org.joda.time.format.DateTimeParserBucket:computeMillis() to listOf(org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.CharSequence)),
		org.joda.time.format.DateTimeParserBucket:computeMillis(boolean) to listOf(org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.CharSequence)),
		org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.String) to listOf(org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.CharSequence)),
		org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.CharSequence) to listOf(org.joda.time.format.DateTimeParserBucket$SavedField[]:clone(), org.joda.time.format.DateTimeParserBucket:sort(org.joda.time.format.DateTimeParserBucket$SavedField[]-int), org.joda.time.DurationFieldType:months(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:getDurationField(), org.joda.time.format.DateTimeParserBucket:compareReverse(org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.format.DateTimeParserBucket:compareReverse(org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:year(), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-int), org.joda.time.format.DateTimeParserBucket:computeMillis(boolean-java.lang.CharSequence), org.joda.time.format.DateTimeParserBucket$SavedField:set(long-boolean), org.joda.time.DateTimeField:isLenient(), org.joda.time.format.DateTimeParserBucket$SavedField:set(long-boolean), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), org.joda.time.IllegalFieldValueException:prependMessage(java.lang.String), java.lang.Integer:intValue(), org.joda.time.DateTimeZone:getOffsetFromLocal(long), org.joda.time.DateTimeZone:getOffset(long), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), org.joda.time.IllegalInstantException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeParserBucket:sort(org.joda.time.format.DateTimeParserBucket$SavedField[]-int) to listOf(java.util.Arrays:sort(java.lang.Object[]-int-int), org.joda.time.format.DateTimeParserBucket$SavedField:compareTo(org.joda.time.format.DateTimeParserBucket$SavedField)),
		org.joda.time.format.DateTimeParserBucket:compareReverse(org.joda.time.DurationField-org.joda.time.DurationField) to listOf(org.joda.time.DurationField:isSupported(), org.joda.time.DurationField:isSupported(), org.joda.time.DurationField:isSupported(), org.joda.time.DurationField:compareTo(java.lang.Object)),
		org.joda.time.format.ISODateTimeFormat:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.ISODateTimeFormat:forFields(java.util.Collection-boolean-boolean) to listOf(java.util.Collection:size(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.HashSet:<init>(java.util.Collection), java.util.Set:size(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.DateTimeFieldType:monthOfYear(), java.util.Set:contains(java.lang.Object), org.joda.time.format.ISODateTimeFormat:dateByMonth(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.DateTimeFieldType:dayOfYear(), java.util.Set:contains(java.lang.Object), org.joda.time.format.ISODateTimeFormat:dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.DateTimeFieldType:weekOfWeekyear(), java.util.Set:contains(java.lang.Object), org.joda.time.format.ISODateTimeFormat:dateByWeek(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.DateTimeFieldType:dayOfMonth(), java.util.Set:contains(java.lang.Object), org.joda.time.format.ISODateTimeFormat:dateByMonth(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.DateTimeFieldType:dayOfWeek(), java.util.Set:contains(java.lang.Object), org.joda.time.format.ISODateTimeFormat:dateByWeek(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean), org.joda.time.DateTimeFieldType:year(), java.util.Set:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:access$000(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.DateTimeFieldType:weekyear(), java.util.Set:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:access$100(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), java.util.Set:size(), org.joda.time.format.ISODateTimeFormat:time(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean-boolean-boolean), org.joda.time.format.DateTimeFormatterBuilder:canBuildFormatter(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Collection:retainAll(java.util.Collection), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.format.ISODateTimeFormat:dateByMonth(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean) to listOf(org.joda.time.DateTimeFieldType:year(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:access$000(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.DateTimeFieldType:monthOfYear(), java.util.Collection:remove(java.lang.Object), org.joda.time.DateTimeFieldType:dayOfMonth(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYear(int), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYear(int), org.joda.time.DateTimeFieldType:dayOfMonth(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:checkNotStrictISO(java.util.Collection-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int), org.joda.time.DateTimeFieldType:monthOfYear(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYear(int), org.joda.time.DateTimeFieldType:dayOfMonth(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int), org.joda.time.DateTimeFieldType:dayOfMonth(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int)),
		org.joda.time.format.ISODateTimeFormat:dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean) to listOf(org.joda.time.DateTimeFieldType:year(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:access$000(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.DateTimeFieldType:dayOfYear(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfYear(int), org.joda.time.DateTimeFieldType:dayOfYear(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfYear(int)),
		org.joda.time.format.ISODateTimeFormat:dateByWeek(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean) to listOf(org.joda.time.DateTimeFieldType:weekyear(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat$Constants:access$100(), org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter), org.joda.time.DateTimeFieldType:weekOfWeekyear(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendWeekOfWeekyear(int), org.joda.time.DateTimeFieldType:dayOfWeek(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int), org.joda.time.DateTimeFieldType:dayOfWeek(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:checkNotStrictISO(java.util.Collection-boolean), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int), org.joda.time.DateTimeFieldType:weekOfWeekyear(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendWeekOfWeekyear(int), org.joda.time.DateTimeFieldType:dayOfWeek(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int), org.joda.time.DateTimeFieldType:dayOfWeek(), java.util.Collection:remove(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int)),
		org.joda.time.format.ISODateTimeFormat:time(org.joda.time.format.DateTimeFormatterBuilder-java.util.Collection-boolean-boolean-boolean-boolean) to listOf(org.joda.time.DateTimeFieldType:hourOfDay(), java.util.Collection:remove(java.lang.Object), org.joda.time.DateTimeFieldType:minuteOfHour(), java.util.Collection:remove(java.lang.Object), org.joda.time.DateTimeFieldType:secondOfMinute(), java.util.Collection:remove(java.lang.Object), org.joda.time.DateTimeFieldType:millisOfSecond(), java.util.Collection:remove(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:appendHourOfDay(int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendMinuteOfHour(int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendSecondOfMinute(int), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char), org.joda.time.format.DateTimeFormatterBuilder:appendMillisOfSecond(int)),
		org.joda.time.format.ISODateTimeFormat:checkNotStrictISO(java.util.Collection-boolean) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.ISODateTimeFormat:appendSeparator(org.joda.time.format.DateTimeFormatterBuilder-boolean) to listOf(org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char)),
		org.joda.time.format.ISODateTimeFormat:dateParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$200()),
		org.joda.time.format.ISODateTimeFormat:localDateParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$300()),
		org.joda.time.format.ISODateTimeFormat:dateElementParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$400()),
		org.joda.time.format.ISODateTimeFormat:timeParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$500()),
		org.joda.time.format.ISODateTimeFormat:localTimeParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$600()),
		org.joda.time.format.ISODateTimeFormat:timeElementParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$700()),
		org.joda.time.format.ISODateTimeFormat:dateTimeParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$800()),
		org.joda.time.format.ISODateTimeFormat:dateOptionalTimeParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$900()),
		org.joda.time.format.ISODateTimeFormat:localDateOptionalTimeParser() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1000()),
		org.joda.time.format.ISODateTimeFormat:date() to listOf(org.joda.time.format.ISODateTimeFormat:yearMonthDay()),
		org.joda.time.format.ISODateTimeFormat:time() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1100()),
		org.joda.time.format.ISODateTimeFormat:timeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1200()),
		org.joda.time.format.ISODateTimeFormat:tTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1300()),
		org.joda.time.format.ISODateTimeFormat:tTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1400()),
		org.joda.time.format.ISODateTimeFormat:dateTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1500()),
		org.joda.time.format.ISODateTimeFormat:dateTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1600()),
		org.joda.time.format.ISODateTimeFormat:ordinalDate() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1700()),
		org.joda.time.format.ISODateTimeFormat:ordinalDateTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1800()),
		org.joda.time.format.ISODateTimeFormat:ordinalDateTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$1900()),
		org.joda.time.format.ISODateTimeFormat:weekDate() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2000()),
		org.joda.time.format.ISODateTimeFormat:weekDateTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2100()),
		org.joda.time.format.ISODateTimeFormat:weekDateTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2200()),
		org.joda.time.format.ISODateTimeFormat:basicDate() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2300()),
		org.joda.time.format.ISODateTimeFormat:basicTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2400()),
		org.joda.time.format.ISODateTimeFormat:basicTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2500()),
		org.joda.time.format.ISODateTimeFormat:basicTTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2600()),
		org.joda.time.format.ISODateTimeFormat:basicTTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2700()),
		org.joda.time.format.ISODateTimeFormat:basicDateTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2800()),
		org.joda.time.format.ISODateTimeFormat:basicDateTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2900()),
		org.joda.time.format.ISODateTimeFormat:basicOrdinalDate() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3000()),
		org.joda.time.format.ISODateTimeFormat:basicOrdinalDateTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3100()),
		org.joda.time.format.ISODateTimeFormat:basicOrdinalDateTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3200()),
		org.joda.time.format.ISODateTimeFormat:basicWeekDate() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3300()),
		org.joda.time.format.ISODateTimeFormat:basicWeekDateTime() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3400()),
		org.joda.time.format.ISODateTimeFormat:basicWeekDateTimeNoMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3500()),
		org.joda.time.format.ISODateTimeFormat:year() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$000()),
		org.joda.time.format.ISODateTimeFormat:yearMonth() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3600()),
		org.joda.time.format.ISODateTimeFormat:yearMonthDay() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3700()),
		org.joda.time.format.ISODateTimeFormat:weekyear() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$100()),
		org.joda.time.format.ISODateTimeFormat:weekyearWeek() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3800()),
		org.joda.time.format.ISODateTimeFormat:weekyearWeekDay() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$2000()),
		org.joda.time.format.ISODateTimeFormat:hour() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$3900()),
		org.joda.time.format.ISODateTimeFormat:hourMinute() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4000()),
		org.joda.time.format.ISODateTimeFormat:hourMinuteSecond() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4100()),
		org.joda.time.format.ISODateTimeFormat:hourMinuteSecondMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4200()),
		org.joda.time.format.ISODateTimeFormat:hourMinuteSecondFraction() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4300()),
		org.joda.time.format.ISODateTimeFormat:dateHour() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4400()),
		org.joda.time.format.ISODateTimeFormat:dateHourMinute() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4500()),
		org.joda.time.format.ISODateTimeFormat:dateHourMinuteSecond() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4600()),
		org.joda.time.format.ISODateTimeFormat:dateHourMinuteSecondMillis() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4700()),
		org.joda.time.format.ISODateTimeFormat:dateHourMinuteSecondFraction() to listOf(org.joda.time.format.ISODateTimeFormat$Constants:access$4800()),
		org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:finish(java.util.Set) to listOf(org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:getAffixes(), java.lang.String:length(), java.lang.String:length(), java.util.HashSet:<init>(), java.util.Set:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:getAffixes(), java.lang.String:length(), java.lang.String:equalsIgnoreCase(java.lang.String), java.lang.String:equals(java.lang.Object), java.util.Set:add(java.lang.Object), java.util.Set:size(), java.util.Set:toArray(java.lang.Object[])),
		org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:matchesOtherAffix(int-java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int)),
		org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:<init>(java.lang.String) to listOf(org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:<init>()),
		org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:calculatePrintedLength(int) to listOf(java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:printTo(java.lang.StringBuffer-int) to listOf(java.lang.StringBuffer:append(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:printTo(java.io.Writer-int) to listOf(java.io.Writer:write(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:parse(java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:matchesOtherAffix(int-java.lang.String-int)),
		org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:scan(java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:matchesOtherAffix(int-java.lang.String-int), java.lang.String:charAt(int)),
		org.joda.time.Interval:parse(java.lang.String) to listOf(org.joda.time.Interval:<init>(java.lang.Object)),
		org.joda.time.Interval:parseWithOffset(java.lang.String) to listOf(java.lang.String:indexOf(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:substring(int-int), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:substring(int), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.ISODateTimeFormat:dateTimeParser(), org.joda.time.format.DateTimeFormatter:withOffsetParsed(), org.joda.time.format.ISOPeriodFormat:standard(), java.lang.String:charAt(int), org.joda.time.PeriodType:standard(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType), org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), java.lang.String:charAt(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.PeriodType:standard(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType), org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod), org.joda.time.format.DateTimeFormatter:parseDateTime(java.lang.String), org.joda.time.Interval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant), org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant)),
		org.joda.time.Interval:<init>(long-long) to listOf(org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:<init>(long-long-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseInterval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant)),
		org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration)),
		org.joda.time.Interval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant)),
		org.joda.time.Interval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadablePeriod)),
		org.joda.time.Interval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BaseInterval:<init>(org.joda.time.ReadablePeriod-org.joda.time.ReadableInstant)),
		org.joda.time.Interval:<init>(java.lang.Object) to listOf(org.joda.time.base.BaseInterval:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.Interval:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.BaseInterval:<init>(java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.Interval:overlap(org.joda.time.ReadableInterval) to listOf(org.joda.time.DateTimeUtils:getReadableInterval(org.joda.time.ReadableInterval), org.joda.time.Interval:overlaps(org.joda.time.ReadableInterval), org.joda.time.Interval:getStartMillis(), org.joda.time.ReadableInterval:getStartMillis(), java.lang.Math:max(long-long), org.joda.time.Interval:getEndMillis(), org.joda.time.ReadableInterval:getEndMillis(), java.lang.Math:min(long-long), org.joda.time.Interval:getChronology(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:gap(org.joda.time.ReadableInterval) to listOf(org.joda.time.DateTimeUtils:getReadableInterval(org.joda.time.ReadableInterval), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.Interval:getStartMillis(), org.joda.time.Interval:getEndMillis(), org.joda.time.Interval:getChronology(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology), org.joda.time.Interval:getChronology(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:abuts(org.joda.time.ReadableInterval) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.Interval:getStartMillis(), org.joda.time.Interval:getEndMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.Interval:getStartMillis(), org.joda.time.Interval:getEndMillis(), org.joda.time.ReadableInterval:getStartMillis()),
		org.joda.time.Interval:withChronology(org.joda.time.Chronology) to listOf(org.joda.time.Interval:getChronology(), org.joda.time.Interval:getStartMillis(), org.joda.time.Interval:getEndMillis(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:withStartMillis(long) to listOf(org.joda.time.Interval:getStartMillis(), org.joda.time.Interval:getEndMillis(), org.joda.time.Interval:getChronology(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:withStart(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.Interval:withStartMillis(long)),
		org.joda.time.Interval:withEndMillis(long) to listOf(org.joda.time.Interval:getEndMillis(), org.joda.time.Interval:getStartMillis(), org.joda.time.Interval:getChronology(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:withEnd(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.Interval:withEndMillis(long)),
		org.joda.time.Interval:withDurationAfterStart(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.Interval:toDurationMillis(), org.joda.time.Interval:getChronology(), org.joda.time.Interval:getStartMillis(), org.joda.time.Chronology:add(long-long-int), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:withDurationBeforeEnd(org.joda.time.ReadableDuration) to listOf(org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.Interval:toDurationMillis(), org.joda.time.Interval:getChronology(), org.joda.time.Interval:getEndMillis(), org.joda.time.Chronology:add(long-long-int), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:withPeriodAfterStart(org.joda.time.ReadablePeriod) to listOf(org.joda.time.Interval:withDurationAfterStart(org.joda.time.ReadableDuration), org.joda.time.Interval:getChronology(), org.joda.time.Interval:getStartMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.Interval:withPeriodBeforeEnd(org.joda.time.ReadablePeriod) to listOf(org.joda.time.Interval:withDurationBeforeEnd(org.joda.time.ReadableDuration), org.joda.time.Interval:getChronology(), org.joda.time.Interval:getEndMillis(), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.MonthDay$Property:<init>(org.joda.time.MonthDay-int) to listOf(org.joda.time.field.AbstractPartialFieldProperty:<init>()),
		org.joda.time.MonthDay$Property:getField() to listOf(org.joda.time.MonthDay:getField(int)),
		org.joda.time.MonthDay$Property:get() to listOf(org.joda.time.MonthDay:getValue(int)),
		org.joda.time.MonthDay$Property:addToCopy(int) to listOf(org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay$Property:getField(), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay$Property:getField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay$Property:setCopy(int) to listOf(org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay$Property:setCopy(java.lang.String) to listOf(org.joda.time.MonthDay$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.Partial$Property:<init>(org.joda.time.Partial-int) to listOf(org.joda.time.field.AbstractPartialFieldProperty:<init>()),
		org.joda.time.Partial$Property:getField() to listOf(org.joda.time.Partial:getField(int)),
		org.joda.time.Partial$Property:get() to listOf(org.joda.time.Partial:getValue(int)),
		org.joda.time.Partial$Property:addToCopy(int) to listOf(org.joda.time.Partial:getValues(), org.joda.time.Partial$Property:getField(), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.Partial:getValues(), org.joda.time.Partial$Property:getField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial$Property:setCopy(int) to listOf(org.joda.time.Partial:getValues(), org.joda.time.Partial$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.Partial:getValues(), org.joda.time.Partial$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial$Property:setCopy(java.lang.String) to listOf(org.joda.time.Partial$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.Partial$Property:withMaximumValue() to listOf(org.joda.time.Partial$Property:getMaximumValue(), org.joda.time.Partial$Property:setCopy(int)),
		org.joda.time.Partial$Property:withMinimumValue() to listOf(org.joda.time.Partial$Property:getMinimumValue(), org.joda.time.Partial$Property:setCopy(int)),
		org.joda.time.Partial:<init>() to listOf(org.joda.time.Partial:<init>(org.joda.time.Chronology)),
		org.joda.time.Partial:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC()),
		org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType-int-org.joda.time.Chronology)),
		org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType-int-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType[]-int[]) to listOf(org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType[]-int[]-org.joda.time.Chronology)),
		org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType[]-int[]-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPartial:<init>(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeFieldType:getDurationType(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:isSupported(), org.joda.time.DurationField:isSupported(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:compareTo(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.Object:equals(java.lang.Object), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.DateTimeFieldType:getRangeDurationType(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:compareTo(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:compareTo(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:isSupported(), org.joda.time.DurationField:getType(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeFieldType[]:clone(), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[]), int[]:clone()),
		org.joda.time.Partial:<init>(org.joda.time.ReadablePartial) to listOf(org.joda.time.base.AbstractPartial:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.ReadablePartial:getValue(int)),
		org.joda.time.Partial:<init>(org.joda.time.Partial-int[]) to listOf(org.joda.time.base.AbstractPartial:<init>()),
		org.joda.time.Partial:<init>(org.joda.time.Chronology-org.joda.time.DateTimeFieldType[]-int[]) to listOf(org.joda.time.base.AbstractPartial:<init>()),
		org.joda.time.Partial:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.Partial:getFieldTypes() to listOf(org.joda.time.DateTimeFieldType[]:clone()),
		org.joda.time.Partial:getValues() to listOf(int[]:clone()),
		org.joda.time.Partial:withChronologyRetainFields(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Partial:getChronology(), org.joda.time.Partial:<init>(org.joda.time.Chronology-org.joda.time.DateTimeFieldType[]-int[]), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.Partial:with(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.Partial:indexOf(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:getDurationType(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:isSupported(), org.joda.time.DateTimeFieldType:getDurationType(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:isSupported(), org.joda.time.DurationField:compareTo(java.lang.Object), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeFieldType:getRangeDurationType(), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:compareTo(java.lang.Object), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), org.joda.time.Partial:<init>(org.joda.time.DateTimeFieldType[]-int[]-org.joda.time.Chronology), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[]), org.joda.time.Partial:getValue(int), org.joda.time.Partial:getValues(), org.joda.time.Partial:getField(int), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial:without(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.Partial:indexOf(org.joda.time.DateTimeFieldType), org.joda.time.Partial:size(), org.joda.time.Partial:size(), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int), org.joda.time.Partial:<init>(org.joda.time.Chronology-org.joda.time.DateTimeFieldType[]-int[]), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.Partial:withField(org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.Partial:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.Partial:getValue(int), org.joda.time.Partial:getValues(), org.joda.time.Partial:getField(int), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.Partial:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.Partial:getValues(), org.joda.time.Partial:getField(int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial:withFieldAddWrapped(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.Partial:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.Partial:getValues(), org.joda.time.Partial:getField(int), org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.Partial:getValues(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.Partial:indexOf(org.joda.time.DurationFieldType), org.joda.time.Partial:getField(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.Partial:<init>(org.joda.time.Partial-int[])),
		org.joda.time.Partial:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.Partial:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Partial:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.Partial:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Partial:property(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.Partial:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.Partial$Property:<init>(org.joda.time.Partial-int)),
		org.joda.time.Partial:isMatch(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:get(long)),
		org.joda.time.Partial:isMatch(org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType)),
		org.joda.time.Partial:getFormatter() to listOf(org.joda.time.Partial:size(), java.util.Arrays:asList(java.lang.Object[]), java.util.ArrayList:<init>(java.util.Collection), org.joda.time.format.ISODateTimeFormat:forFields(java.util.Collection-boolean-boolean), java.util.List:size()),
		org.joda.time.Partial:toString() to listOf(org.joda.time.Partial:getFormatter(), org.joda.time.Partial:toStringList(), org.joda.time.Partial:toStringList(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.Partial:toStringList() to listOf(org.joda.time.Partial:size(), java.lang.StringBuilder:<init>(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(char), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.Partial:toString(java.lang.String) to listOf(org.joda.time.Partial:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.Partial:toString(java.lang.String-java.util.Locale) to listOf(org.joda.time.Partial:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.tz.CachedDateTimeZone$Info:<init>(org.joda.time.DateTimeZone-long) to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(long) to listOf(org.joda.time.DateTimeZone:getNameKey(long), org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(long)),
		org.joda.time.tz.CachedDateTimeZone$Info:getOffset(long) to listOf(org.joda.time.DateTimeZone:getOffset(long), org.joda.time.tz.CachedDateTimeZone$Info:getOffset(long)),
		org.joda.time.tz.CachedDateTimeZone$Info:getStandardOffset(long) to listOf(org.joda.time.DateTimeZone:getStandardOffset(long), org.joda.time.tz.CachedDateTimeZone$Info:getStandardOffset(long)),
		org.joda.time.tz.CachedDateTimeZone:forZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.tz.CachedDateTimeZone:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.tz.CachedDateTimeZone:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getID(), org.joda.time.DateTimeZone:<init>(java.lang.String)),
		org.joda.time.tz.CachedDateTimeZone:getNameKey(long) to listOf(org.joda.time.tz.CachedDateTimeZone:getInfo(long), org.joda.time.tz.CachedDateTimeZone$Info:getNameKey(long)),
		org.joda.time.tz.CachedDateTimeZone:getOffset(long) to listOf(org.joda.time.tz.CachedDateTimeZone:getInfo(long), org.joda.time.tz.CachedDateTimeZone$Info:getOffset(long)),
		org.joda.time.tz.CachedDateTimeZone:getStandardOffset(long) to listOf(org.joda.time.tz.CachedDateTimeZone:getInfo(long), org.joda.time.tz.CachedDateTimeZone$Info:getStandardOffset(long)),
		org.joda.time.tz.CachedDateTimeZone:isFixed() to listOf(org.joda.time.DateTimeZone:isFixed()),
		org.joda.time.tz.CachedDateTimeZone:nextTransition(long) to listOf(org.joda.time.DateTimeZone:nextTransition(long)),
		org.joda.time.tz.CachedDateTimeZone:previousTransition(long) to listOf(org.joda.time.DateTimeZone:previousTransition(long)),
		org.joda.time.tz.CachedDateTimeZone:hashCode() to listOf(org.joda.time.DateTimeZone:hashCode()),
		org.joda.time.tz.CachedDateTimeZone:equals(java.lang.Object) to listOf(org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.tz.CachedDateTimeZone:getInfo(long) to listOf(org.joda.time.tz.CachedDateTimeZone:createInfo(long)),
		org.joda.time.tz.CachedDateTimeZone:createInfo(long) to listOf(org.joda.time.tz.CachedDateTimeZone$Info:<init>(org.joda.time.DateTimeZone-long), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.tz.CachedDateTimeZone$Info:<init>(org.joda.time.DateTimeZone-long)),
		org.joda.time.tz.CachedDateTimeZone:<clinit>() to listOf(java.lang.Integer:getInteger(java.lang.String), java.lang.Integer:intValue()),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:readFrom(java.io.DataInput-java.lang.String) to listOf(java.io.DataInput:readUnsignedShort(), java.io.DataInput:readUTF(), java.io.DataInput:readInt(), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedShort(), java.io.IOException:<init>(java.lang.String), java.io.DataInput:readBoolean(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:readFrom(java.io.DataInput-java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(java.lang.String-long[]-int[]-int[]-java.lang.String[]-org.joda.time.tz.DateTimeZoneBuilder$DSTZone)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:create(java.lang.String-boolean-java.util.ArrayList-org.joda.time.tz.DateTimeZoneBuilder$DSTZone) to listOf(java.util.ArrayList:size(), java.lang.IllegalArgumentException:<init>(), java.util.ArrayList:get(int), org.joda.time.tz.DateTimeZoneBuilder$Transition:isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$Transition:getMillis(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getWallOffset(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getStandardOffset(), org.joda.time.tz.DateTimeZoneBuilder$Transition:getNameKey(), java.text.DateFormatSymbols:<init>(java.util.Locale), java.text.DateFormatSymbols:getZoneStrings(), java.lang.String:equals(java.lang.Object), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.PeriodType:yearMonthDay(), org.joda.time.Period:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology), java.lang.String:equals(java.lang.Object), org.joda.time.Period:getYears(), org.joda.time.Period:getMonths(), org.joda.time.Period:getMonths(), java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), org.joda.time.tz.ZoneInfoLogger:verbose(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.String:intern(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.String:intern(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey(), java.lang.String:equals(java.lang.Object), org.joda.time.tz.ZoneInfoLogger:verbose(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis(), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getID(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:renameAppend(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(java.lang.String-int-org.joda.time.tz.DateTimeZoneBuilder$Recurrence-org.joda.time.tz.DateTimeZoneBuilder$Recurrence), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getID(), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:renameAppend(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:<init>(java.lang.String-int-org.joda.time.tz.DateTimeZoneBuilder$Recurrence-org.joda.time.tz.DateTimeZoneBuilder$Recurrence), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(java.lang.String-long[]-int[]-int[]-java.lang.String[]-org.joda.time.tz.DateTimeZoneBuilder$DSTZone)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:<init>(java.lang.String-long[]-int[]-int[]-java.lang.String[]-org.joda.time.tz.DateTimeZoneBuilder$DSTZone) to listOf(org.joda.time.DateTimeZone:<init>(java.lang.String)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getNameKey(long) to listOf(java.util.Arrays:binarySearch(long[]-long), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getNameKey(long)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getOffset(long) to listOf(java.util.Arrays:binarySearch(long[]-long), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getOffset(long)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getStandardOffset(long) to listOf(java.util.Arrays:binarySearch(long[]-long), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:getStandardOffset(long)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:nextTransition(long) to listOf(java.util.Arrays:binarySearch(long[]-long), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:nextTransition(long)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:previousTransition(long) to listOf(java.util.Arrays:binarySearch(long[]-long), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:previousTransition(long)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:equals(java.lang.Object) to listOf(org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getID(), org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:getID(), java.lang.String:equals(java.lang.Object), java.util.Arrays:equals(long[]-long[]), java.util.Arrays:equals(java.lang.Object[]-java.lang.Object[]), java.util.Arrays:equals(int[]-int[]), java.util.Arrays:equals(int[]-int[]), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:equals(java.lang.Object)),
		org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone:writeTo(java.io.DataOutput) to listOf(java.util.HashSet:<init>(), java.util.Set:add(java.lang.Object), java.util.Set:size(), java.lang.UnsupportedOperationException:<init>(java.lang.String), java.util.Set:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), java.io.DataOutput:writeShort(int), java.io.DataOutput:writeUTF(java.lang.String), java.io.DataOutput:writeInt(int), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long), java.lang.String:equals(java.lang.Object), java.io.DataOutput:writeByte(int), java.io.DataOutput:writeShort(int), java.io.DataOutput:writeBoolean(boolean), org.joda.time.tz.DateTimeZoneBuilder$DSTZone:writeTo(java.io.DataOutput)),
		org.joda.time.tz.ZoneInfoLogger:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.ZoneInfoLogger:verbose() to listOf(java.lang.ThreadLocal:get(), java.lang.Boolean:booleanValue()),
		org.joda.time.tz.ZoneInfoLogger:set(boolean) to listOf(java.lang.Boolean:valueOf(boolean), java.lang.ThreadLocal:set(java.lang.Object)),
		org.joda.time.tz.ZoneInfoLogger:<clinit>() to listOf(org.joda.time.tz.ZoneInfoLogger$1:<init>()),
		org.joda.time.YearMonthDay$Property:<init>(org.joda.time.YearMonthDay-int) to listOf(org.joda.time.field.AbstractPartialFieldProperty:<init>()),
		org.joda.time.YearMonthDay$Property:getField() to listOf(org.joda.time.YearMonthDay:getField(int)),
		org.joda.time.YearMonthDay$Property:get() to listOf(org.joda.time.YearMonthDay:getValue(int)),
		org.joda.time.YearMonthDay$Property:addToCopy(int) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay$Property:getField(), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay$Property:getField(), org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay$Property:setCopy(int) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay$Property:getField(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay$Property:setCopy(java.lang.String) to listOf(org.joda.time.YearMonthDay$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.YearMonthDay$Property:withMaximumValue() to listOf(org.joda.time.YearMonthDay$Property:getMaximumValue(), org.joda.time.YearMonthDay$Property:setCopy(int)),
		org.joda.time.YearMonthDay$Property:withMinimumValue() to listOf(org.joda.time.YearMonthDay$Property:getMinimumValue(), org.joda.time.YearMonthDay$Property:setCopy(int)),
		org.joda.time.base.AbstractInterval:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.base.AbstractInterval:checkInterval(long-long) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.base.AbstractInterval:getStart() to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInterval:getEnd() to listOf(org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInterval:contains(long) to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis()),
		org.joda.time.base.AbstractInterval:containsNow() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.AbstractInterval:contains(long)),
		org.joda.time.base.AbstractInterval:contains(org.joda.time.ReadableInstant) to listOf(org.joda.time.base.AbstractInterval:containsNow(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.base.AbstractInterval:contains(long)),
		org.joda.time.base.AbstractInterval:contains(org.joda.time.ReadableInterval) to listOf(org.joda.time.base.AbstractInterval:containsNow(), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis()),
		org.joda.time.base.AbstractInterval:overlaps(org.joda.time.ReadableInterval) to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.ReadableInterval:getEndMillis()),
		org.joda.time.base.AbstractInterval:isEqual(org.joda.time.ReadableInterval) to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.ReadableInterval:getEndMillis()),
		org.joda.time.base.AbstractInterval:isBefore(long) to listOf(org.joda.time.base.AbstractInterval:getEndMillis()),
		org.joda.time.base.AbstractInterval:isBeforeNow() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.AbstractInterval:isBefore(long)),
		org.joda.time.base.AbstractInterval:isBefore(org.joda.time.ReadableInstant) to listOf(org.joda.time.base.AbstractInterval:isBeforeNow(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.base.AbstractInterval:isBefore(long)),
		org.joda.time.base.AbstractInterval:isBefore(org.joda.time.ReadableInterval) to listOf(org.joda.time.base.AbstractInterval:isBeforeNow(), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.base.AbstractInterval:isBefore(long)),
		org.joda.time.base.AbstractInterval:isAfter(long) to listOf(org.joda.time.base.AbstractInterval:getStartMillis()),
		org.joda.time.base.AbstractInterval:isAfterNow() to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.base.AbstractInterval:isAfter(long)),
		org.joda.time.base.AbstractInterval:isAfter(org.joda.time.ReadableInstant) to listOf(org.joda.time.base.AbstractInterval:isAfterNow(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.base.AbstractInterval:isAfter(long)),
		org.joda.time.base.AbstractInterval:isAfter(org.joda.time.ReadableInterval) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getStartMillis()),
		org.joda.time.base.AbstractInterval:toInterval() to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.Interval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInterval:toMutableInterval() to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.MutableInterval:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInterval:toDurationMillis() to listOf(org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.field.FieldUtils:safeSubtract(long-long)),
		org.joda.time.base.AbstractInterval:toDuration() to listOf(org.joda.time.base.AbstractInterval:toDurationMillis(), org.joda.time.Duration:<init>(long)),
		org.joda.time.base.AbstractInterval:toPeriod() to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.Period:<init>(long-long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInterval:toPeriod(org.joda.time.PeriodType) to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.Period:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.base.AbstractInterval:equals(java.lang.Object) to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.ReadableInterval:getChronology(), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object)),
		org.joda.time.base.AbstractInterval:hashCode() to listOf(org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.base.AbstractInterval:getChronology(), java.lang.Object:hashCode()),
		org.joda.time.base.AbstractInterval:toString() to listOf(org.joda.time.format.ISODateTimeFormat:dateTime(), org.joda.time.base.AbstractInterval:getChronology(), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology), java.lang.StringBuffer:<init>(int), org.joda.time.base.AbstractInterval:getStartMillis(), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-long), java.lang.StringBuffer:append(char), org.joda.time.base.AbstractInterval:getEndMillis(), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-long), java.lang.StringBuffer:toString()),
		org.joda.time.base.BasePeriod$1:<init>() to listOf(org.joda.time.base.AbstractPeriod:<init>()),
		org.joda.time.base.BasePeriod$1:getPeriodType() to listOf(org.joda.time.PeriodType:time()),
		org.joda.time.chrono.BasicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.chrono.BasicChronology:getZone() to listOf(org.joda.time.chrono.BasicChronology:getBase(), org.joda.time.Chronology:getZone()),
		org.joda.time.chrono.BasicChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.BasicChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.DateTimeFieldType:millisOfDay(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.chrono.BasicChronology:getDateTimeMillis0(int-int-int-int)),
		org.joda.time.chrono.BasicChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.BasicChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.DateTimeFieldType:millisOfSecond(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.chrono.BasicChronology:getDateTimeMillis0(int-int-int-int)),
		org.joda.time.chrono.BasicChronology:getDateTimeMillis0(int-int-int-int) to listOf(org.joda.time.chrono.BasicChronology:getDateMidnightMillis(int-int-int), org.joda.time.chrono.BasicChronology:getDateMidnightMillis(int-int-int)),
		org.joda.time.chrono.BasicChronology:equals(java.lang.Object) to listOf(java.lang.Object:getClass(), java.lang.Object:getClass(), org.joda.time.chrono.BasicChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.BasicChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.BasicChronology:getZone(), org.joda.time.chrono.BasicChronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.chrono.BasicChronology:hashCode() to listOf(java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.String:hashCode(), org.joda.time.chrono.BasicChronology:getZone(), org.joda.time.DateTimeZone:hashCode(), org.joda.time.chrono.BasicChronology:getMinimumDaysInFirstWeek()),
		org.joda.time.chrono.BasicChronology:toString() to listOf(java.lang.StringBuilder:<init>(int), java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.String:lastIndexOf(int), java.lang.String:substring(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), org.joda.time.chrono.BasicChronology:getZone(), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.BasicChronology:getMinimumDaysInFirstWeek(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.BasicChronology:getMinimumDaysInFirstWeek(), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.chrono.BasicChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.BasicYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.chrono.GJYearOfEraDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.chrono.BasicChronology), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-int), org.joda.time.DateTimeFieldType:centuryOfEra(), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeField:getDurationField(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField), org.joda.time.DateTimeFieldType:yearOfCentury(), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.chrono.GJEraDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.chrono.GJDayOfWeekDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.chrono.BasicDayOfMonthDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.chrono.BasicDayOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.chrono.GJMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.chrono.BasicWeekyearDateTimeField:<init>(org.joda.time.chrono.BasicChronology), org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:weekyearOfCentury(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:weekyearOfCentury(), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.chrono.BasicChronology:getDaysInYear(int) to listOf(org.joda.time.chrono.BasicChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicChronology:getWeeksInYear(int) to listOf(org.joda.time.chrono.BasicChronology:getFirstWeekOfYearMillis(int), org.joda.time.chrono.BasicChronology:getFirstWeekOfYearMillis(int)),
		org.joda.time.chrono.BasicChronology:getFirstWeekOfYearMillis(int) to listOf(org.joda.time.chrono.BasicChronology:getYearMillis(int), org.joda.time.chrono.BasicChronology:getDayOfWeek(long)),
		org.joda.time.chrono.BasicChronology:getYearMillis(int) to listOf(org.joda.time.chrono.BasicChronology:getYearInfo(int)),
		org.joda.time.chrono.BasicChronology:getYearMonthMillis(int-int) to listOf(org.joda.time.chrono.BasicChronology:getYearMillis(int), org.joda.time.chrono.BasicChronology:getTotalMillisByYearMonth(int-int)),
		org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(int-int-int) to listOf(org.joda.time.chrono.BasicChronology:getYearMillis(int), org.joda.time.chrono.BasicChronology:getTotalMillisByYearMonth(int-int)),
		org.joda.time.chrono.BasicChronology:getYear(long) to listOf(org.joda.time.chrono.BasicChronology:getAverageMillisPerYearDividedByTwo(), org.joda.time.chrono.BasicChronology:getApproxMillisAtEpochDividedByTwo(), org.joda.time.chrono.BasicChronology:getYearMillis(int), org.joda.time.chrono.BasicChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicChronology:getMonthOfYear(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int)),
		org.joda.time.chrono.BasicChronology:getDayOfMonth(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int)),
		org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int) to listOf(org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int)),
		org.joda.time.chrono.BasicChronology:getDayOfMonth(long-int-int) to listOf(org.joda.time.chrono.BasicChronology:getYearMillis(int), org.joda.time.chrono.BasicChronology:getTotalMillisByYearMonth(int-int)),
		org.joda.time.chrono.BasicChronology:getDayOfYear(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getDayOfYear(long-int)),
		org.joda.time.chrono.BasicChronology:getDayOfYear(long-int) to listOf(org.joda.time.chrono.BasicChronology:getYearMillis(int)),
		org.joda.time.chrono.BasicChronology:getWeekyear(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long-int), org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getYear(long)),
		org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long-int)),
		org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long-int) to listOf(org.joda.time.chrono.BasicChronology:getFirstWeekOfYearMillis(int), org.joda.time.chrono.BasicChronology:getWeeksInYear(int), org.joda.time.chrono.BasicChronology:getFirstWeekOfYearMillis(int)),
		org.joda.time.chrono.BasicChronology:getDaysInMonthMax(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMonthOfYear(long-int), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int)),
		org.joda.time.chrono.BasicChronology:getDaysInMonthMaxForSet(long-int) to listOf(org.joda.time.chrono.BasicChronology:getDaysInMonthMax(long)),
		org.joda.time.chrono.BasicChronology:getDateMidnightMillis(int-int-int) to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.chrono.BasicChronology:getMinYear(), org.joda.time.chrono.BasicChronology:getMaxYear(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.chrono.BasicChronology:getMaxMonth(int), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeFieldType-int-int-int), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.DateTimeFieldType:dayOfMonth(), java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), java.lang.Integer:valueOf(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), org.joda.time.IllegalFieldValueException:<init>(org.joda.time.DateTimeFieldType-java.lang.Number-java.lang.Number-java.lang.Number-java.lang.String), org.joda.time.chrono.BasicChronology:getYearMonthDayMillis(int-int-int), org.joda.time.chrono.BasicChronology:getMaxYear(), org.joda.time.chrono.BasicChronology:getMinYear()),
		org.joda.time.chrono.BasicChronology:getMaxMonth(int) to listOf(org.joda.time.chrono.BasicChronology:getMaxMonth()),
		org.joda.time.chrono.BasicChronology:getYearInfo(int) to listOf(org.joda.time.chrono.BasicChronology:calculateFirstDayOfYearMillis(int), org.joda.time.chrono.BasicChronology$YearInfo:<init>(int-long)),
		org.joda.time.chrono.BasicChronology:<clinit>() to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long), org.joda.time.DurationFieldType:minutes(), org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long), org.joda.time.DurationFieldType:hours(), org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long), org.joda.time.DurationFieldType:halfdays(), org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long), org.joda.time.DurationFieldType:days(), org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long), org.joda.time.DurationFieldType:weeks(), org.joda.time.field.PreciseDurationField:<init>(org.joda.time.DurationFieldType-long), org.joda.time.DateTimeFieldType:millisOfSecond(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:millisOfDay(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:secondOfDay(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:minuteOfDay(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:hourOfHalfday(), org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeFieldType:clockhourOfDay(), org.joda.time.field.ZeroIsMaxDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:clockhourOfHalfday(), org.joda.time.field.ZeroIsMaxDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), org.joda.time.chrono.BasicChronology$HalfdayField:<init>()),
		org.joda.time.chrono.BuddhistChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.BuddhistChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.BuddhistChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant), org.joda.time.chrono.BuddhistChronology:<init>(org.joda.time.Chronology-java.lang.Object), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.chrono.LimitChronology:getInstance(org.joda.time.Chronology-org.joda.time.ReadableDateTime-org.joda.time.ReadableDateTime), org.joda.time.chrono.BuddhistChronology:<init>(org.joda.time.Chronology-java.lang.Object), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.BuddhistChronology:<init>(org.joda.time.Chronology-java.lang.Object) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.BuddhistChronology:readResolve() to listOf(org.joda.time.chrono.BuddhistChronology:getBase(), org.joda.time.chrono.BuddhistChronology:getInstanceUTC(), org.joda.time.Chronology:getZone(), org.joda.time.chrono.BuddhistChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.BuddhistChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.BuddhistChronology:getZone(), org.joda.time.chrono.BuddhistChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.BuddhistChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.BuddhistChronology:getZone(), org.joda.time.chrono.BuddhistChronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.chrono.BuddhistChronology:hashCode() to listOf(java.lang.String:hashCode(), org.joda.time.chrono.BuddhistChronology:getZone(), org.joda.time.DateTimeZone:hashCode()),
		org.joda.time.chrono.BuddhistChronology:toString() to listOf(org.joda.time.chrono.BuddhistChronology:getZone(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.chrono.BuddhistChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.BuddhistChronology:getParam(), org.joda.time.DurationFieldType:eras(), org.joda.time.field.UnsupportedDurationField:getInstance(org.joda.time.DurationFieldType), org.joda.time.field.SkipUndoDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-int), org.joda.time.DateTimeFieldType:yearOfEra(), org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType), org.joda.time.field.SkipUndoDateTimeField:<init>(org.joda.time.Chronology-org.joda.time.DateTimeField), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-int), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-int), org.joda.time.DateTimeFieldType:centuryOfEra(), org.joda.time.field.DividedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeField:getDurationField(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.field.DividedDateTimeField), org.joda.time.DateTimeFieldType:yearOfCentury(), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:weekyearOfCentury(), org.joda.time.field.RemainderDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType-int), org.joda.time.DateTimeFieldType:weekyearOfCentury(), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int)),
		org.joda.time.chrono.BuddhistChronology:<clinit>() to listOf(org.joda.time.chrono.BasicSingleEraDateTimeField:<init>(java.lang.String), java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.BuddhistChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField) to listOf(org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.field.PreciseDurationDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getDayOfWeek(long)),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:getAsText(int-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:dayOfWeekValueToText(int)),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:getAsShortText(int-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:dayOfWeekValueToShortText(int)),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:convertText(java.lang.String-java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:dayOfWeekTextToValue(java.lang.String)),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:getRangeDurationField() to listOf(org.joda.time.chrono.BasicChronology:weeks()),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:getDayOfWeekMaxTextLength()),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.chrono.GJLocaleSymbols:forLocale(java.util.Locale), org.joda.time.chrono.GJLocaleSymbols:getDayOfWeekMaxShortTextLength()),
		org.joda.time.chrono.GJDayOfWeekDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:dayOfWeek()),
		org.joda.time.chrono.IslamicChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.chrono.IslamicChronology$LeapYearPatternType)),
		org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.chrono.IslamicChronology$LeapYearPatternType)),
		org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.chrono.IslamicChronology$LeapYearPatternType) to listOf(org.joda.time.DateTimeZone:getDefault(), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object), org.joda.time.chrono.IslamicChronology:<init>(org.joda.time.Chronology-java.lang.Object-org.joda.time.chrono.IslamicChronology$LeapYearPatternType), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology), org.joda.time.chrono.LimitChronology:getInstance(org.joda.time.Chronology-org.joda.time.ReadableDateTime-org.joda.time.ReadableDateTime), org.joda.time.chrono.IslamicChronology:<init>(org.joda.time.Chronology-java.lang.Object-org.joda.time.chrono.IslamicChronology$LeapYearPatternType), org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.chrono.IslamicChronology$LeapYearPatternType), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.chrono.IslamicChronology:<init>(org.joda.time.Chronology-java.lang.Object-org.joda.time.chrono.IslamicChronology$LeapYearPatternType)),
		org.joda.time.chrono.IslamicChronology:<init>(org.joda.time.Chronology-java.lang.Object-org.joda.time.chrono.IslamicChronology$LeapYearPatternType) to listOf(org.joda.time.chrono.BasicChronology:<init>(org.joda.time.Chronology-java.lang.Object-int)),
		org.joda.time.chrono.IslamicChronology:readResolve() to listOf(org.joda.time.chrono.IslamicChronology:getBase(), org.joda.time.chrono.IslamicChronology:getInstanceUTC(), org.joda.time.Chronology:getZone(), org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.IslamicChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.IslamicChronology:getZone(), org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.IslamicChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.IslamicChronology:getLeapYearPatternType(), org.joda.time.chrono.IslamicChronology:getLeapYearPatternType(), org.joda.time.chrono.BasicChronology:equals(java.lang.Object)),
		org.joda.time.chrono.IslamicChronology:hashCode() to listOf(org.joda.time.chrono.BasicChronology:hashCode(), org.joda.time.chrono.IslamicChronology:getLeapYearPatternType(), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:hashCode()),
		org.joda.time.chrono.IslamicChronology:getYear(long) to listOf(org.joda.time.chrono.IslamicChronology:isLeapYear(int), org.joda.time.chrono.IslamicChronology:isLeapYear(int)),
		org.joda.time.chrono.IslamicChronology:setYear(long-int) to listOf(org.joda.time.chrono.IslamicChronology:getYear(long), org.joda.time.chrono.IslamicChronology:getDayOfYear(long-int), org.joda.time.chrono.IslamicChronology:getMillisOfDay(long), org.joda.time.chrono.IslamicChronology:isLeapYear(int), org.joda.time.chrono.IslamicChronology:getYearMonthDayMillis(int-int-int)),
		org.joda.time.chrono.IslamicChronology:getYearDifference(long-long) to listOf(org.joda.time.chrono.IslamicChronology:getYear(long), org.joda.time.chrono.IslamicChronology:getYear(long), org.joda.time.chrono.IslamicChronology:getYearMillis(int), org.joda.time.chrono.IslamicChronology:getYearMillis(int)),
		org.joda.time.chrono.IslamicChronology:getDayOfMonth(long) to listOf(org.joda.time.chrono.IslamicChronology:getDayOfYear(long)),
		org.joda.time.chrono.IslamicChronology:isLeapYear(int) to listOf(org.joda.time.chrono.IslamicChronology$LeapYearPatternType:isLeapYear(int)),
		org.joda.time.chrono.IslamicChronology:getDaysInYear(int) to listOf(org.joda.time.chrono.IslamicChronology:isLeapYear(int)),
		org.joda.time.chrono.IslamicChronology:getDaysInYearMonth(int-int) to listOf(org.joda.time.chrono.IslamicChronology:isLeapYear(int)),
		org.joda.time.chrono.IslamicChronology:getMonthOfYear(long-int) to listOf(org.joda.time.chrono.IslamicChronology:getYearMillis(int)),
		org.joda.time.chrono.IslamicChronology:calculateFirstDayOfYearMillis(int) to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.ArithmeticException:<init>(java.lang.String), org.joda.time.chrono.IslamicChronology:isLeapYear(int)),
		org.joda.time.chrono.IslamicChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.IslamicChronology:getBase(), org.joda.time.chrono.BasicChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields), org.joda.time.chrono.BasicMonthOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-int), org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.chrono.IslamicChronology:toString() to listOf(org.joda.time.chrono.BasicChronology:toString()),
		org.joda.time.chrono.IslamicChronology:getMinimumDaysInFirstWeek() to listOf(org.joda.time.chrono.BasicChronology:getMinimumDaysInFirstWeek()),
		org.joda.time.chrono.IslamicChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.BasicChronology:getDateTimeMillis(int-int-int-int-int-int-int)),
		org.joda.time.chrono.IslamicChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.BasicChronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.chrono.IslamicChronology:getZone() to listOf(org.joda.time.chrono.BasicChronology:getZone()),
		org.joda.time.chrono.IslamicChronology:<clinit>() to listOf(org.joda.time.chrono.BasicSingleEraDateTimeField:<init>(java.lang.String), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:<init>(int-int), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:<init>(int-int), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:<init>(int-int), org.joda.time.chrono.IslamicChronology$LeapYearPatternType:<init>(int-int), java.util.concurrent.ConcurrentHashMap:<init>(), org.joda.time.chrono.IslamicChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.LimitChronology:getInstance(org.joda.time.Chronology-org.joda.time.ReadableDateTime-org.joda.time.ReadableDateTime) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadableDateTime:toDateTime(), org.joda.time.ReadableDateTime:toDateTime(), org.joda.time.ReadableDateTime:isBefore(org.joda.time.ReadableInstant), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.LimitChronology:<init>(org.joda.time.Chronology-org.joda.time.DateTime-org.joda.time.DateTime)),
		org.joda.time.chrono.LimitChronology:<init>(org.joda.time.Chronology-org.joda.time.DateTime-org.joda.time.DateTime) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.LimitChronology:withUTC() to listOf(org.joda.time.chrono.LimitChronology:withZone(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.LimitChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.LimitChronology:getZone(), org.joda.time.DateTime:toMutableDateTime(), org.joda.time.MutableDateTime:setZoneRetainFields(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:toDateTime(), org.joda.time.DateTime:toMutableDateTime(), org.joda.time.MutableDateTime:setZoneRetainFields(org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:toDateTime(), org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.chrono.LimitChronology:getInstance(org.joda.time.Chronology-org.joda.time.ReadableDateTime-org.joda.time.ReadableDateTime)),
		org.joda.time.chrono.LimitChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology:getDateTimeMillis(long-int-int-int-int) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(long-int-int-int-int), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(java.util.HashMap:<init>(), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap)),
		org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap) to listOf(org.joda.time.DurationField:isSupported(), java.util.HashMap:containsKey(java.lang.Object), java.util.HashMap:get(java.lang.Object), org.joda.time.chrono.LimitChronology$LimitDurationField:<init>(org.joda.time.chrono.LimitChronology-org.joda.time.DurationField), java.util.HashMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DateTimeField-java.util.HashMap) to listOf(org.joda.time.DateTimeField:isSupported(), java.util.HashMap:containsKey(java.lang.Object), java.util.HashMap:get(java.lang.Object), org.joda.time.DateTimeField:getDurationField(), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.DateTimeField:getLeapDurationField(), org.joda.time.chrono.LimitChronology:convertField(org.joda.time.DurationField-java.util.HashMap), org.joda.time.chrono.LimitChronology$LimitDateTimeField:<init>(org.joda.time.chrono.LimitChronology-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-org.joda.time.DurationField), java.util.HashMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String) to listOf(org.joda.time.DateTime:getMillis(), org.joda.time.chrono.LimitChronology$LimitException:<init>(org.joda.time.chrono.LimitChronology-java.lang.String-boolean), org.joda.time.DateTime:getMillis(), org.joda.time.chrono.LimitChronology$LimitException:<init>(org.joda.time.chrono.LimitChronology-java.lang.String-boolean)),
		org.joda.time.chrono.LimitChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.chrono.LimitChronology:getBase(), java.lang.Object:equals(java.lang.Object), org.joda.time.chrono.LimitChronology:getLowerLimit(), org.joda.time.chrono.LimitChronology:getLowerLimit(), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.LimitChronology:hashCode() to listOf(org.joda.time.chrono.LimitChronology:getLowerLimit(), org.joda.time.chrono.LimitChronology:getLowerLimit(), org.joda.time.DateTime:hashCode(), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.DateTime:hashCode(), org.joda.time.chrono.LimitChronology:getBase(), java.lang.Object:hashCode()),
		org.joda.time.chrono.LimitChronology:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.Chronology:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.LimitChronology:getLowerLimit(), org.joda.time.chrono.LimitChronology:getLowerLimit(), org.joda.time.DateTime:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.DateTime:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.convert.LongConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.LongConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology) to listOf(java.lang.Long:longValue()),
		org.joda.time.convert.LongConverter:getDurationMillis(java.lang.Object) to listOf(java.lang.Long:longValue()),
		org.joda.time.convert.LongConverter:<clinit>() to listOf(org.joda.time.convert.LongConverter:<init>()),
		org.joda.time.convert.ReadablePeriodConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.ReadablePeriodConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadWritablePeriod:setPeriod(org.joda.time.ReadablePeriod)),
		org.joda.time.convert.ReadablePeriodConverter:getPeriodType(java.lang.Object) to listOf(org.joda.time.ReadablePeriod:getPeriodType()),
		org.joda.time.convert.ReadablePeriodConverter:<clinit>() to listOf(org.joda.time.convert.ReadablePeriodConverter:<init>()),
		org.joda.time.DateTimeField:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeField:setExtended(long-int) to listOf(org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.DateTimeZone$LazyInit$1:<init>() to listOf(org.joda.time.chrono.BaseChronology:<init>()),
		org.joda.time.DateTimeZone$LazyInit$1:toString() to listOf(java.lang.Object:getClass(), java.lang.Class:getName()),
		org.joda.time.DurationFieldType:<init>(java.lang.String) to listOf(java.lang.Object:<init>()),
		org.joda.time.DurationFieldType:isSupported(org.joda.time.Chronology) to listOf(org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:isSupported()),
		org.joda.time.DurationFieldType:toString() to listOf(org.joda.time.DurationFieldType:getName()),
		org.joda.time.DurationFieldType:<clinit>() to listOf(org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte), org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte)),
		org.joda.time.field.DelegatedDurationField:<init>(org.joda.time.DurationField) to listOf(org.joda.time.field.DelegatedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType)),
		org.joda.time.field.DelegatedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType) to listOf(org.joda.time.DurationField:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:getType()),
		org.joda.time.field.DelegatedDurationField:getName() to listOf(org.joda.time.DurationFieldType:getName()),
		org.joda.time.field.DelegatedDurationField:isSupported() to listOf(org.joda.time.DurationField:isSupported()),
		org.joda.time.field.DelegatedDurationField:isPrecise() to listOf(org.joda.time.DurationField:isPrecise()),
		org.joda.time.field.DelegatedDurationField:getValue(long) to listOf(org.joda.time.DurationField:getValue(long)),
		org.joda.time.field.DelegatedDurationField:getValueAsLong(long) to listOf(org.joda.time.DurationField:getValueAsLong(long)),
		org.joda.time.field.DelegatedDurationField:getValue(long-long) to listOf(org.joda.time.DurationField:getValue(long-long)),
		org.joda.time.field.DelegatedDurationField:getValueAsLong(long-long) to listOf(org.joda.time.DurationField:getValueAsLong(long-long)),
		org.joda.time.field.DelegatedDurationField:getMillis(int) to listOf(org.joda.time.DurationField:getMillis(int)),
		org.joda.time.field.DelegatedDurationField:getMillis(long) to listOf(org.joda.time.DurationField:getMillis(long)),
		org.joda.time.field.DelegatedDurationField:getMillis(int-long) to listOf(org.joda.time.DurationField:getMillis(int-long)),
		org.joda.time.field.DelegatedDurationField:getMillis(long-long) to listOf(org.joda.time.DurationField:getMillis(long-long)),
		org.joda.time.field.DelegatedDurationField:add(long-int) to listOf(org.joda.time.DurationField:add(long-int)),
		org.joda.time.field.DelegatedDurationField:add(long-long) to listOf(org.joda.time.DurationField:add(long-long)),
		org.joda.time.field.DelegatedDurationField:getDifference(long-long) to listOf(org.joda.time.DurationField:getDifference(long-long)),
		org.joda.time.field.DelegatedDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.DurationField:getDifferenceAsLong(long-long)),
		org.joda.time.field.DelegatedDurationField:getUnitMillis() to listOf(org.joda.time.DurationField:getUnitMillis()),
		org.joda.time.field.DelegatedDurationField:compareTo(org.joda.time.DurationField) to listOf(org.joda.time.DurationField:compareTo(java.lang.Object)),
		org.joda.time.field.DelegatedDurationField:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object)),
		org.joda.time.field.DelegatedDurationField:hashCode() to listOf(java.lang.Object:hashCode(), java.lang.Object:hashCode()),
		org.joda.time.field.DelegatedDurationField:toString() to listOf(org.joda.time.DurationField:toString(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.field.DelegatedDurationField:compareTo(java.lang.Object) to listOf(org.joda.time.field.DelegatedDurationField:compareTo(org.joda.time.DurationField)),
		org.joda.time.field.PreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField-org.joda.time.DurationField) to listOf(org.joda.time.field.PreciseDurationDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField), org.joda.time.DurationField:isPrecise(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:getUnitMillis(), org.joda.time.field.PreciseDateTimeField:getUnitMillis(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.PreciseDateTimeField:get(long) to listOf(org.joda.time.field.PreciseDateTimeField:getUnitMillis(), org.joda.time.field.PreciseDateTimeField:getUnitMillis()),
		org.joda.time.field.PreciseDateTimeField:addWrapField(long-int) to listOf(org.joda.time.field.PreciseDateTimeField:get(long), org.joda.time.field.PreciseDateTimeField:getMinimumValue(), org.joda.time.field.PreciseDateTimeField:getMaximumValue(), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.field.PreciseDateTimeField:getUnitMillis()),
		org.joda.time.field.PreciseDateTimeField:set(long-int) to listOf(org.joda.time.field.PreciseDateTimeField:getMinimumValue(), org.joda.time.field.PreciseDateTimeField:getMaximumValue(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.PreciseDateTimeField:get(long)),
		org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField) to listOf(java.util.HashMap:<init>(int), java.util.HashMap:get(java.lang.Object), org.joda.time.field.UnsupportedDateTimeField:getDurationField(), org.joda.time.field.UnsupportedDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField), java.util.HashMap:put(java.lang.Object-java.lang.Object)),
		org.joda.time.field.UnsupportedDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField) to listOf(org.joda.time.DateTimeField:<init>(), java.lang.IllegalArgumentException:<init>()),
		org.joda.time.field.UnsupportedDateTimeField:getName() to listOf(org.joda.time.DateTimeFieldType:getName()),
		org.joda.time.field.UnsupportedDateTimeField:get(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsText(long-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsText(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsText(int-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsShortText(long-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsShortText(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getAsShortText(int-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:add(long-int) to listOf(org.joda.time.field.UnsupportedDateTimeField:getDurationField(), org.joda.time.DurationField:add(long-int)),
		org.joda.time.field.UnsupportedDateTimeField:add(long-long) to listOf(org.joda.time.field.UnsupportedDateTimeField:getDurationField(), org.joda.time.DurationField:add(long-long)),
		org.joda.time.field.UnsupportedDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:addWrapField(long-int) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getDifference(long-long) to listOf(org.joda.time.field.UnsupportedDateTimeField:getDurationField(), org.joda.time.DurationField:getDifference(long-long)),
		org.joda.time.field.UnsupportedDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.UnsupportedDateTimeField:getDurationField(), org.joda.time.DurationField:getDifferenceAsLong(long-long)),
		org.joda.time.field.UnsupportedDateTimeField:set(long-int) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:set(long-java.lang.String) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:isLeap(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getLeapAmount(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMinimumValue() to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMinimumValue(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMaximumValue() to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMaximumValue(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:roundFloor(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:roundCeiling(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:roundHalfEven(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:remainder(long) to listOf(org.joda.time.field.UnsupportedDateTimeField:unsupported()),
		org.joda.time.field.UnsupportedDateTimeField:readResolve() to listOf(org.joda.time.field.UnsupportedDateTimeField:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.field.UnsupportedDateTimeField:unsupported() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder$Composite:<init>(java.util.List) to listOf(java.lang.Object:<init>(), java.util.ArrayList:<init>(), java.util.ArrayList:<init>(), org.joda.time.format.DateTimeFormatterBuilder$Composite:decompose(java.util.List-java.util.List-java.util.List), java.util.List:contains(java.lang.Object), java.util.List:isEmpty(), java.util.List:size(), java.util.List:get(int), org.joda.time.format.InternalPrinter:estimatePrintedLength(), java.util.List:contains(java.lang.Object), java.util.List:isEmpty(), java.util.List:size(), java.util.List:get(int), org.joda.time.format.InternalParser:estimateParsedLength()),
		org.joda.time.format.DateTimeFormatterBuilder$Composite:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(java.lang.UnsupportedOperationException:<init>(), java.util.Locale:getDefault(), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale)),
		org.joda.time.format.DateTimeFormatterBuilder$Composite:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(java.lang.UnsupportedOperationException:<init>(), java.util.Locale:getDefault(), org.joda.time.format.InternalPrinter:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.format.DateTimeFormatterBuilder$Composite:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(java.lang.UnsupportedOperationException:<init>(), org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int)),
		org.joda.time.format.DateTimeFormatterBuilder$Composite:decompose(java.util.List-java.util.List-java.util.List) to listOf(java.util.List:size(), java.util.List:get(int), org.joda.time.format.DateTimeFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]), java.util.List:add(java.lang.Object), java.util.List:get(int), org.joda.time.format.DateTimeFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]), java.util.List:add(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder$Composite:addArrayToList(java.util.List-java.lang.Object[]) to listOf(java.util.List:add(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:<init>(org.joda.time.DateTimeFieldType-boolean) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TextField:print(long-org.joda.time.Chronology-java.util.Locale), java.lang.Appendable:append(java.lang.CharSequence), java.lang.Appendable:append(char)),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TextField:print(org.joda.time.ReadablePartial-java.util.Locale), java.lang.Appendable:append(java.lang.CharSequence), java.lang.Appendable:append(char)),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:print(long-org.joda.time.Chronology-java.util.Locale) to listOf(org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale), org.joda.time.DateTimeField:getAsText(long-java.util.Locale)),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:print(org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale), org.joda.time.DateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:estimateParsedLength() to listOf(org.joda.time.format.DateTimeFormatterBuilder$TextField:estimatePrintedLength()),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.format.DateTimeParserBucket:getLocale(), java.util.Map:get(java.lang.Object), java.util.concurrent.ConcurrentHashMap:<init>(), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:get(java.lang.Object), java.util.concurrent.ConcurrentHashMap:<init>(int), org.joda.time.MutableDateTime:<init>(long-org.joda.time.DateTimeZone), org.joda.time.MutableDateTime:property(org.joda.time.DateTimeFieldType), org.joda.time.MutableDateTime$Property:getMinimumValueOverall(), org.joda.time.MutableDateTime$Property:getMaximumValueOverall(), org.joda.time.MutableDateTime$Property:getMaximumTextLength(java.util.Locale), org.joda.time.MutableDateTime$Property:set(int), org.joda.time.MutableDateTime$Property:getAsShortText(java.util.Locale), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.MutableDateTime$Property:getAsShortText(java.util.Locale), java.lang.String:toLowerCase(java.util.Locale), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.MutableDateTime$Property:getAsShortText(java.util.Locale), java.lang.String:toUpperCase(java.util.Locale), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.MutableDateTime$Property:getAsText(java.util.Locale), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.MutableDateTime$Property:getAsText(java.util.Locale), java.lang.String:toLowerCase(java.util.Locale), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.MutableDateTime$Property:getAsText(java.util.Locale), java.lang.String:toUpperCase(java.util.Locale), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Locale:getLanguage(), java.lang.String:equals(java.lang.Object), org.joda.time.DateTimeFieldType:era(), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.lang.Integer:valueOf(int), java.util.Map:put(java.lang.Object-java.lang.Object), java.lang.Integer:intValue(), java.lang.CharSequence:length(), java.lang.Math:min(int-int), java.lang.CharSequence:subSequence(int-int), java.lang.CharSequence:toString(), java.util.Map:containsKey(java.lang.Object), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-java.lang.String-java.util.Locale)),
		org.joda.time.format.DateTimeFormatterBuilder$TextField:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>()),
		org.joda.time.format.DateTimeParserBucket$SavedField:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeParserBucket$SavedField:set(long-boolean) to listOf(org.joda.time.DateTimeField:setExtended(long-int), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.format.DateTimeParserBucket$SavedField:compareTo(org.joda.time.format.DateTimeParserBucket$SavedField) to listOf(org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.format.DateTimeParserBucket:compareReverse(org.joda.time.DurationField-org.joda.time.DurationField), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.format.DateTimeParserBucket:compareReverse(org.joda.time.DurationField-org.joda.time.DurationField)),
		org.joda.time.format.DateTimeParserBucket$SavedField:compareTo(java.lang.Object) to listOf(org.joda.time.format.DateTimeParserBucket$SavedField:compareTo(org.joda.time.format.DateTimeParserBucket$SavedField)),
		org.joda.time.format.InternalParserDateTimeParser:of(org.joda.time.format.InternalParser) to listOf(org.joda.time.format.DateTimeParserInternalParser:getUnderlying(), org.joda.time.format.InternalParserDateTimeParser:<init>(org.joda.time.format.InternalParser)),
		org.joda.time.format.InternalParserDateTimeParser:<init>(org.joda.time.format.InternalParser) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.InternalParserDateTimeParser:estimateParsedLength() to listOf(org.joda.time.format.InternalParser:estimateParsedLength()),
		org.joda.time.format.InternalParserDateTimeParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int)),
		org.joda.time.format.InternalParserDateTimeParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.String-int) to listOf(org.joda.time.format.InternalParser:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int)),
		org.joda.time.format.InternalParserDateTimeParser:equals(java.lang.Object) to listOf(java.lang.Object:equals(java.lang.Object)),
		org.joda.time.format.PeriodFormatterBuilder$Literal:<init>(java.lang.String) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormatterBuilder$Literal:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale) to listOf(java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$Literal:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(java.lang.StringBuffer:append(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$Literal:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(java.io.Writer:write(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$Literal:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale) to listOf(java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$Literal:<clinit>() to listOf(org.joda.time.format.PeriodFormatterBuilder$Literal:<init>(java.lang.String)),
		org.joda.time.JodaTimePermission:<init>(java.lang.String) to listOf(java.security.BasicPermission:<init>(java.lang.String)),
		org.joda.time.Minutes:minutes(int) to listOf(org.joda.time.Minutes:<init>(int)),
		org.joda.time.Minutes:minutesBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DurationFieldType:minutes(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:minutesBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:minutes(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.Minutes:minutes(int), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:minutesIn(org.joda.time.ReadableInterval) to listOf(org.joda.time.ReadableInterval:getStart(), org.joda.time.ReadableInterval:getEnd(), org.joda.time.DurationFieldType:minutes(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:standardMinutesIn(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BaseSingleFieldPeriod:standardPeriodIn(org.joda.time.ReadablePeriod-long), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:parseMinutes(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:getMinutes(), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:<init>(int) to listOf(org.joda.time.base.BaseSingleFieldPeriod:<init>(int)),
		org.joda.time.Minutes:readResolve() to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:getFieldType() to listOf(org.joda.time.DurationFieldType:minutes()),
		org.joda.time.Minutes:getPeriodType() to listOf(org.joda.time.PeriodType:minutes()),
		org.joda.time.Minutes:toStandardWeeks() to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Minutes:toStandardDays() to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Days:days(int)),
		org.joda.time.Minutes:toStandardHours() to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Hours:hours(int)),
		org.joda.time.Minutes:toStandardSeconds() to listOf(org.joda.time.Minutes:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Minutes:toStandardDuration() to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Minutes:getMinutes() to listOf(org.joda.time.Minutes:getValue()),
		org.joda.time.Minutes:plus(int) to listOf(org.joda.time.Minutes:getValue(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:plus(org.joda.time.Minutes) to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Minutes:plus(int)),
		org.joda.time.Minutes:minus(int) to listOf(org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Minutes:plus(int)),
		org.joda.time.Minutes:minus(org.joda.time.Minutes) to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Minutes:minus(int)),
		org.joda.time.Minutes:multipliedBy(int) to listOf(org.joda.time.Minutes:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:dividedBy(int) to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:negated() to listOf(org.joda.time.Minutes:getValue(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Minutes:isGreaterThan(org.joda.time.Minutes) to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Minutes:getValue(), org.joda.time.Minutes:getValue()),
		org.joda.time.Minutes:isLessThan(org.joda.time.Minutes) to listOf(org.joda.time.Minutes:getValue(), org.joda.time.Minutes:getValue(), org.joda.time.Minutes:getValue()),
		org.joda.time.Minutes:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Minutes:getValue(), java.lang.String:valueOf(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Minutes:<clinit>() to listOf(org.joda.time.Minutes:<init>(int), org.joda.time.Minutes:<init>(int), org.joda.time.Minutes:<init>(int), org.joda.time.Minutes:<init>(int), org.joda.time.Minutes:<init>(int), org.joda.time.Minutes:<init>(int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.PeriodType:minutes(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:parse(java.lang.String) to listOf(org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.MutablePeriod:parse(java.lang.String-org.joda.time.format.PeriodFormatter)),
		org.joda.time.MutablePeriod:parse(java.lang.String-org.joda.time.format.PeriodFormatter) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:toMutablePeriod()),
		org.joda.time.MutablePeriod:<init>() to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(int-int-int-int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(int-int-int-int-int-int-int-int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(long) to listOf(org.joda.time.base.BasePeriod:<init>(long)),
		org.joda.time.MutablePeriod:<init>(long-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(long-long) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(long-long-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(long-long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.MutablePeriod:<init>(java.lang.Object) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(java.lang.Object-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:clear() to listOf(org.joda.time.MutablePeriod:size(), org.joda.time.base.BasePeriod:setValues(int[])),
		org.joda.time.MutablePeriod:setValue(int-int) to listOf(org.joda.time.base.BasePeriod:setValue(int-int)),
		org.joda.time.MutablePeriod:set(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BasePeriod:setPeriod(org.joda.time.ReadablePeriod)),
		org.joda.time.MutablePeriod:setPeriod(int-int-int-int-int-int-int-int) to listOf(org.joda.time.base.BasePeriod:setPeriod(int-int-int-int-int-int-int-int)),
		org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableInterval) to listOf(org.joda.time.MutablePeriod:setPeriod(long), org.joda.time.ReadableInterval:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.MutablePeriod:setPeriod(long-long-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.MutablePeriod:setPeriod(long), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getIntervalChronology(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.MutablePeriod:setPeriod(long-long-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:setPeriod(long-long) to listOf(org.joda.time.MutablePeriod:setPeriod(long-long-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:setPeriod(long-long-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long), org.joda.time.MutablePeriod:setValues(int[])),
		org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableDuration) to listOf(org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableDuration-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:setPeriod(org.joda.time.ReadableDuration-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.MutablePeriod:setPeriod(long-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:setPeriod(long) to listOf(org.joda.time.MutablePeriod:setPeriod(long-org.joda.time.Chronology)),
		org.joda.time.MutablePeriod:setPeriod(long-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long), org.joda.time.MutablePeriod:setValues(int[])),
		org.joda.time.MutablePeriod:add(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:add(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BasePeriod:addPeriod(org.joda.time.ReadablePeriod)),
		org.joda.time.MutablePeriod:add(int-int-int-int-int-int-int-int) to listOf(org.joda.time.MutablePeriod:getYears(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:getMonths(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:getWeeks(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:getDays(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:getHours(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:getMinutes(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:getSeconds(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:getMillis(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.MutablePeriod:setPeriod(int-int-int-int-int-int-int-int)),
		org.joda.time.MutablePeriod:add(org.joda.time.ReadableInterval) to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.ReadableInterval:toPeriod(org.joda.time.PeriodType), org.joda.time.MutablePeriod:add(org.joda.time.ReadablePeriod)),
		org.joda.time.MutablePeriod:add(org.joda.time.ReadableDuration) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.Period:<init>(long-org.joda.time.PeriodType), org.joda.time.MutablePeriod:add(org.joda.time.ReadablePeriod)),
		org.joda.time.MutablePeriod:add(long) to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.Period:<init>(long-org.joda.time.PeriodType), org.joda.time.MutablePeriod:add(org.joda.time.ReadablePeriod)),
		org.joda.time.MutablePeriod:add(long-org.joda.time.Chronology) to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.Period:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.MutablePeriod:add(org.joda.time.ReadablePeriod)),
		org.joda.time.MutablePeriod:mergePeriod(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BasePeriod:mergePeriod(org.joda.time.ReadablePeriod)),
		org.joda.time.MutablePeriod:getYears() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:getMonths() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:getWeeks() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:getDays() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:getHours() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:getMinutes() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:getSeconds() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:getMillis() to listOf(org.joda.time.MutablePeriod:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MutablePeriod:setYears(int) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addYears(int) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setWeeks(int) to listOf(org.joda.time.DurationFieldType:weeks(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addWeeks(int) to listOf(org.joda.time.DurationFieldType:weeks(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setDays(int) to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addDays(int) to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setHours(int) to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addHours(int) to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setMinutes(int) to listOf(org.joda.time.DurationFieldType:minutes(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addMinutes(int) to listOf(org.joda.time.DurationFieldType:minutes(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setSeconds(int) to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addSeconds(int) to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:setMillis(int) to listOf(org.joda.time.DurationFieldType:millis(), org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:addMillis(int) to listOf(org.joda.time.DurationFieldType:millis(), org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int)),
		org.joda.time.MutablePeriod:copy() to listOf(org.joda.time.MutablePeriod:clone()),
		org.joda.time.MutablePeriod:clone() to listOf(java.lang.Object:clone(), java.lang.InternalError:<init>(java.lang.String)),
		org.joda.time.TimeOfDay:fromCalendarFields(java.util.Calendar) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), org.joda.time.TimeOfDay:<init>(int-int-int-int)),
		org.joda.time.TimeOfDay:fromDateFields(java.util.Date) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Date:getHours(), java.util.Date:getMinutes(), java.util.Date:getSeconds(), java.util.Date:getTime(), org.joda.time.TimeOfDay:<init>(int-int-int-int)),
		org.joda.time.TimeOfDay:fromMillisOfDay(long) to listOf(org.joda.time.TimeOfDay:fromMillisOfDay(long-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:fromMillisOfDay(long-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.TimeOfDay:<init>(long-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>() to listOf(org.joda.time.base.BasePartial:<init>()),
		org.joda.time.TimeOfDay:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(long) to listOf(org.joda.time.base.BasePartial:<init>(long)),
		org.joda.time.TimeOfDay:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(java.lang.Object) to listOf(org.joda.time.format.ISODateTimeFormat:timeParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.TimeOfDay:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat:timeParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.TimeOfDay:<init>(int-int) to listOf(org.joda.time.TimeOfDay:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(int-int-org.joda.time.Chronology) to listOf(org.joda.time.TimeOfDay:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(int-int-int) to listOf(org.joda.time.TimeOfDay:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.TimeOfDay:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(int-int-int-int) to listOf(org.joda.time.TimeOfDay:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(int-int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(int[]-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[]) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-int[])),
		org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:hourOfDay(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.Chronology:millisOfSecond(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.TimeOfDay:getFieldTypes() to listOf(org.joda.time.DateTimeFieldType[]:clone()),
		org.joda.time.TimeOfDay:withChronologyRetainFields(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.TimeOfDay:getChronology(), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-org.joda.time.Chronology), org.joda.time.TimeOfDay:getValues(), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.TimeOfDay:withField(org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.TimeOfDay:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.TimeOfDay:getValue(int), org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay:getField(int), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.TimeOfDay:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay:getField(int), org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.TimeOfDay:indexOf(org.joda.time.DurationFieldType), org.joda.time.TimeOfDay:getField(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.TimeOfDay:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.TimeOfDay:plusHours(int) to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:plusMinutes(int) to listOf(org.joda.time.DurationFieldType:minutes(), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:plusSeconds(int) to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:plusMillis(int) to listOf(org.joda.time.DurationFieldType:millis(), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.TimeOfDay:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.TimeOfDay:minusHours(int) to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:minusMinutes(int) to listOf(org.joda.time.DurationFieldType:minutes(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:minusSeconds(int) to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:minusMillis(int) to listOf(org.joda.time.DurationFieldType:millis(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.TimeOfDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.TimeOfDay:property(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.TimeOfDay:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.TimeOfDay$Property:<init>(org.joda.time.TimeOfDay-int)),
		org.joda.time.TimeOfDay:toLocalTime() to listOf(org.joda.time.TimeOfDay:getHourOfDay(), org.joda.time.TimeOfDay:getMinuteOfHour(), org.joda.time.TimeOfDay:getSecondOfMinute(), org.joda.time.TimeOfDay:getMillisOfSecond(), org.joda.time.TimeOfDay:getChronology(), org.joda.time.LocalTime:<init>(int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:toDateTimeToday() to listOf(org.joda.time.TimeOfDay:toDateTimeToday(org.joda.time.DateTimeZone)),
		org.joda.time.TimeOfDay:toDateTimeToday(org.joda.time.DateTimeZone) to listOf(org.joda.time.TimeOfDay:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.TimeOfDay:getHourOfDay() to listOf(org.joda.time.TimeOfDay:getValue(int)),
		org.joda.time.TimeOfDay:getMinuteOfHour() to listOf(org.joda.time.TimeOfDay:getValue(int)),
		org.joda.time.TimeOfDay:getSecondOfMinute() to listOf(org.joda.time.TimeOfDay:getValue(int)),
		org.joda.time.TimeOfDay:getMillisOfSecond() to listOf(org.joda.time.TimeOfDay:getValue(int)),
		org.joda.time.TimeOfDay:withHourOfDay(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay:getChronology(), org.joda.time.Chronology:hourOfDay(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay:withMinuteOfHour(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay:getChronology(), org.joda.time.Chronology:minuteOfHour(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay:withSecondOfMinute(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay:getChronology(), org.joda.time.Chronology:secondOfMinute(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay:withMillisOfSecond(int) to listOf(org.joda.time.TimeOfDay:getValues(), org.joda.time.TimeOfDay:getChronology(), org.joda.time.Chronology:millisOfSecond(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.TimeOfDay:<init>(org.joda.time.TimeOfDay-int[])),
		org.joda.time.TimeOfDay:hourOfDay() to listOf(org.joda.time.TimeOfDay$Property:<init>(org.joda.time.TimeOfDay-int)),
		org.joda.time.TimeOfDay:minuteOfHour() to listOf(org.joda.time.TimeOfDay$Property:<init>(org.joda.time.TimeOfDay-int)),
		org.joda.time.TimeOfDay:secondOfMinute() to listOf(org.joda.time.TimeOfDay$Property:<init>(org.joda.time.TimeOfDay-int)),
		org.joda.time.TimeOfDay:millisOfSecond() to listOf(org.joda.time.TimeOfDay$Property:<init>(org.joda.time.TimeOfDay-int)),
		org.joda.time.TimeOfDay:toString() to listOf(org.joda.time.format.ISODateTimeFormat:tTime(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.TimeOfDay:<clinit>() to listOf(org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.DateTimeFieldType:millisOfSecond(), org.joda.time.TimeOfDay:<init>(int-int-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder$Rule:<init>(org.joda.time.tz.DateTimeZoneBuilder$Recurrence-int-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.DateTimeZoneBuilder$Rule:getOfYear() to listOf(org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getOfYear()),
		org.joda.time.tz.DateTimeZoneBuilder$Rule:getNameKey() to listOf(org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getNameKey()),
		org.joda.time.tz.DateTimeZoneBuilder$Rule:getSaveMillis() to listOf(org.joda.time.tz.DateTimeZoneBuilder$Recurrence:getSaveMillis()),
		org.joda.time.tz.DateTimeZoneBuilder$Rule:next(long-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:get(long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.tz.DateTimeZoneBuilder$Recurrence:next(long-int-int), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:get(long)),
		org.joda.time.tz.DateTimeZoneBuilder$Rule:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString()),
		org.joda.time.tz.UTCProvider:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.UTCProvider:getZone(java.lang.String) to listOf(java.lang.String:equalsIgnoreCase(java.lang.String)),
		org.joda.time.tz.UTCProvider:<clinit>() to listOf(java.util.Collections:singleton(java.lang.Object)),
		org.joda.time.tz.ZoneInfoProvider$1:<init>(org.joda.time.tz.ZoneInfoProvider-java.lang.String) to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.ZoneInfoProvider$1:run() to listOf(org.joda.time.tz.ZoneInfoProvider:access$000(org.joda.time.tz.ZoneInfoProvider), org.joda.time.tz.ZoneInfoProvider:access$000(org.joda.time.tz.ZoneInfoProvider), java.lang.ClassLoader:getResourceAsStream(java.lang.String), java.lang.ClassLoader:getSystemResourceAsStream(java.lang.String), org.joda.time.tz.ZoneInfoProvider$1:run()),
		org.joda.time.tz.ZoneInfoProvider:<init>() to listOf(org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String)),
		org.joda.time.tz.ZoneInfoProvider:<init>(java.io.File) to listOf(java.lang.Object:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.io.File:exists(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.io.IOException:<init>(java.lang.String), java.io.File:isDirectory(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.io.IOException:<init>(java.lang.String), org.joda.time.tz.ZoneInfoProvider:openResource(java.lang.String), org.joda.time.tz.ZoneInfoProvider:loadZoneInfoMap(java.io.InputStream), java.util.Map:keySet(), java.util.TreeSet:<init>(java.util.Collection), java.util.Collections:unmodifiableSortedSet(java.util.SortedSet)),
		org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String) to listOf(org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String-java.lang.ClassLoader-boolean)),
		org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String-java.lang.ClassLoader) to listOf(org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String-java.lang.ClassLoader-boolean)),
		org.joda.time.tz.ZoneInfoProvider:<init>(java.lang.String-java.lang.ClassLoader-boolean) to listOf(java.lang.Object:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:endsWith(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.Object:getClass(), java.lang.Class:getClassLoader(), org.joda.time.tz.ZoneInfoProvider:openResource(java.lang.String), org.joda.time.tz.ZoneInfoProvider:loadZoneInfoMap(java.io.InputStream), java.util.Map:keySet(), java.util.TreeSet:<init>(java.util.Collection), java.util.Collections:unmodifiableSortedSet(java.util.SortedSet)),
		org.joda.time.tz.ZoneInfoProvider:getZone(java.lang.String) to listOf(java.util.Map:get(java.lang.Object), java.lang.ref.SoftReference:get(), org.joda.time.tz.ZoneInfoProvider:loadZoneData(java.lang.String), java.lang.String:equals(java.lang.Object), org.joda.time.tz.ZoneInfoProvider:loadZoneData(java.lang.String), org.joda.time.tz.ZoneInfoProvider:getZone(java.lang.String)),
		org.joda.time.tz.ZoneInfoProvider:uncaughtException(java.lang.Exception) to listOf(java.lang.Exception:printStackTrace()),
		org.joda.time.tz.ZoneInfoProvider:openResource(java.lang.String) to listOf(java.io.File:<init>(java.io.File-java.lang.String), java.io.FileInputStream:<init>(java.io.File), java.lang.String:concat(java.lang.String), org.joda.time.tz.ZoneInfoProvider$1:<init>(org.joda.time.tz.ZoneInfoProvider-java.lang.String), java.security.AccessController:doPrivileged(java.security.PrivilegedAction), java.lang.StringBuilder:<init>(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.Object:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.IOException:<init>(java.lang.String)),
		org.joda.time.tz.ZoneInfoProvider:loadZoneData(java.lang.String) to listOf(org.joda.time.tz.ZoneInfoProvider:openResource(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.InputStream-java.lang.String), java.lang.ref.SoftReference:<init>(java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.io.InputStream:close(), org.joda.time.tz.ZoneInfoProvider:uncaughtException(java.lang.Exception), java.util.Map:remove(java.lang.Object), java.io.InputStream:close(), java.io.InputStream:close()),
		org.joda.time.tz.ZoneInfoProvider:loadZoneInfoMap(java.io.InputStream) to listOf(java.util.concurrent.ConcurrentHashMap:<init>(), java.io.DataInputStream:<init>(java.io.InputStream), org.joda.time.tz.ZoneInfoProvider:readZoneInfoMap(java.io.DataInputStream-java.util.Map), java.io.DataInputStream:close(), java.io.DataInputStream:close(), java.lang.ref.SoftReference:<init>(java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object)),
		org.joda.time.tz.ZoneInfoProvider:readZoneInfoMap(java.io.DataInputStream-java.util.Map) to listOf(java.io.DataInputStream:readUnsignedShort(), java.io.DataInputStream:readUTF(), java.lang.String:intern(), java.io.DataInputStream:readUnsignedShort(), java.io.DataInputStream:readUnsignedShort(), java.io.DataInputStream:readUnsignedShort(), java.util.Map:put(java.lang.Object-java.lang.Object), java.io.IOException:<init>(java.lang.String)),
		org.joda.time.base.AbstractPartial:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.base.AbstractPartial:getFieldType(int) to listOf(org.joda.time.base.AbstractPartial:getChronology(), org.joda.time.base.AbstractPartial:getField(int-org.joda.time.Chronology), org.joda.time.DateTimeField:getType()),
		org.joda.time.base.AbstractPartial:getFieldTypes() to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getFieldType(int)),
		org.joda.time.base.AbstractPartial:getField(int) to listOf(org.joda.time.base.AbstractPartial:getChronology(), org.joda.time.base.AbstractPartial:getField(int-org.joda.time.Chronology)),
		org.joda.time.base.AbstractPartial:getFields() to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getField(int)),
		org.joda.time.base.AbstractPartial:getValues() to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getValue(int)),
		org.joda.time.base.AbstractPartial:get(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.base.AbstractPartial:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.base.AbstractPartial:getValue(int)),
		org.joda.time.base.AbstractPartial:isSupported(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.base.AbstractPartial:indexOf(org.joda.time.DateTimeFieldType)),
		org.joda.time.base.AbstractPartial:indexOf(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getFieldType(int)),
		org.joda.time.base.AbstractPartial:indexOfSupported(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.base.AbstractPartial:indexOf(org.joda.time.DateTimeFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.base.AbstractPartial:indexOf(org.joda.time.DurationFieldType) to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getFieldType(int), org.joda.time.DateTimeFieldType:getDurationType()),
		org.joda.time.base.AbstractPartial:indexOfSupported(org.joda.time.DurationFieldType) to listOf(org.joda.time.base.AbstractPartial:indexOf(org.joda.time.DurationFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.base.AbstractPartial:toDateTime(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.base.AbstractPartial:equals(java.lang.Object) to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.ReadablePartial:size(), org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getValue(int), org.joda.time.ReadablePartial:getValue(int), org.joda.time.base.AbstractPartial:getFieldType(int), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.base.AbstractPartial:getChronology(), org.joda.time.ReadablePartial:getChronology(), org.joda.time.field.FieldUtils:equals(java.lang.Object-java.lang.Object)),
		org.joda.time.base.AbstractPartial:hashCode() to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getValue(int), org.joda.time.base.AbstractPartial:getFieldType(int), java.lang.Object:hashCode(), org.joda.time.base.AbstractPartial:getChronology(), java.lang.Object:hashCode()),
		org.joda.time.base.AbstractPartial:compareTo(org.joda.time.ReadablePartial) to listOf(org.joda.time.base.AbstractPartial:size(), org.joda.time.ReadablePartial:size(), java.lang.ClassCastException:<init>(java.lang.String), org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getFieldType(int), org.joda.time.ReadablePartial:getFieldType(int), java.lang.ClassCastException:<init>(java.lang.String), org.joda.time.base.AbstractPartial:size(), org.joda.time.base.AbstractPartial:getValue(int), org.joda.time.ReadablePartial:getValue(int), org.joda.time.base.AbstractPartial:getValue(int), org.joda.time.ReadablePartial:getValue(int)),
		org.joda.time.base.AbstractPartial:isAfter(org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.AbstractPartial:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.base.AbstractPartial:isBefore(org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.AbstractPartial:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.base.AbstractPartial:isEqual(org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.AbstractPartial:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.base.AbstractPartial:toString(org.joda.time.format.DateTimeFormatter) to listOf(java.lang.Object:toString(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.base.AbstractPartial:compareTo(java.lang.Object) to listOf(org.joda.time.base.AbstractPartial:compareTo(org.joda.time.ReadablePartial)),
		org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.base.BasePeriod:setPeriodInternal(int-int-int-int-int-int-int-int)),
		org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long)),
		org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.base.BasePeriod:size(), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getIntervalChronology(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long)),
		org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.PeriodType) to listOf(org.joda.time.base.AbstractPeriod:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.Object:getClass(), java.lang.Object:getClass(), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.base.BaseLocal:getLocalMillis(), org.joda.time.base.BaseLocal:getLocalMillis(), org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:size(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.ReadablePartial:getFieldType(int), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeUtils:isContiguous(org.joda.time.ReadablePartial), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long)),
		org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long)),
		org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration), org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.field.FieldUtils:safeSubtract(long-long), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long)),
		org.joda.time.base.BasePeriod:<init>(long) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.PeriodType:standard(), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:get(org.joda.time.ReadablePeriod-long), java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int)),
		org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long)),
		org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.AbstractPeriod:<init>(), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getPeriodConverter(java.lang.Object), org.joda.time.convert.PeriodConverter:getPeriodType(java.lang.Object), org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType), org.joda.time.base.BasePeriod:size(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.convert.PeriodConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology), org.joda.time.MutablePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.MutablePeriod:getValues()),
		org.joda.time.base.BasePeriod:<init>(int[]-org.joda.time.PeriodType) to listOf(org.joda.time.base.AbstractPeriod:<init>()),
		org.joda.time.base.BasePeriod:checkPeriodType(org.joda.time.PeriodType) to listOf(org.joda.time.DateTimeUtils:getPeriodType(org.joda.time.PeriodType)),
		org.joda.time.base.BasePeriod:toDurationFrom(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.Duration:<init>(long-long)),
		org.joda.time.base.BasePeriod:toDurationTo(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.Chronology:add(org.joda.time.ReadablePeriod-long-int), org.joda.time.Duration:<init>(long-long)),
		org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int) to listOf(org.joda.time.base.BasePeriod:indexOf(org.joda.time.DurationFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DurationFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.base.BasePeriod:setPeriod(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BasePeriod:size(), org.joda.time.base.BasePeriod:setValues(int[]), org.joda.time.base.BasePeriod:setPeriodInternal(org.joda.time.ReadablePeriod)),
		org.joda.time.base.BasePeriod:setPeriodInternal(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BasePeriod:size(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.base.BasePeriod:setValues(int[])),
		org.joda.time.base.BasePeriod:setPeriod(int-int-int-int-int-int-int-int) to listOf(org.joda.time.base.BasePeriod:setPeriodInternal(int-int-int-int-int-int-int-int), org.joda.time.base.BasePeriod:setValues(int[])),
		org.joda.time.base.BasePeriod:setPeriodInternal(int-int-int-int-int-int-int-int) to listOf(org.joda.time.base.BasePeriod:size(), org.joda.time.DurationFieldType:years(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.DurationFieldType:months(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.DurationFieldType:weeks(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.DurationFieldType:days(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.DurationFieldType:hours(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.DurationFieldType:minutes(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.DurationFieldType:seconds(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int), org.joda.time.DurationFieldType:millis(), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int)),
		org.joda.time.base.BasePeriod:setField(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.base.BasePeriod:setFieldInto(int[]-org.joda.time.DurationFieldType-int)),
		org.joda.time.base.BasePeriod:setFieldInto(int[]-org.joda.time.DurationFieldType-int) to listOf(org.joda.time.base.BasePeriod:indexOf(org.joda.time.DurationFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.base.BasePeriod:addField(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.base.BasePeriod:addFieldInto(int[]-org.joda.time.DurationFieldType-int)),
		org.joda.time.base.BasePeriod:addFieldInto(int[]-org.joda.time.DurationFieldType-int) to listOf(org.joda.time.base.BasePeriod:indexOf(org.joda.time.DurationFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.field.FieldUtils:safeAdd(int-int)),
		org.joda.time.base.BasePeriod:mergePeriod(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BasePeriod:getValues(), org.joda.time.base.BasePeriod:mergePeriodInto(int[]-org.joda.time.ReadablePeriod), org.joda.time.base.BasePeriod:setValues(int[])),
		org.joda.time.base.BasePeriod:mergePeriodInto(int[]-org.joda.time.ReadablePeriod) to listOf(org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.base.BasePeriod:checkAndUpdate(org.joda.time.DurationFieldType-int[]-int)),
		org.joda.time.base.BasePeriod:addPeriod(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BasePeriod:getValues(), org.joda.time.base.BasePeriod:addPeriodInto(int[]-org.joda.time.ReadablePeriod), org.joda.time.base.BasePeriod:setValues(int[])),
		org.joda.time.base.BasePeriod:addPeriodInto(int[]-org.joda.time.ReadablePeriod) to listOf(org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.base.BasePeriod:indexOf(org.joda.time.DurationFieldType), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DurationFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.base.BasePeriod:getValue(int), org.joda.time.field.FieldUtils:safeAdd(int-int)),
		org.joda.time.base.BasePeriod:setValues(int[]) to listOf(java.lang.System:arraycopy(java.lang.Object-int-java.lang.Object-int-int)),
		org.joda.time.base.BasePeriod:<clinit>() to listOf(org.joda.time.base.BasePeriod$1:<init>()),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField) to listOf(org.joda.time.DateTimeFieldType:dayOfMonth(), org.joda.time.field.PreciseDurationDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getDayOfMonth(long)),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:getRangeDurationField() to listOf(org.joda.time.chrono.BasicChronology:months()),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue() to listOf(org.joda.time.chrono.BasicChronology:getDaysInMonthMax()),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue(long) to listOf(org.joda.time.chrono.BasicChronology:getDaysInMonthMax(long)),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:year(), org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:year(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.chrono.BasicChronology:getDaysInMonthMax(int), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue()),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:year(), org.joda.time.chrono.BasicChronology:getDaysInYearMonth(int-int), org.joda.time.chrono.BasicChronology:getDaysInMonthMax(int), org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValue()),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:getMaximumValueForSet(long-int) to listOf(org.joda.time.chrono.BasicChronology:getDaysInMonthMaxForSet(long-int)),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:isLeap(long) to listOf(org.joda.time.chrono.BasicChronology:isLeapDay(long)),
		org.joda.time.chrono.BasicDayOfMonthDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:dayOfMonth()),
		org.joda.time.chrono.BasicWeekyearDateTimeField:<init>(org.joda.time.chrono.BasicChronology) to listOf(org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.chrono.BasicChronology:getAverageMillisPerYear(), org.joda.time.field.ImpreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-long)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getWeekyear(long)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:add(long-int) to listOf(org.joda.time.chrono.BasicWeekyearDateTimeField:get(long), org.joda.time.chrono.BasicWeekyearDateTimeField:set(long-int)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:add(long-long) to listOf(org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.chrono.BasicWeekyearDateTimeField:add(long-int)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:addWrapField(long-int) to listOf(org.joda.time.chrono.BasicWeekyearDateTimeField:add(long-int)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.BasicWeekyearDateTimeField:getDifference(long-long), org.joda.time.chrono.BasicWeekyearDateTimeField:get(long), org.joda.time.chrono.BasicWeekyearDateTimeField:get(long), org.joda.time.chrono.BasicWeekyearDateTimeField:remainder(long), org.joda.time.chrono.BasicWeekyearDateTimeField:remainder(long), org.joda.time.chrono.BasicChronology:getWeeksInYear(int)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:set(long-int) to listOf(java.lang.Math:abs(int), org.joda.time.chrono.BasicChronology:getMinYear(), org.joda.time.chrono.BasicChronology:getMaxYear(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.chrono.BasicWeekyearDateTimeField:get(long), org.joda.time.chrono.BasicChronology:getDayOfWeek(long), org.joda.time.chrono.BasicChronology:getWeeksInYear(int), org.joda.time.chrono.BasicChronology:getWeeksInYear(int), org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long), org.joda.time.chrono.BasicChronology:setYear(long-int), org.joda.time.chrono.BasicWeekyearDateTimeField:get(long), org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long), org.joda.time.chrono.BasicChronology:dayOfWeek(), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:isLeap(long) to listOf(org.joda.time.chrono.BasicChronology:getWeekyear(long), org.joda.time.chrono.BasicChronology:getWeeksInYear(int)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:getLeapAmount(long) to listOf(org.joda.time.chrono.BasicChronology:getWeekyear(long), org.joda.time.chrono.BasicChronology:getWeeksInYear(int)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:getLeapDurationField() to listOf(org.joda.time.chrono.BasicChronology:weeks()),
		org.joda.time.chrono.BasicWeekyearDateTimeField:getMinimumValue() to listOf(org.joda.time.chrono.BasicChronology:getMinYear()),
		org.joda.time.chrono.BasicWeekyearDateTimeField:getMaximumValue() to listOf(org.joda.time.chrono.BasicChronology:getMaxYear()),
		org.joda.time.chrono.BasicWeekyearDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.BasicChronology:weekOfWeekyear(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.chrono.BasicChronology:getWeekOfWeekyear(long)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:remainder(long) to listOf(org.joda.time.chrono.BasicWeekyearDateTimeField:roundFloor(long)),
		org.joda.time.chrono.BasicWeekyearDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:weekyear()),
		org.joda.time.chrono.GJChronology$LinkedDurationField:<init>(org.joda.time.DurationField-org.joda.time.chrono.GJChronology$ImpreciseCutoverField) to listOf(org.joda.time.DurationField:getType(), org.joda.time.field.DecoratedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType)),
		org.joda.time.chrono.GJChronology$LinkedDurationField:add(long-int) to listOf(org.joda.time.chrono.GJChronology$ImpreciseCutoverField:add(long-int)),
		org.joda.time.chrono.GJChronology$LinkedDurationField:add(long-long) to listOf(org.joda.time.chrono.GJChronology$ImpreciseCutoverField:add(long-long)),
		org.joda.time.chrono.GJChronology$LinkedDurationField:getDifference(long-long) to listOf(org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getDifference(long-long)),
		org.joda.time.chrono.GJChronology$LinkedDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.GJChronology$ImpreciseCutoverField:getDifferenceAsLong(long-long)),
		org.joda.time.chrono.IslamicChronology$LeapYearPatternType:<init>(int-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.chrono.LimitChronology$LimitDurationField:<init>(org.joda.time.chrono.LimitChronology-org.joda.time.DurationField) to listOf(org.joda.time.DurationField:getType(), org.joda.time.field.DecoratedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:getValue(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:getValue(long-long)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:getValueAsLong(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:getValueAsLong(long-long)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:getMillis(int-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:getMillis(int-long)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:getMillis(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:getMillis(long-long)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:add(long-int) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:add(long-int), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:add(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:add(long-long), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:getDifference(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:getDifference(long-long)),
		org.joda.time.chrono.LimitChronology$LimitDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology:checkLimits(long-java.lang.String), org.joda.time.chrono.LimitChronology$LimitDurationField:getWrappedField(), org.joda.time.DurationField:getDifferenceAsLong(long-long)),
		org.joda.time.convert.AbstractConverter:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.convert.AbstractConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis()),
		org.joda.time.convert.AbstractConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.convert.AbstractConverter:getChronology(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology)),
		org.joda.time.convert.AbstractConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.convert.AbstractConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.Chronology:get(org.joda.time.ReadablePartial-long)),
		org.joda.time.convert.AbstractConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.convert.AbstractConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology)),
		org.joda.time.convert.AbstractConverter:getPeriodType(java.lang.Object) to listOf(org.joda.time.PeriodType:standard()),
		org.joda.time.convert.AbstractConverter:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.convert.AbstractConverter:getSupportedType(), org.joda.time.convert.AbstractConverter:getSupportedType(), java.lang.Class:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.convert.ReadableIntervalConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.ReadableIntervalConverter:getDurationMillis(java.lang.Object) to listOf(org.joda.time.ReadableInterval:toDurationMillis()),
		org.joda.time.convert.ReadableIntervalConverter:setInto(org.joda.time.ReadWritablePeriod-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getIntervalChronology(org.joda.time.ReadableInterval), org.joda.time.ReadableInterval:getStartMillis(), org.joda.time.ReadableInterval:getEndMillis(), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long), org.joda.time.ReadWritablePeriod:setValue(int-int)),
		org.joda.time.convert.ReadableIntervalConverter:setInto(org.joda.time.ReadWritableInterval-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadWritableInterval:setInterval(org.joda.time.ReadableInterval), org.joda.time.ReadWritableInterval:setChronology(org.joda.time.Chronology), org.joda.time.ReadableInterval:getChronology(), org.joda.time.ReadWritableInterval:setChronology(org.joda.time.Chronology)),
		org.joda.time.convert.ReadableIntervalConverter:<clinit>() to listOf(org.joda.time.convert.ReadableIntervalConverter:<init>()),
		org.joda.time.DateTimeComparator:getInstance(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.DateTimeComparator:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType)),
		org.joda.time.DateTimeComparator:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.DateTimeComparator:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType)),
		org.joda.time.DateTimeComparator:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType) to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeComparator:compare(java.lang.Object-java.lang.Object) to listOf(org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getInstantConverter(java.lang.Object), org.joda.time.convert.InstantConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.convert.InstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.convert.ConverterManager:getInstance(), org.joda.time.convert.ConverterManager:getInstantConverter(java.lang.Object), org.joda.time.convert.InstantConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.convert.InstantConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:remainder(long), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.DateTimeComparator:readResolve() to listOf(org.joda.time.DateTimeComparator:getInstance(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType)),
		org.joda.time.DateTimeComparator:equals(java.lang.Object) to listOf(org.joda.time.DateTimeComparator:getLowerLimit(), org.joda.time.DateTimeComparator:getLowerLimit(), java.lang.Object:equals(java.lang.Object), org.joda.time.DateTimeComparator:getUpperLimit(), org.joda.time.DateTimeComparator:getUpperLimit(), java.lang.Object:equals(java.lang.Object)),
		org.joda.time.DateTimeComparator:hashCode() to listOf(java.lang.Object:hashCode(), java.lang.Object:hashCode()),
		org.joda.time.DateTimeComparator:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeFieldType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.DateTimeComparator:<clinit>() to listOf(org.joda.time.DateTimeComparator:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.DateTimeComparator:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.DateTimeComparator:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DateTimeFieldType)),
		org.joda.time.DateTimeUtils$OffsetMillisProvider:<init>(long) to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeUtils$OffsetMillisProvider:getMillis() to listOf(java.lang.System:currentTimeMillis()),
		org.joda.time.Duration:parse(java.lang.String) to listOf(org.joda.time.Duration:<init>(java.lang.Object)),
		org.joda.time.Duration:standardDays(long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:standardHours(long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:standardMinutes(long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:standardSeconds(long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:millis(long) to listOf(org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:<init>(long) to listOf(org.joda.time.base.BaseDuration:<init>(long)),
		org.joda.time.Duration:<init>(long-long) to listOf(org.joda.time.base.BaseDuration:<init>(long-long)),
		org.joda.time.Duration:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BaseDuration:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant)),
		org.joda.time.Duration:<init>(java.lang.Object) to listOf(org.joda.time.base.BaseDuration:<init>(java.lang.Object)),
		org.joda.time.Duration:getStandardDays() to listOf(org.joda.time.Duration:getMillis()),
		org.joda.time.Duration:getStandardHours() to listOf(org.joda.time.Duration:getMillis()),
		org.joda.time.Duration:getStandardMinutes() to listOf(org.joda.time.Duration:getMillis()),
		org.joda.time.Duration:getStandardSeconds() to listOf(org.joda.time.Duration:getMillis()),
		org.joda.time.Duration:toStandardDays() to listOf(org.joda.time.Duration:getStandardDays(), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Days:days(int)),
		org.joda.time.Duration:toStandardHours() to listOf(org.joda.time.Duration:getStandardHours(), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Hours:hours(int)),
		org.joda.time.Duration:toStandardMinutes() to listOf(org.joda.time.Duration:getStandardMinutes(), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Duration:toStandardSeconds() to listOf(org.joda.time.Duration:getStandardSeconds(), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Duration:withMillis(long) to listOf(org.joda.time.Duration:getMillis(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:withDurationAdded(long-int) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.Duration:getMillis(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:withDurationAdded(org.joda.time.ReadableDuration-int) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.Duration:withDurationAdded(long-int)),
		org.joda.time.Duration:plus(long) to listOf(org.joda.time.Duration:withDurationAdded(long-int)),
		org.joda.time.Duration:plus(org.joda.time.ReadableDuration) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.Duration:withDurationAdded(long-int)),
		org.joda.time.Duration:minus(long) to listOf(org.joda.time.Duration:withDurationAdded(long-int)),
		org.joda.time.Duration:minus(org.joda.time.ReadableDuration) to listOf(org.joda.time.ReadableDuration:getMillis(), org.joda.time.Duration:withDurationAdded(long-int)),
		org.joda.time.Duration:multipliedBy(long) to listOf(org.joda.time.Duration:getMillis(), org.joda.time.field.FieldUtils:safeMultiply(long-long), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:dividedBy(long) to listOf(org.joda.time.Duration:getMillis(), org.joda.time.field.FieldUtils:safeDivide(long-long), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:dividedBy(long-java.math.RoundingMode) to listOf(org.joda.time.Duration:getMillis(), org.joda.time.field.FieldUtils:safeDivide(long-long-java.math.RoundingMode), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:negated() to listOf(org.joda.time.Duration:getMillis(), java.lang.ArithmeticException:<init>(java.lang.String), org.joda.time.Duration:getMillis(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Duration:abs() to listOf(org.joda.time.Duration:getMillis(), org.joda.time.Duration:negated()),
		org.joda.time.Duration:<clinit>() to listOf(org.joda.time.Duration:<init>(long)),
		org.joda.time.field.ImpreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-long) to listOf(org.joda.time.field.BaseDateTimeField:<init>(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:getDurationType(), org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField:<init>(org.joda.time.field.ImpreciseDateTimeField-org.joda.time.DurationFieldType)),
		org.joda.time.field.ImpreciseDateTimeField:getDifference(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:getDifferenceAsLong(long-long), org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.field.ImpreciseDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.ImpreciseDateTimeField:getDifferenceAsLong(long-long), org.joda.time.field.ImpreciseDateTimeField:add(long-long), org.joda.time.field.ImpreciseDateTimeField:add(long-long), org.joda.time.field.ImpreciseDateTimeField:add(long-long), org.joda.time.field.ImpreciseDateTimeField:add(long-long)),
		org.joda.time.field.ScaledDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType-int) to listOf(org.joda.time.field.DecoratedDurationField:<init>(org.joda.time.DurationField-org.joda.time.DurationFieldType), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.field.ScaledDurationField:getValue(long) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getValue(long)),
		org.joda.time.field.ScaledDurationField:getValueAsLong(long) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getValueAsLong(long)),
		org.joda.time.field.ScaledDurationField:getValue(long-long) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getValue(long-long)),
		org.joda.time.field.ScaledDurationField:getValueAsLong(long-long) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getValueAsLong(long-long)),
		org.joda.time.field.ScaledDurationField:getMillis(int) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getMillis(long)),
		org.joda.time.field.ScaledDurationField:getMillis(long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getMillis(long)),
		org.joda.time.field.ScaledDurationField:getMillis(int-long) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getMillis(long-long)),
		org.joda.time.field.ScaledDurationField:getMillis(long-long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getMillis(long-long)),
		org.joda.time.field.ScaledDurationField:add(long-int) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:add(long-long)),
		org.joda.time.field.ScaledDurationField:add(long-long) to listOf(org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:add(long-long)),
		org.joda.time.field.ScaledDurationField:getDifference(long-long) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getDifference(long-long)),
		org.joda.time.field.ScaledDurationField:getDifferenceAsLong(long-long) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getDifferenceAsLong(long-long)),
		org.joda.time.field.ScaledDurationField:getUnitMillis() to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.DurationField:getUnitMillis()),
		org.joda.time.field.ScaledDurationField:equals(java.lang.Object) to listOf(org.joda.time.field.ScaledDurationField:getWrappedField(), org.joda.time.field.ScaledDurationField:getWrappedField(), java.lang.Object:equals(java.lang.Object), org.joda.time.field.ScaledDurationField:getType(), org.joda.time.field.ScaledDurationField:getType()),
		org.joda.time.field.ScaledDurationField:hashCode() to listOf(org.joda.time.field.ScaledDurationField:getType(), java.lang.Object:hashCode(), org.joda.time.field.ScaledDurationField:getWrappedField(), java.lang.Object:hashCode()),
		org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey:<init>(int-int-int-java.util.Locale) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey:hashCode() to listOf(java.util.Locale:hashCode()),
		org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey:equals(java.lang.Object) to listOf(java.util.Locale:equals(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter:<init>(org.joda.time.DateTimeFieldType-int-boolean) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(java.lang.CharSequence:length(), java.lang.Math:min(int-int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int), java.lang.CharSequence:length(), java.lang.Math:min(int-int), java.lang.CharSequence:subSequence(int-int), java.lang.CharSequence:toString(), java.lang.Integer:parseInt(java.lang.String), java.lang.CharSequence:subSequence(int-int), java.lang.CharSequence:toString(), java.lang.Integer:parseInt(java.lang.String), java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int), org.joda.time.format.DateTimeParserBucket:saveField(org.joda.time.DateTimeFieldType-int)),
		org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean) to listOf(org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter:<init>(org.joda.time.DateTimeFieldType-int-boolean)),
		org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology), org.joda.time.DateTimeField:get(long), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-int), java.lang.Appendable:append(char)),
		org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-int), java.lang.Appendable:append(char), java.lang.Appendable:append(char)),
		org.joda.time.format.DateTimeFormatterBuilder:<init>() to listOf(java.lang.Object:<init>(), java.util.ArrayList:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder:toFormatter() to listOf(org.joda.time.format.DateTimeFormatterBuilder:getFormatter(), org.joda.time.format.DateTimeFormatterBuilder:isPrinter(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:isParser(java.lang.Object), org.joda.time.format.DateTimeFormatter:<init>(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser), java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder:toPrinter() to listOf(org.joda.time.format.DateTimeFormatterBuilder:getFormatter(), org.joda.time.format.DateTimeFormatterBuilder:isPrinter(java.lang.Object), org.joda.time.format.InternalPrinterDateTimePrinter:of(org.joda.time.format.InternalPrinter), java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder:toParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:getFormatter(), org.joda.time.format.DateTimeFormatterBuilder:isParser(java.lang.Object), org.joda.time.format.InternalParserDateTimeParser:of(org.joda.time.format.InternalParser), java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder:canBuildFormatter() to listOf(org.joda.time.format.DateTimeFormatterBuilder:getFormatter(), org.joda.time.format.DateTimeFormatterBuilder:isFormatter(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:canBuildPrinter() to listOf(org.joda.time.format.DateTimeFormatterBuilder:getFormatter(), org.joda.time.format.DateTimeFormatterBuilder:isPrinter(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:canBuildParser() to listOf(org.joda.time.format.DateTimeFormatterBuilder:getFormatter(), org.joda.time.format.DateTimeFormatterBuilder:isParser(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:clear() to listOf(java.util.ArrayList:clear()),
		org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeFormatter) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormatter:getPrinter0(), org.joda.time.format.DateTimeFormatter:getParser0(), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter) to listOf(org.joda.time.format.DateTimeFormatterBuilder:checkPrinter(org.joda.time.format.DateTimePrinter), org.joda.time.format.DateTimePrinterInternalPrinter:of(org.joda.time.format.DateTimePrinter), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimeParser) to listOf(org.joda.time.format.DateTimeFormatterBuilder:checkParser(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser) to listOf(org.joda.time.format.DateTimeFormatterBuilder:checkPrinter(org.joda.time.format.DateTimePrinter), org.joda.time.format.DateTimeFormatterBuilder:checkParser(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimePrinterInternalPrinter:of(org.joda.time.format.DateTimePrinter), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:append(org.joda.time.format.DateTimePrinter-org.joda.time.format.DateTimeParser[]) to listOf(org.joda.time.format.DateTimeFormatterBuilder:checkPrinter(org.joda.time.format.DateTimePrinter), java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimePrinterInternalPrinter:of(org.joda.time.format.DateTimePrinter), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimePrinterInternalPrinter:of(org.joda.time.format.DateTimePrinter), org.joda.time.format.DateTimeFormatterBuilder$MatchingParser:<init>(org.joda.time.format.InternalParser[]), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser) to listOf(org.joda.time.format.DateTimeFormatterBuilder:checkParser(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeParserInternalParser:of(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder$MatchingParser:<init>(org.joda.time.format.InternalParser[]), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:checkParser(org.joda.time.format.DateTimeParser) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder:checkPrinter(org.joda.time.format.DateTimePrinter) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object) to listOf(java.util.ArrayList:add(java.lang.Object), java.util.ArrayList:add(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser) to listOf(java.util.ArrayList:add(java.lang.Object), java.util.ArrayList:add(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(char) to listOf(org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:<init>(char), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendLiteral(java.lang.String) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.String:length(), java.lang.String:charAt(int), org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:<init>(char), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(), org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean-int), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendFixedDecimal(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$FixedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendSignedDecimal(org.joda.time.DateTimeFieldType-int-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(), org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean-int), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendFixedSignedDecimal(org.joda.time.DateTimeFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$FixedNumber:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendText(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$TextField:<init>(org.joda.time.DateTimeFieldType-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendShortText(org.joda.time.DateTimeFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.DateTimeFormatterBuilder$TextField:<init>(org.joda.time.DateTimeFieldType-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendFraction(org.joda.time.DateTimeFieldType-int-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(), org.joda.time.format.DateTimeFormatterBuilder$Fraction:<init>(org.joda.time.DateTimeFieldType-int-int), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfSecond(int-int) to listOf(org.joda.time.DateTimeFieldType:secondOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendFraction(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfMinute(int-int) to listOf(org.joda.time.DateTimeFieldType:minuteOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendFraction(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfHour(int-int) to listOf(org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendFraction(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendFractionOfDay(int-int) to listOf(org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.format.DateTimeFormatterBuilder:appendFraction(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendMillisOfSecond(int) to listOf(org.joda.time.DateTimeFieldType:millisOfSecond(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendMillisOfDay(int) to listOf(org.joda.time.DateTimeFieldType:millisOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendSecondOfMinute(int) to listOf(org.joda.time.DateTimeFieldType:secondOfMinute(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendSecondOfDay(int) to listOf(org.joda.time.DateTimeFieldType:secondOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendMinuteOfHour(int) to listOf(org.joda.time.DateTimeFieldType:minuteOfHour(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendMinuteOfDay(int) to listOf(org.joda.time.DateTimeFieldType:minuteOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendHourOfDay(int) to listOf(org.joda.time.DateTimeFieldType:hourOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendClockhourOfDay(int) to listOf(org.joda.time.DateTimeFieldType:clockhourOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendHourOfHalfday(int) to listOf(org.joda.time.DateTimeFieldType:hourOfHalfday(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendClockhourOfHalfday(int) to listOf(org.joda.time.DateTimeFieldType:clockhourOfHalfday(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeek(int) to listOf(org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendDayOfMonth(int) to listOf(org.joda.time.DateTimeFieldType:dayOfMonth(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendDayOfYear(int) to listOf(org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendWeekOfWeekyear(int) to listOf(org.joda.time.DateTimeFieldType:weekOfWeekyear(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendWeekyear(int-int) to listOf(org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.format.DateTimeFormatterBuilder:appendSignedDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYear(int) to listOf(org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendYear(int-int) to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.format.DateTimeFormatterBuilder:appendSignedDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitYear(int) to listOf(org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitYear(int-boolean)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitYear(int-boolean) to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitWeekyear(int) to listOf(org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitWeekyear(int-boolean)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTwoDigitWeekyear(int-boolean) to listOf(org.joda.time.DateTimeFieldType:weekyear(), org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear:<init>(org.joda.time.DateTimeFieldType-int-boolean), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendYearOfEra(int-int) to listOf(org.joda.time.DateTimeFieldType:yearOfEra(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendYearOfCentury(int-int) to listOf(org.joda.time.DateTimeFieldType:yearOfCentury(), org.joda.time.format.DateTimeFormatterBuilder:appendDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendCenturyOfEra(int-int) to listOf(org.joda.time.DateTimeFieldType:centuryOfEra(), org.joda.time.format.DateTimeFormatterBuilder:appendSignedDecimal(org.joda.time.DateTimeFieldType-int-int)),
		org.joda.time.format.DateTimeFormatterBuilder:appendHalfdayOfDayText() to listOf(org.joda.time.DateTimeFieldType:halfdayOfDay(), org.joda.time.format.DateTimeFormatterBuilder:appendText(org.joda.time.DateTimeFieldType)),
		org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeekText() to listOf(org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.format.DateTimeFormatterBuilder:appendText(org.joda.time.DateTimeFieldType)),
		org.joda.time.format.DateTimeFormatterBuilder:appendDayOfWeekShortText() to listOf(org.joda.time.DateTimeFieldType:dayOfWeek(), org.joda.time.format.DateTimeFormatterBuilder:appendShortText(org.joda.time.DateTimeFieldType)),
		org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYearText() to listOf(org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.format.DateTimeFormatterBuilder:appendText(org.joda.time.DateTimeFieldType)),
		org.joda.time.format.DateTimeFormatterBuilder:appendMonthOfYearShortText() to listOf(org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.format.DateTimeFormatterBuilder:appendShortText(org.joda.time.DateTimeFieldType)),
		org.joda.time.format.DateTimeFormatterBuilder:appendEraText() to listOf(org.joda.time.DateTimeFieldType:era(), org.joda.time.format.DateTimeFormatterBuilder:appendText(org.joda.time.DateTimeFieldType)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneName() to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:<init>(int-java.util.Map), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneName(java.util.Map) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:<init>(int-java.util.Map), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneShortName() to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:<init>(int-java.util.Map), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneShortName(java.util.Map) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName:<init>(int-java.util.Map), org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneId() to listOf(org.joda.time.format.DateTimeFormatterBuilder:append0(org.joda.time.format.InternalPrinter-org.joda.time.format.InternalParser)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-boolean-int-int) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:<init>(java.lang.String-java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendTimeZoneOffset(java.lang.String-java.lang.String-boolean-int-int) to listOf(org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset:<init>(java.lang.String-java.lang.String-boolean-int-int), org.joda.time.format.DateTimeFormatterBuilder:append0(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendPattern(java.lang.String) to listOf(org.joda.time.format.DateTimeFormat:appendPatternTo(org.joda.time.format.DateTimeFormatterBuilder-java.lang.String)),
		org.joda.time.format.DateTimeFormatterBuilder:getFormatter() to listOf(java.util.ArrayList:size(), java.util.ArrayList:get(int), java.util.ArrayList:get(int), org.joda.time.format.DateTimeFormatterBuilder$Composite:<init>(java.util.List)),
		org.joda.time.format.DateTimeFormatterBuilder:isPrinter(java.lang.Object) to listOf(org.joda.time.format.DateTimeFormatterBuilder$Composite:isPrinter()),
		org.joda.time.format.DateTimeFormatterBuilder:isParser(java.lang.Object) to listOf(org.joda.time.format.DateTimeFormatterBuilder$Composite:isParser()),
		org.joda.time.format.DateTimeFormatterBuilder:isFormatter(java.lang.Object) to listOf(org.joda.time.format.DateTimeFormatterBuilder:isPrinter(java.lang.Object), org.joda.time.format.DateTimeFormatterBuilder:isParser(java.lang.Object)),
		org.joda.time.format.DateTimeFormatterBuilder:appendUnknownString(java.lang.Appendable-int) to listOf(java.lang.Appendable:append(char)),
		org.joda.time.format.DateTimeFormatterBuilder:csStartsWith(java.lang.CharSequence-int-java.lang.String) to listOf(java.lang.String:length(), java.lang.CharSequence:length(), java.lang.CharSequence:charAt(int), java.lang.String:charAt(int)),
		org.joda.time.format.DateTimeFormatterBuilder:csStartsWithIgnoreCase(java.lang.CharSequence-int-java.lang.String) to listOf(java.lang.String:length(), java.lang.CharSequence:length(), java.lang.CharSequence:charAt(int), java.lang.String:charAt(int), java.lang.Character:toUpperCase(char), java.lang.Character:toUpperCase(char), java.lang.Character:toLowerCase(char), java.lang.Character:toLowerCase(char)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:<init>(int-int-int-boolean-int-org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:<init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) to listOf(java.lang.Object:<init>(), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:<init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) to listOf(java.util.HashSet:<init>(), java.util.HashSet:<init>(), java.lang.Object:equals(java.lang.Object), java.util.Set:add(java.lang.Object), java.util.Set:add(java.lang.Object), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:finish(java.util.Set), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:finish(java.util.Set)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale) to listOf(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldValue(org.joda.time.ReadablePeriod)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldValue(org.joda.time.ReadablePeriod), org.joda.time.format.FormatUtils:calculateDigitCount(long), java.lang.Math:max(int-int), java.lang.Math:max(int-int), java.lang.Math:max(int-int), java.lang.Math:abs(long), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:calculatePrintedLength(int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:calculatePrintedLength(int)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldValue(org.joda.time.ReadablePeriod), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.lang.StringBuffer-int), java.lang.StringBuffer:length(), org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.StringBuffer-int), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int), java.lang.Math:abs(long), java.lang.StringBuffer:insert(int-char), java.lang.StringBuffer:append(char), org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.lang.StringBuffer-int)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldValue(org.joda.time.ReadablePeriod), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.io.Writer-int), org.joda.time.format.FormatUtils:writeUnpaddedInteger(java.io.Writer-int), org.joda.time.format.FormatUtils:writePaddedInteger(java.io.Writer-int-int), java.lang.Math:abs(long), java.io.Writer:write(int), org.joda.time.format.FormatUtils:writePaddedInteger(java.io.Writer-int-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:printTo(java.io.Writer-int)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale) to listOf(java.lang.String:length(), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:parse(java.lang.String-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:scan(java.lang.String-int), org.joda.time.ReadWritablePeriod:getPeriodType(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isSupported(org.joda.time.PeriodType-int), java.lang.Math:min(int-int), java.lang.String:length(), java.lang.Math:min(int-int), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:length(), java.lang.Math:min(int-int), java.lang.String:length(), java.lang.Math:min(int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInt(java.lang.String-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:setFieldValue(org.joda.time.ReadWritablePeriod-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInt(java.lang.String-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:setFieldValue(org.joda.time.ReadWritablePeriod-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:setFieldValue(org.joda.time.ReadWritablePeriod-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInt(java.lang.String-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:setFieldValue(org.joda.time.ReadWritablePeriod-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInt(java.lang.String-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInt(java.lang.String-int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:setFieldValue(org.joda.time.ReadWritablePeriod-int-int), org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix:parse(java.lang.String-int)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:parseInt(java.lang.String-int-int) to listOf(java.lang.String:substring(int-int), java.lang.Integer:parseInt(java.lang.String), java.lang.String:charAt(int), java.lang.String:charAt(int), java.lang.String:charAt(int)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldValue(org.joda.time.ReadablePeriod) to listOf(org.joda.time.ReadablePeriod:getPeriodType(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isSupported(org.joda.time.PeriodType-int), org.joda.time.DurationFieldType:years(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:months(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:weeks(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:days(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:hours(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:minutes(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:seconds(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:millis(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:seconds(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:millis(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isZero(org.joda.time.ReadablePeriod), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isSupported(org.joda.time.PeriodType-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isZero(org.joda.time.ReadablePeriod), java.lang.Math:min(int-int), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isSupported(org.joda.time.PeriodType-int)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isZero(org.joda.time.ReadablePeriod) to listOf(org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getValue(int)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:isSupported(org.joda.time.PeriodType-int) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:months(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:weeks(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:days(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:hours(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:minutes(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:seconds(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:seconds(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType)),
		org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:setFieldValue(org.joda.time.ReadWritablePeriod-int-int) to listOf(org.joda.time.ReadWritablePeriod:setYears(int), org.joda.time.ReadWritablePeriod:setMonths(int), org.joda.time.ReadWritablePeriod:setWeeks(int), org.joda.time.ReadWritablePeriod:setDays(int), org.joda.time.ReadWritablePeriod:setHours(int), org.joda.time.ReadWritablePeriod:setMinutes(int), org.joda.time.ReadWritablePeriod:setSeconds(int), org.joda.time.ReadWritablePeriod:setMillis(int)),
		org.joda.time.format.PeriodFormatterBuilder:<init>() to listOf(java.lang.Object:<init>(), org.joda.time.format.PeriodFormatterBuilder:clear()),
		org.joda.time.format.PeriodFormatterBuilder:toFormatter() to listOf(org.joda.time.format.PeriodFormatterBuilder:toFormatter(java.util.List-boolean-boolean), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]:clone()),
		org.joda.time.format.PeriodFormatterBuilder:toPrinter() to listOf(org.joda.time.format.PeriodFormatterBuilder:toFormatter(), org.joda.time.format.PeriodFormatter:getPrinter()),
		org.joda.time.format.PeriodFormatterBuilder:toParser() to listOf(org.joda.time.format.PeriodFormatterBuilder:toFormatter(), org.joda.time.format.PeriodFormatter:getParser()),
		org.joda.time.format.PeriodFormatterBuilder:clear() to listOf(java.util.ArrayList:<init>(), java.util.List:clear()),
		org.joda.time.format.PeriodFormatterBuilder:append(org.joda.time.format.PeriodFormatter) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:clearPrefix(), org.joda.time.format.PeriodFormatter:getPrinter(), org.joda.time.format.PeriodFormatter:getParser(), org.joda.time.format.PeriodFormatterBuilder:append0(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser)),
		org.joda.time.format.PeriodFormatterBuilder:append(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:clearPrefix(), org.joda.time.format.PeriodFormatterBuilder:append0(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser)),
		org.joda.time.format.PeriodFormatterBuilder:appendLiteral(java.lang.String) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:clearPrefix(), org.joda.time.format.PeriodFormatterBuilder$Literal:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:append0(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser)),
		org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String-java.lang.String) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:<init>(java.lang.String-java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder:appendPrefix(java.lang.String[]-java.lang.String[]) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:<init>(java.lang.String[]-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder:appendPrefix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder$CompositeAffix:<init>(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder:appendYears() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendMonths() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendWeeks() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendDays() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendHours() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendMinutes() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendSeconds() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithMillis() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendMillis() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int)),
		org.joda.time.format.PeriodFormatterBuilder:appendMillis3Digit() to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int-int)),
		org.joda.time.format.PeriodFormatterBuilder:appendField(int) to listOf(org.joda.time.format.PeriodFormatterBuilder:appendField(int-int)),
		org.joda.time.format.PeriodFormatterBuilder:appendField(int-int) to listOf(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:<init>(int-int-int-boolean-int-org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix), org.joda.time.format.PeriodFormatterBuilder:append0(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser)),
		org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder$SimpleAffix:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:<init>(java.lang.String-java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder$RegExAffix:<init>(java.lang.String[]-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)),
		org.joda.time.format.PeriodFormatterBuilder:appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) to listOf(java.util.List:size(), java.util.List:size(), java.util.List:get(int), java.util.List:size(), java.util.List:get(int), java.lang.IllegalStateException:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:clearPrefix(), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:<init>(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter-org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix), java.util.List:size(), java.util.List:set(int-java.lang.Object), java.util.List:size(), java.util.List:set(int-java.lang.Object), org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldType()),
		org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String) to listOf(org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]-boolean-boolean)),
		org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(java.lang.String) to listOf(org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]-boolean-boolean)),
		org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsBefore(java.lang.String) to listOf(org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]-boolean-boolean)),
		org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String) to listOf(org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]-boolean-boolean)),
		org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]) to listOf(org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]-boolean-boolean)),
		org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]-boolean-boolean) to listOf(java.lang.IllegalArgumentException:<init>(), org.joda.time.format.PeriodFormatterBuilder:clearPrefix(), java.util.List:size(), org.joda.time.format.PeriodFormatterBuilder$Separator:<init>(java.lang.String-java.lang.String-java.lang.String[]-org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-boolean-boolean), org.joda.time.format.PeriodFormatterBuilder:append0(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), java.util.List:size(), java.util.List:get(int), java.util.List:get(int), java.util.List:size(), java.util.List:subList(int-int), java.util.List:size(), java.lang.IllegalStateException:<init>(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:createComposite(java.util.List), java.util.List:clear(), org.joda.time.format.PeriodFormatterBuilder$Separator:<init>(java.lang.String-java.lang.String-java.lang.String[]-org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-boolean-boolean), java.util.List:add(java.lang.Object), java.util.List:add(java.lang.Object)),
		org.joda.time.format.PeriodFormatterBuilder:clearPrefix() to listOf(java.lang.IllegalStateException:<init>(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder:append0(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser) to listOf(java.util.List:add(java.lang.Object), java.util.List:add(java.lang.Object)),
		org.joda.time.format.PeriodFormatterBuilder:toFormatter(java.util.List-boolean-boolean) to listOf(java.lang.IllegalStateException:<init>(java.lang.String), java.util.List:size(), java.util.List:get(int), java.util.List:get(int), org.joda.time.format.PeriodFormatterBuilder$Separator:access$000(org.joda.time.format.PeriodFormatterBuilder$Separator), org.joda.time.format.PeriodFormatterBuilder$Separator:access$100(org.joda.time.format.PeriodFormatterBuilder$Separator), java.util.List:subList(int-int), org.joda.time.format.PeriodFormatterBuilder:toFormatter(java.util.List-boolean-boolean), org.joda.time.format.PeriodFormatter:getPrinter(), org.joda.time.format.PeriodFormatter:getParser(), org.joda.time.format.PeriodFormatterBuilder$Separator:finish(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.format.PeriodFormatterBuilder:createComposite(java.util.List), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser)),
		org.joda.time.format.PeriodFormatterBuilder:createComposite(java.util.List) to listOf(java.util.List:size(), java.util.List:get(int), java.util.List:get(int), org.joda.time.format.PeriodFormatterBuilder$Composite:<init>(java.util.List)),
		org.joda.time.format.PeriodFormatterBuilder:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>()),
		org.joda.time.LocalDate$Property:<init>(org.joda.time.LocalDate-org.joda.time.DateTimeField) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:<init>()),
		org.joda.time.LocalDate$Property:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeObject(java.lang.Object), org.joda.time.DateTimeField:getType(), java.io.ObjectOutputStream:writeObject(java.lang.Object)),
		org.joda.time.LocalDate$Property:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readObject(), java.io.ObjectInputStream:readObject(), org.joda.time.LocalDate:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.LocalDate$Property:getMillis() to listOf(org.joda.time.LocalDate:getLocalMillis()),
		org.joda.time.LocalDate$Property:getChronology() to listOf(org.joda.time.LocalDate:getChronology()),
		org.joda.time.LocalDate$Property:addToCopy(int) to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:add(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:setCopy(int) to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:setCopy(java.lang.String) to listOf(org.joda.time.LocalDate$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.LocalDate$Property:withMaximumValue() to listOf(org.joda.time.LocalDate$Property:getMaximumValue(), org.joda.time.LocalDate$Property:setCopy(int)),
		org.joda.time.LocalDate$Property:withMinimumValue() to listOf(org.joda.time.LocalDate$Property:getMinimumValue(), org.joda.time.LocalDate$Property:setCopy(int)),
		org.joda.time.LocalDate$Property:roundFloorCopy() to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:roundCeilingCopy() to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:roundHalfFloorCopy() to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:roundHalfCeilingCopy() to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.LocalDate$Property:roundHalfEvenCopy() to listOf(org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.LocalDate:withLocalMillis(long)),
		org.joda.time.MonthDay:now() to listOf(org.joda.time.MonthDay:<init>()),
		org.joda.time.MonthDay:now(org.joda.time.DateTimeZone) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.MonthDay:<init>(org.joda.time.DateTimeZone)),
		org.joda.time.MonthDay:now(org.joda.time.Chronology) to listOf(java.lang.NullPointerException:<init>(java.lang.String), org.joda.time.MonthDay:<init>(org.joda.time.Chronology)),
		org.joda.time.MonthDay:parse(java.lang.String) to listOf(org.joda.time.MonthDay:parse(java.lang.String-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.MonthDay:parse(java.lang.String-org.joda.time.format.DateTimeFormatter) to listOf(org.joda.time.format.DateTimeFormatter:parseLocalDate(java.lang.String), org.joda.time.LocalDate:getMonthOfYear(), org.joda.time.LocalDate:getDayOfMonth(), org.joda.time.MonthDay:<init>(int-int)),
		org.joda.time.MonthDay:fromCalendarFields(java.util.Calendar) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Calendar:get(int), java.util.Calendar:get(int), org.joda.time.MonthDay:<init>(int-int)),
		org.joda.time.MonthDay:fromDateFields(java.util.Date) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Date:getMonth(), java.util.Date:getDate(), org.joda.time.MonthDay:<init>(int-int)),
		org.joda.time.MonthDay:<init>() to listOf(org.joda.time.base.BasePartial:<init>()),
		org.joda.time.MonthDay:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.MonthDay:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.MonthDay:<init>(long) to listOf(org.joda.time.base.BasePartial:<init>(long)),
		org.joda.time.MonthDay:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology)),
		org.joda.time.MonthDay:<init>(java.lang.Object) to listOf(org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.MonthDay:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.MonthDay:<init>(int-int) to listOf(org.joda.time.MonthDay:<init>(int-int-org.joda.time.Chronology)),
		org.joda.time.MonthDay:<init>(int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(int[]-org.joda.time.Chronology)),
		org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[]) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-int[])),
		org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-org.joda.time.Chronology)),
		org.joda.time.MonthDay:readResolve() to listOf(org.joda.time.MonthDay:getChronology(), org.joda.time.Chronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object), org.joda.time.MonthDay:getChronology(), org.joda.time.Chronology:withUTC(), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-org.joda.time.Chronology)),
		org.joda.time.MonthDay:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:monthOfYear(), org.joda.time.Chronology:dayOfMonth(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.MonthDay:getFieldTypes() to listOf(org.joda.time.DateTimeFieldType[]:clone()),
		org.joda.time.MonthDay:withChronologyRetainFields(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.MonthDay:getChronology(), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-org.joda.time.Chronology), org.joda.time.MonthDay:getValues(), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.MonthDay:withField(org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.MonthDay:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.MonthDay:getValue(int), org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay:getField(int), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.MonthDay:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay:getField(int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.MonthDay:getValues(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.MonthDay:indexOf(org.joda.time.DurationFieldType), org.joda.time.MonthDay:getField(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.MonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MonthDay:plusMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.MonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.MonthDay:plusDays(int) to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.MonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.MonthDay:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.MonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.MonthDay:minusMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.MonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.MonthDay:minusDays(int) to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.MonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.MonthDay:toLocalDate(int) to listOf(org.joda.time.MonthDay:getMonthOfYear(), org.joda.time.MonthDay:getDayOfMonth(), org.joda.time.MonthDay:getChronology(), org.joda.time.LocalDate:<init>(int-int-int-org.joda.time.Chronology)),
		org.joda.time.MonthDay:getMonthOfYear() to listOf(org.joda.time.MonthDay:getValue(int)),
		org.joda.time.MonthDay:getDayOfMonth() to listOf(org.joda.time.MonthDay:getValue(int)),
		org.joda.time.MonthDay:withMonthOfYear(int) to listOf(org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay:withDayOfMonth(int) to listOf(org.joda.time.MonthDay:getValues(), org.joda.time.MonthDay:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.MonthDay:<init>(org.joda.time.MonthDay-int[])),
		org.joda.time.MonthDay:property(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.MonthDay:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.MonthDay$Property:<init>(org.joda.time.MonthDay-int)),
		org.joda.time.MonthDay:monthOfYear() to listOf(org.joda.time.MonthDay$Property:<init>(org.joda.time.MonthDay-int)),
		org.joda.time.MonthDay:dayOfMonth() to listOf(org.joda.time.MonthDay$Property:<init>(org.joda.time.MonthDay-int)),
		org.joda.time.MonthDay:toString() to listOf(java.util.ArrayList:<init>(), org.joda.time.DateTimeFieldType:monthOfYear(), java.util.List:add(java.lang.Object), org.joda.time.DateTimeFieldType:dayOfMonth(), java.util.List:add(java.lang.Object), org.joda.time.format.ISODateTimeFormat:forFields(java.util.Collection-boolean-boolean), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.MonthDay:toString(java.lang.String) to listOf(org.joda.time.MonthDay:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.MonthDay:toString(java.lang.String-java.util.Locale) to listOf(org.joda.time.MonthDay:toString(), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:withLocale(java.util.Locale), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.MonthDay:<clinit>() to listOf(org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.DateTimeFieldType:dayOfMonth(), org.joda.time.format.DateTimeFormatterBuilder:<init>(), org.joda.time.format.ISODateTimeFormat:localDateParser(), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormat:forPattern(java.lang.String), org.joda.time.format.DateTimeFormatter:getParser(), org.joda.time.format.DateTimeFormatterBuilder:appendOptional(org.joda.time.format.DateTimeParser), org.joda.time.format.DateTimeFormatterBuilder:toFormatter()),
		org.joda.time.Period:parse(java.lang.String) to listOf(org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.Period:parse(java.lang.String-org.joda.time.format.PeriodFormatter)),
		org.joda.time.Period:parse(java.lang.String-org.joda.time.format.PeriodFormatter) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String)),
		org.joda.time.Period:years(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:months(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:weeks(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:days(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:hours(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:minutes(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:seconds(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:millis(int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:fieldDifference(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:size(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.ReadablePartial:getFieldType(int), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:getDurationType(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:getValue(int), org.joda.time.ReadablePartial:getValue(int), org.joda.time.PeriodType:forFields(org.joda.time.DurationFieldType[]), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>() to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(int-int-int-int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(int-int-int-int-int-int-int-int) to listOf(org.joda.time.PeriodType:standard(), org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(int-int-int-int-int-int-int-int-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(long) to listOf(org.joda.time.base.BasePeriod:<init>(long)),
		org.joda.time.Period:<init>(long-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(long-long) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(long-long-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(long-long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(long-long-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableInstant-org.joda.time.ReadableDuration-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(org.joda.time.ReadableDuration-org.joda.time.ReadableInstant-org.joda.time.PeriodType)),
		org.joda.time.Period:<init>(java.lang.Object) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(java.lang.Object-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePeriod:<init>(java.lang.Object-org.joda.time.PeriodType-org.joda.time.Chronology)),
		org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType) to listOf(org.joda.time.base.BasePeriod:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:getYears() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:getMonths() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:getWeeks() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:getDays() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:getHours() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:getMinutes() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:getSeconds() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:getMillis() to listOf(org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int)),
		org.joda.time.Period:withPeriodType(org.joda.time.PeriodType) to listOf(org.joda.time.DateTimeUtils:getPeriodType(org.joda.time.PeriodType), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:equals(java.lang.Object), org.joda.time.Period:<init>(java.lang.Object-org.joda.time.PeriodType)),
		org.joda.time.Period:withFields(org.joda.time.ReadablePeriod) to listOf(org.joda.time.Period:getValues(), org.joda.time.base.BasePeriod:mergePeriodInto(int[]-org.joda.time.ReadablePeriod), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withField(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.Period:getValues(), org.joda.time.base.BasePeriod:setFieldInto(int[]-org.joda.time.DurationFieldType-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.Period:getValues(), org.joda.time.base.BasePeriod:addFieldInto(int[]-org.joda.time.DurationFieldType-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withYears(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withMonths(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withWeeks(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withDays(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withHours(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withMinutes(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withSeconds(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:withMillis(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusYears(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusMonths(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusWeeks(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusDays(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusHours(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusMinutes(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusSeconds(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:plusMillis(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.Period:getValues(), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.ReadablePeriod:get(org.joda.time.DurationFieldType), org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:minusYears(int) to listOf(org.joda.time.Period:plusYears(int)),
		org.joda.time.Period:minusMonths(int) to listOf(org.joda.time.Period:plusMonths(int)),
		org.joda.time.Period:minusWeeks(int) to listOf(org.joda.time.Period:plusWeeks(int)),
		org.joda.time.Period:minusDays(int) to listOf(org.joda.time.Period:plusDays(int)),
		org.joda.time.Period:minusHours(int) to listOf(org.joda.time.Period:plusHours(int)),
		org.joda.time.Period:minusMinutes(int) to listOf(org.joda.time.Period:plusMinutes(int)),
		org.joda.time.Period:minusSeconds(int) to listOf(org.joda.time.Period:plusSeconds(int)),
		org.joda.time.Period:minusMillis(int) to listOf(org.joda.time.Period:plusMillis(int)),
		org.joda.time.Period:multipliedBy(int) to listOf(org.joda.time.Period:getValues(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Period:getPeriodType(), org.joda.time.Period:<init>(int[]-org.joda.time.PeriodType)),
		org.joda.time.Period:negated() to listOf(org.joda.time.Period:multipliedBy(int)),
		org.joda.time.Period:toStandardWeeks() to listOf(org.joda.time.Period:checkYearsAndMonths(java.lang.String), org.joda.time.Period:getMillis(), org.joda.time.Period:getSeconds(), org.joda.time.Period:getMinutes(), org.joda.time.Period:getHours(), org.joda.time.Period:getDays(), org.joda.time.Period:getWeeks(), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Period:toStandardDays() to listOf(org.joda.time.Period:checkYearsAndMonths(java.lang.String), org.joda.time.Period:getMillis(), org.joda.time.Period:getSeconds(), org.joda.time.Period:getMinutes(), org.joda.time.Period:getHours(), org.joda.time.Period:getDays(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getWeeks(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Days:days(int)),
		org.joda.time.Period:toStandardHours() to listOf(org.joda.time.Period:checkYearsAndMonths(java.lang.String), org.joda.time.Period:getMillis(), org.joda.time.Period:getSeconds(), org.joda.time.Period:getMinutes(), org.joda.time.Period:getHours(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getDays(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getWeeks(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Hours:hours(int)),
		org.joda.time.Period:toStandardMinutes() to listOf(org.joda.time.Period:checkYearsAndMonths(java.lang.String), org.joda.time.Period:getMillis(), org.joda.time.Period:getSeconds(), org.joda.time.Period:getMinutes(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getHours(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getDays(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getWeeks(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Period:toStandardSeconds() to listOf(org.joda.time.Period:checkYearsAndMonths(java.lang.String), org.joda.time.Period:getMillis(), org.joda.time.Period:getSeconds(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getMinutes(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getHours(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getDays(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.Period:getWeeks(), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Period:toStandardDuration() to listOf(org.joda.time.Period:checkYearsAndMonths(java.lang.String), org.joda.time.Period:getMillis(), org.joda.time.Period:getSeconds(), org.joda.time.Period:getMinutes(), org.joda.time.Period:getHours(), org.joda.time.Period:getDays(), org.joda.time.Period:getWeeks(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Period:checkYearsAndMonths(java.lang.String) to listOf(org.joda.time.Period:getMonths(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.UnsupportedOperationException:<init>(java.lang.String), org.joda.time.Period:getYears(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.Period:normalizedStandard() to listOf(org.joda.time.PeriodType:standard(), org.joda.time.Period:normalizedStandard(org.joda.time.PeriodType)),
		org.joda.time.Period:normalizedStandard(org.joda.time.PeriodType) to listOf(org.joda.time.DateTimeUtils:getPeriodType(org.joda.time.PeriodType), org.joda.time.Period:getMillis(), org.joda.time.Period:getSeconds(), org.joda.time.Period:getMinutes(), org.joda.time.Period:getHours(), org.joda.time.Period:getDays(), org.joda.time.Period:getWeeks(), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.Period:<init>(long-org.joda.time.PeriodType-org.joda.time.Chronology), org.joda.time.Period:getYears(), org.joda.time.Period:getMonths(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Period:withYears(int), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType), org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.Period:withMonths(int), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Period:toString(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.Period:<clinit>() to listOf(org.joda.time.Period:<init>()),
		org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Transition) to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-org.joda.time.tz.DateTimeZoneBuilder$Rule-int) to listOf(java.lang.Object:<init>(), org.joda.time.tz.DateTimeZoneBuilder$Rule:getNameKey(), org.joda.time.tz.DateTimeZoneBuilder$Rule:getSaveMillis()),
		org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-java.lang.String-int-int) to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.DateTimeZoneBuilder$Transition:withMillis(long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$Transition:<init>(long-java.lang.String-int-int)),
		org.joda.time.tz.DateTimeZoneBuilder$Transition:isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition) to listOf(java.lang.String:equals(java.lang.Object)),
		org.joda.time.tz.DateTimeZoneBuilder$Transition:toString() to listOf(java.lang.StringBuilder:<init>(), org.joda.time.DateTime:<init>(long-org.joda.time.DateTimeZone), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString()),
		org.joda.time.tz.ZoneInfoCompiler$Rule:<init>(java.util.StringTokenizer) to listOf(java.lang.Object:<init>(), java.util.StringTokenizer:countTokens(), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.StringTokenizer:nextToken(), java.lang.String:intern(), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseYear(java.lang.String-int), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseYear(java.lang.String-int), java.lang.IllegalArgumentException:<init>(), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseOptional(java.lang.String), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:<init>(java.util.StringTokenizer), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseTime(java.lang.String), java.util.StringTokenizer:nextToken(), org.joda.time.tz.ZoneInfoCompiler:parseOptional(java.lang.String)),
		org.joda.time.tz.ZoneInfoCompiler$Rule:<init>(org.joda.time.tz.ZoneInfoCompiler$Rule) to listOf(java.lang.Object:<init>()),
		org.joda.time.tz.ZoneInfoCompiler$Rule:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-int-java.lang.String) to listOf(org.joda.time.tz.ZoneInfoCompiler$Rule:formatName(java.lang.String-int-java.lang.String), org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:addRecurring(org.joda.time.tz.DateTimeZoneBuilder-java.lang.String-int-int-int)),
		org.joda.time.tz.ZoneInfoCompiler$Rule:formatName(java.lang.String-int-java.lang.String) to listOf(java.lang.String:indexOf(int), java.lang.String:substring(int-int), java.lang.String:intern(), java.lang.String:substring(int), java.lang.String:intern(), java.lang.String:indexOf(java.lang.String), java.lang.String:substring(int-int), java.lang.String:substring(int), java.lang.String:concat(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.String:intern()),
		org.joda.time.tz.ZoneInfoCompiler$Rule:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.UTCDateTimeZone:<init>() to listOf(org.joda.time.DateTimeZone:<init>(java.lang.String)),
		org.joda.time.UTCDateTimeZone:toTimeZone() to listOf(org.joda.time.UTCDateTimeZone:getID(), java.util.SimpleTimeZone:<init>(int-java.lang.String)),
		org.joda.time.UTCDateTimeZone:hashCode() to listOf(org.joda.time.UTCDateTimeZone:getID(), java.lang.String:hashCode()),
		org.joda.time.UTCDateTimeZone:<clinit>() to listOf(org.joda.time.UTCDateTimeZone:<init>()),
		org.joda.time.base.AbstractPeriod:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.base.AbstractPeriod:size() to listOf(org.joda.time.base.AbstractPeriod:getPeriodType(), org.joda.time.PeriodType:size()),
		org.joda.time.base.AbstractPeriod:getFieldType(int) to listOf(org.joda.time.base.AbstractPeriod:getPeriodType(), org.joda.time.PeriodType:getFieldType(int)),
		org.joda.time.base.AbstractPeriod:getFieldTypes() to listOf(org.joda.time.base.AbstractPeriod:size(), org.joda.time.base.AbstractPeriod:getFieldType(int)),
		org.joda.time.base.AbstractPeriod:getValues() to listOf(org.joda.time.base.AbstractPeriod:size(), org.joda.time.base.AbstractPeriod:getValue(int)),
		org.joda.time.base.AbstractPeriod:get(org.joda.time.DurationFieldType) to listOf(org.joda.time.base.AbstractPeriod:indexOf(org.joda.time.DurationFieldType), org.joda.time.base.AbstractPeriod:getValue(int)),
		org.joda.time.base.AbstractPeriod:isSupported(org.joda.time.DurationFieldType) to listOf(org.joda.time.base.AbstractPeriod:getPeriodType(), org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType)),
		org.joda.time.base.AbstractPeriod:indexOf(org.joda.time.DurationFieldType) to listOf(org.joda.time.base.AbstractPeriod:getPeriodType(), org.joda.time.PeriodType:indexOf(org.joda.time.DurationFieldType)),
		org.joda.time.base.AbstractPeriod:toPeriod() to listOf(org.joda.time.Period:<init>(java.lang.Object)),
		org.joda.time.base.AbstractPeriod:toMutablePeriod() to listOf(org.joda.time.MutablePeriod:<init>(java.lang.Object)),
		org.joda.time.base.AbstractPeriod:equals(java.lang.Object) to listOf(org.joda.time.base.AbstractPeriod:size(), org.joda.time.ReadablePeriod:size(), org.joda.time.base.AbstractPeriod:size(), org.joda.time.base.AbstractPeriod:getValue(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.base.AbstractPeriod:getFieldType(int), org.joda.time.ReadablePeriod:getFieldType(int)),
		org.joda.time.base.AbstractPeriod:hashCode() to listOf(org.joda.time.base.AbstractPeriod:size(), org.joda.time.base.AbstractPeriod:getValue(int), org.joda.time.base.AbstractPeriod:getFieldType(int), java.lang.Object:hashCode()),
		org.joda.time.base.AbstractPeriod:toString() to listOf(org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.format.PeriodFormatter:print(org.joda.time.ReadablePeriod)),
		org.joda.time.base.AbstractPeriod:toString(org.joda.time.format.PeriodFormatter) to listOf(org.joda.time.base.AbstractPeriod:toString(), org.joda.time.format.PeriodFormatter:print(org.joda.time.ReadablePeriod)),
		org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.ReadableInstant:getMillis(), org.joda.time.ReadableInstant:getMillis(), org.joda.time.DurationField:getDifference(long-long)),
		org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:size(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.ReadablePartial:getFieldType(int), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeUtils:isContiguous(org.joda.time.ReadablePartial), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.Chronology:get(org.joda.time.ReadablePeriod-long-long)),
		org.joda.time.base.BaseSingleFieldPeriod:standardPeriodIn(org.joda.time.ReadablePeriod-long) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.DurationFieldType:getField(org.joda.time.Chronology), org.joda.time.DurationField:isPrecise(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DurationField:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DurationField:getUnitMillis(), org.joda.time.field.FieldUtils:safeMultiply(long-int), org.joda.time.field.FieldUtils:safeAdd(long-long), org.joda.time.field.FieldUtils:safeToInt(long)),
		org.joda.time.base.BaseSingleFieldPeriod:<init>(int) to listOf(java.lang.Object:<init>()),
		org.joda.time.base.BaseSingleFieldPeriod:getFieldType(int) to listOf(java.lang.String:valueOf(int), java.lang.IndexOutOfBoundsException:<init>(java.lang.String), org.joda.time.base.BaseSingleFieldPeriod:getFieldType()),
		org.joda.time.base.BaseSingleFieldPeriod:getValue(int) to listOf(java.lang.String:valueOf(int), java.lang.IndexOutOfBoundsException:<init>(java.lang.String), org.joda.time.base.BaseSingleFieldPeriod:getValue()),
		org.joda.time.base.BaseSingleFieldPeriod:get(org.joda.time.DurationFieldType) to listOf(org.joda.time.base.BaseSingleFieldPeriod:getFieldType(), org.joda.time.base.BaseSingleFieldPeriod:getValue()),
		org.joda.time.base.BaseSingleFieldPeriod:isSupported(org.joda.time.DurationFieldType) to listOf(org.joda.time.base.BaseSingleFieldPeriod:getFieldType()),
		org.joda.time.base.BaseSingleFieldPeriod:toPeriod() to listOf(org.joda.time.Period:withFields(org.joda.time.ReadablePeriod)),
		org.joda.time.base.BaseSingleFieldPeriod:toMutablePeriod() to listOf(org.joda.time.MutablePeriod:<init>(), org.joda.time.MutablePeriod:add(org.joda.time.ReadablePeriod)),
		org.joda.time.base.BaseSingleFieldPeriod:equals(java.lang.Object) to listOf(org.joda.time.ReadablePeriod:getPeriodType(), org.joda.time.base.BaseSingleFieldPeriod:getPeriodType(), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.base.BaseSingleFieldPeriod:getValue()),
		org.joda.time.base.BaseSingleFieldPeriod:hashCode() to listOf(org.joda.time.base.BaseSingleFieldPeriod:getValue(), org.joda.time.base.BaseSingleFieldPeriod:getFieldType(), java.lang.Object:hashCode()),
		org.joda.time.base.BaseSingleFieldPeriod:compareTo(org.joda.time.base.BaseSingleFieldPeriod) to listOf(java.lang.Object:getClass(), java.lang.Object:getClass(), java.lang.StringBuilder:<init>(), java.lang.Object:getClass(), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.Object:getClass(), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.ClassCastException:<init>(java.lang.String), org.joda.time.base.BaseSingleFieldPeriod:getValue(), org.joda.time.base.BaseSingleFieldPeriod:getValue()),
		org.joda.time.base.BaseSingleFieldPeriod:compareTo(java.lang.Object) to listOf(org.joda.time.base.BaseSingleFieldPeriod:compareTo(org.joda.time.base.BaseSingleFieldPeriod)),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology-org.joda.time.DurationField) to listOf(org.joda.time.DateTimeFieldType:dayOfYear(), org.joda.time.field.PreciseDurationDateTimeField:<init>(org.joda.time.DateTimeFieldType-org.joda.time.DurationField)),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getDayOfYear(long)),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:getRangeDurationField() to listOf(org.joda.time.chrono.BasicChronology:years()),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue() to listOf(org.joda.time.chrono.BasicChronology:getDaysInYearMax()),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getDaysInYear(int)),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.ReadablePartial:isSupported(org.joda.time.DateTimeFieldType), org.joda.time.DateTimeFieldType:year(), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.chrono.BasicChronology:getDaysInYear(int), org.joda.time.chrono.BasicChronology:getDaysInYearMax()),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.DateTimeFieldType:year(), org.joda.time.chrono.BasicChronology:getDaysInYear(int), org.joda.time.chrono.BasicChronology:getDaysInYearMax()),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValueForSet(long-int) to listOf(org.joda.time.chrono.BasicChronology:getDaysInYearMax(), org.joda.time.chrono.BasicDayOfYearDateTimeField:getMaximumValue(long)),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:isLeap(long) to listOf(org.joda.time.chrono.BasicChronology:isLeapDay(long)),
		org.joda.time.chrono.BasicDayOfYearDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:dayOfYear()),
		org.joda.time.chrono.BasicYearDateTimeField:<init>(org.joda.time.chrono.BasicChronology) to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.chrono.BasicChronology:getAverageMillisPerYear(), org.joda.time.field.ImpreciseDateTimeField:<init>(org.joda.time.DateTimeFieldType-long)),
		org.joda.time.chrono.BasicYearDateTimeField:get(long) to listOf(org.joda.time.chrono.BasicChronology:getYear(long)),
		org.joda.time.chrono.BasicYearDateTimeField:add(long-int) to listOf(org.joda.time.chrono.BasicYearDateTimeField:get(long), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.chrono.BasicYearDateTimeField:set(long-int)),
		org.joda.time.chrono.BasicYearDateTimeField:add(long-long) to listOf(org.joda.time.field.FieldUtils:safeToInt(long), org.joda.time.chrono.BasicYearDateTimeField:add(long-int)),
		org.joda.time.chrono.BasicYearDateTimeField:addWrapField(long-int) to listOf(org.joda.time.chrono.BasicChronology:getYear(long), org.joda.time.chrono.BasicChronology:getMinYear(), org.joda.time.chrono.BasicChronology:getMaxYear(), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.chrono.BasicYearDateTimeField:set(long-int)),
		org.joda.time.chrono.BasicYearDateTimeField:set(long-int) to listOf(org.joda.time.chrono.BasicChronology:getMinYear(), org.joda.time.chrono.BasicChronology:getMaxYear(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.chrono.BasicChronology:setYear(long-int)),
		org.joda.time.chrono.BasicYearDateTimeField:setExtended(long-int) to listOf(org.joda.time.chrono.BasicChronology:getMinYear(), org.joda.time.chrono.BasicChronology:getMaxYear(), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.chrono.BasicChronology:setYear(long-int)),
		org.joda.time.chrono.BasicYearDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.chrono.BasicChronology:getYearDifference(long-long), org.joda.time.chrono.BasicChronology:getYearDifference(long-long)),
		org.joda.time.chrono.BasicYearDateTimeField:isLeap(long) to listOf(org.joda.time.chrono.BasicYearDateTimeField:get(long), org.joda.time.chrono.BasicChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicYearDateTimeField:getLeapAmount(long) to listOf(org.joda.time.chrono.BasicYearDateTimeField:get(long), org.joda.time.chrono.BasicChronology:isLeapYear(int)),
		org.joda.time.chrono.BasicYearDateTimeField:getLeapDurationField() to listOf(org.joda.time.chrono.BasicChronology:days()),
		org.joda.time.chrono.BasicYearDateTimeField:getMinimumValue() to listOf(org.joda.time.chrono.BasicChronology:getMinYear()),
		org.joda.time.chrono.BasicYearDateTimeField:getMaximumValue() to listOf(org.joda.time.chrono.BasicChronology:getMaxYear()),
		org.joda.time.chrono.BasicYearDateTimeField:roundFloor(long) to listOf(org.joda.time.chrono.BasicYearDateTimeField:get(long), org.joda.time.chrono.BasicChronology:getYearMillis(int)),
		org.joda.time.chrono.BasicYearDateTimeField:roundCeiling(long) to listOf(org.joda.time.chrono.BasicYearDateTimeField:get(long), org.joda.time.chrono.BasicChronology:getYearMillis(int), org.joda.time.chrono.BasicChronology:getYearMillis(int)),
		org.joda.time.chrono.BasicYearDateTimeField:remainder(long) to listOf(org.joda.time.chrono.BasicYearDateTimeField:roundFloor(long)),
		org.joda.time.chrono.BasicYearDateTimeField:readResolve() to listOf(org.joda.time.chrono.BasicChronology:year()),
		org.joda.time.chrono.GJChronology:convertByYear(long-org.joda.time.Chronology-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:year(), org.joda.time.DateTimeField:get(long), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:get(long), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:get(long), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:get(long), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int)),
		org.joda.time.chrono.GJChronology:convertByWeekyear(long-org.joda.time.Chronology-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:weekyear(), org.joda.time.Chronology:weekyear(), org.joda.time.DateTimeField:get(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.Chronology:weekOfWeekyear(), org.joda.time.DateTimeField:get(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:dayOfWeek(), org.joda.time.Chronology:dayOfWeek(), org.joda.time.DateTimeField:get(long), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:get(long), org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.chrono.GJChronology:getInstanceUTC() to listOf(org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int)),
		org.joda.time.chrono.GJChronology:getInstance() to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int)),
		org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int)),
		org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant) to listOf(org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int)),
		org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.ReadableInstant:toInstant(), org.joda.time.Instant:getMillis(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.LocalDate:<init>(long-org.joda.time.Chronology), org.joda.time.LocalDate:getYear(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.chrono.GJCacheKey:<init>(org.joda.time.DateTimeZone-org.joda.time.Instant-int), java.util.concurrent.ConcurrentHashMap:get(java.lang.Object), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone-int), org.joda.time.chrono.GJChronology:<init>(org.joda.time.chrono.JulianChronology-org.joda.time.chrono.GregorianChronology-org.joda.time.Instant), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int), org.joda.time.chrono.ZonedChronology:getInstance(org.joda.time.Chronology-org.joda.time.DateTimeZone), org.joda.time.chrono.GJChronology:<init>(org.joda.time.Chronology-org.joda.time.chrono.JulianChronology-org.joda.time.chrono.GregorianChronology-org.joda.time.Instant), java.util.concurrent.ConcurrentHashMap:putIfAbsent(java.lang.Object-java.lang.Object)),
		org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-long-int) to listOf(org.joda.time.Instant:getMillis(), org.joda.time.Instant:<init>(long), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int)),
		org.joda.time.chrono.GJChronology:<init>(org.joda.time.chrono.JulianChronology-org.joda.time.chrono.GregorianChronology-org.joda.time.Instant) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.GJChronology:<init>(org.joda.time.Chronology-org.joda.time.chrono.JulianChronology-org.joda.time.chrono.GregorianChronology-org.joda.time.Instant) to listOf(org.joda.time.chrono.AssembledChronology:<init>(org.joda.time.Chronology-java.lang.Object)),
		org.joda.time.chrono.GJChronology:readResolve() to listOf(org.joda.time.chrono.GJChronology:getZone(), org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int)),
		org.joda.time.chrono.GJChronology:getZone() to listOf(org.joda.time.chrono.GJChronology:getBase(), org.joda.time.Chronology:getZone()),
		org.joda.time.chrono.GJChronology:withUTC() to listOf(org.joda.time.chrono.GJChronology:withZone(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.GJChronology:withZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault(), org.joda.time.chrono.GJChronology:getZone(), org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-org.joda.time.ReadableInstant-int)),
		org.joda.time.chrono.GJChronology:getDateTimeMillis(int-int-int-int) to listOf(org.joda.time.chrono.GJChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.GregorianChronology:getDateTimeMillis(int-int-int-int), org.joda.time.chrono.JulianChronology:getDateTimeMillis(int-int-int-int), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.chrono.GJChronology:getDateTimeMillis(int-int-int-int-int-int-int) to listOf(org.joda.time.chrono.GJChronology:getBase(), org.joda.time.Chronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.chrono.GregorianChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.chrono.GregorianChronology:getDateTimeMillis(int-int-int-int-int-int-int), org.joda.time.chrono.JulianChronology:getDateTimeMillis(int-int-int-int-int-int-int), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek() to listOf(org.joda.time.chrono.GregorianChronology:getMinimumDaysInFirstWeek()),
		org.joda.time.chrono.GJChronology:equals(java.lang.Object) to listOf(org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.GJChronology:getZone(), org.joda.time.chrono.GJChronology:getZone(), org.joda.time.DateTimeZone:equals(java.lang.Object)),
		org.joda.time.chrono.GJChronology:hashCode() to listOf(java.lang.String:hashCode(), org.joda.time.chrono.GJChronology:getZone(), org.joda.time.DateTimeZone:hashCode(), org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), org.joda.time.Instant:hashCode()),
		org.joda.time.chrono.GJChronology:toString() to listOf(java.lang.StringBuffer:<init>(int), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(char), org.joda.time.chrono.GJChronology:getZone(), org.joda.time.DateTimeZone:getID(), java.lang.StringBuffer:append(java.lang.String), org.joda.time.Instant:getMillis(), java.lang.StringBuffer:append(java.lang.String), org.joda.time.chrono.GJChronology:withUTC(), org.joda.time.Chronology:dayOfYear(), org.joda.time.DateTimeField:remainder(long), org.joda.time.format.ISODateTimeFormat:date(), org.joda.time.format.ISODateTimeFormat:dateTime(), org.joda.time.chrono.GJChronology:withUTC(), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-long), org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), java.lang.StringBuffer:append(java.lang.String), org.joda.time.chrono.GJChronology:getMinimumDaysInFirstWeek(), java.lang.StringBuffer:append(int), java.lang.StringBuffer:append(char), java.lang.StringBuffer:toString()),
		org.joda.time.chrono.GJChronology:assemble(org.joda.time.chrono.AssembledChronology$Fields) to listOf(org.joda.time.chrono.GJChronology:getParam(), org.joda.time.Instant:getMillis(), org.joda.time.chrono.GJChronology:getBase(), org.joda.time.chrono.JulianChronology:getMinimumDaysInFirstWeek(), org.joda.time.chrono.GregorianChronology:getMinimumDaysInFirstWeek(), java.lang.IllegalArgumentException:<init>(), org.joda.time.chrono.GJChronology:julianToGregorianByYear(long), org.joda.time.chrono.AssembledChronology$Fields:copyFieldsFrom(org.joda.time.Chronology), org.joda.time.chrono.GregorianChronology:millisOfDay(), org.joda.time.DateTimeField:get(long), org.joda.time.chrono.JulianChronology:millisOfSecond(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:millisOfDay(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:secondOfMinute(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:secondOfDay(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:minuteOfHour(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:minuteOfDay(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:hourOfDay(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:hourOfHalfday(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:clockhourOfDay(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:clockhourOfHalfday(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:halfdayOfDay(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:era(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.chrono.JulianChronology:year(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.DateTimeField:getDurationField(), org.joda.time.chrono.JulianChronology:yearOfEra(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long), org.joda.time.chrono.JulianChronology:centuryOfEra(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long), org.joda.time.DateTimeField:getDurationField(), org.joda.time.chrono.JulianChronology:yearOfCentury(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-long), org.joda.time.chrono.JulianChronology:monthOfYear(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-long), org.joda.time.DateTimeField:getDurationField(), org.joda.time.chrono.JulianChronology:weekyear(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean), org.joda.time.DateTimeField:getDurationField(), org.joda.time.chrono.JulianChronology:weekyearOfCentury(), org.joda.time.chrono.GJChronology$ImpreciseCutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DurationField-long), org.joda.time.chrono.GregorianChronology:year(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.chrono.JulianChronology:dayOfYear(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean), org.joda.time.chrono.GregorianChronology:weekyear(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.chrono.JulianChronology:weekOfWeekyear(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-org.joda.time.DurationField-long-boolean), org.joda.time.chrono.JulianChronology:dayOfMonth(), org.joda.time.chrono.GJChronology$CutoverField:<init>(org.joda.time.chrono.GJChronology-org.joda.time.DateTimeField-org.joda.time.DateTimeField-long)),
		org.joda.time.chrono.GJChronology:julianToGregorianByYear(long) to listOf(org.joda.time.chrono.GJChronology:convertByYear(long-org.joda.time.Chronology-org.joda.time.Chronology)),
		org.joda.time.chrono.GJChronology:gregorianToJulianByYear(long) to listOf(org.joda.time.chrono.GJChronology:convertByYear(long-org.joda.time.Chronology-org.joda.time.Chronology)),
		org.joda.time.chrono.GJChronology:julianToGregorianByWeekyear(long) to listOf(org.joda.time.chrono.GJChronology:convertByWeekyear(long-org.joda.time.Chronology-org.joda.time.Chronology)),
		org.joda.time.chrono.GJChronology:gregorianToJulianByWeekyear(long) to listOf(org.joda.time.chrono.GJChronology:convertByWeekyear(long-org.joda.time.Chronology-org.joda.time.Chronology)),
		org.joda.time.chrono.GJChronology:<clinit>() to listOf(org.joda.time.Instant:<init>(long), java.util.concurrent.ConcurrentHashMap:<init>()),
		org.joda.time.chrono.ISOChronology$Stub:<init>(org.joda.time.DateTimeZone) to listOf(java.lang.Object:<init>()),
		org.joda.time.chrono.ISOChronology$Stub:readResolve() to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.chrono.ISOChronology$Stub:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeObject(java.lang.Object)),
		org.joda.time.chrono.ISOChronology$Stub:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readObject()),
		org.joda.time.chrono.LimitChronology$LimitException:<init>(org.joda.time.chrono.LimitChronology-java.lang.String-boolean) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.chrono.LimitChronology$LimitException:getMessage() to listOf(java.lang.StringBuffer:<init>(int), java.lang.StringBuffer:append(java.lang.String), java.lang.IllegalArgumentException:getMessage(), java.lang.StringBuffer:append(char), java.lang.StringBuffer:append(java.lang.String), java.lang.StringBuffer:append(java.lang.String), org.joda.time.format.ISODateTimeFormat:dateTime(), org.joda.time.chrono.LimitChronology:getBase(), org.joda.time.format.DateTimeFormatter:withChronology(org.joda.time.Chronology), java.lang.StringBuffer:append(java.lang.String), org.joda.time.chrono.LimitChronology:getLowerLimit(), org.joda.time.DateTime:getMillis(), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-long), java.lang.StringBuffer:append(java.lang.String), org.joda.time.chrono.LimitChronology:getUpperLimit(), org.joda.time.DateTime:getMillis(), org.joda.time.format.DateTimeFormatter:printTo(java.lang.StringBuffer-long), java.lang.StringBuffer:append(java.lang.String), org.joda.time.chrono.LimitChronology:getBase(), java.lang.StringBuffer:append(java.lang.Object), java.lang.StringBuffer:append(char), java.lang.StringBuffer:toString()),
		org.joda.time.chrono.LimitChronology$LimitException:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.LimitChronology$LimitException:getMessage(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.convert.CalendarConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.CalendarConverter:getChronology(java.lang.Object-org.joda.time.Chronology) to listOf(java.util.Calendar:getTimeZone(), org.joda.time.DateTimeZone:forTimeZone(java.util.TimeZone), org.joda.time.DateTimeZone:getDefault(), org.joda.time.convert.CalendarConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone)),
		org.joda.time.convert.CalendarConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone) to listOf(java.lang.Object:getClass(), java.lang.Class:getName(), java.lang.String:endsWith(java.lang.String), org.joda.time.chrono.BuddhistChronology:getInstance(org.joda.time.DateTimeZone), java.util.GregorianCalendar:getGregorianChange(), java.util.Date:getTime(), org.joda.time.chrono.GregorianChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.chrono.JulianChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.chrono.GJChronology:getInstance(org.joda.time.DateTimeZone-long-int), org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone)),
		org.joda.time.convert.CalendarConverter:getInstantMillis(java.lang.Object-org.joda.time.Chronology) to listOf(java.util.Calendar:getTime(), java.util.Date:getTime()),
		org.joda.time.convert.CalendarConverter:<clinit>() to listOf(org.joda.time.convert.CalendarConverter:<init>()),
		org.joda.time.convert.ReadablePartialConverter:<init>() to listOf(org.joda.time.convert.AbstractConverter:<init>()),
		org.joda.time.convert.ReadablePartialConverter:getChronology(java.lang.Object-org.joda.time.DateTimeZone) to listOf(org.joda.time.convert.ReadablePartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone)),
		org.joda.time.convert.ReadablePartialConverter:getChronology(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology)),
		org.joda.time.convert.ReadablePartialConverter:getPartialValues(org.joda.time.ReadablePartial-java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getFieldType(int), org.joda.time.ReadablePartial:get(org.joda.time.DateTimeFieldType), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.convert.ReadablePartialConverter:<clinit>() to listOf(org.joda.time.convert.ReadablePartialConverter:<init>()),
		org.joda.time.DateTimeConstants:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeUtils$SystemMillisProvider:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeUtils$SystemMillisProvider:getMillis() to listOf(java.lang.System:currentTimeMillis()),
		org.joda.time.DateTimeUtils:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.DateTimeUtils:currentTimeMillis() to listOf(org.joda.time.DateTimeUtils$MillisProvider:getMillis()),
		org.joda.time.DateTimeUtils:setCurrentMillisSystem() to listOf(org.joda.time.DateTimeUtils:checkPermission()),
		org.joda.time.DateTimeUtils:setCurrentMillisFixed(long) to listOf(org.joda.time.DateTimeUtils:checkPermission(), org.joda.time.DateTimeUtils$FixedMillisProvider:<init>(long)),
		org.joda.time.DateTimeUtils:setCurrentMillisOffset(long) to listOf(org.joda.time.DateTimeUtils:checkPermission(), org.joda.time.DateTimeUtils$OffsetMillisProvider:<init>(long)),
		org.joda.time.DateTimeUtils:setCurrentMillisProvider(org.joda.time.DateTimeUtils$MillisProvider) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeUtils:checkPermission()),
		org.joda.time.DateTimeUtils:checkPermission() to listOf(java.lang.System:getSecurityManager(), org.joda.time.JodaTimePermission:<init>(java.lang.String), java.lang.SecurityManager:checkPermission(java.security.Permission)),
		org.joda.time.DateTimeUtils:getInstantMillis(org.joda.time.ReadableInstant) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.ReadableInstant:getMillis()),
		org.joda.time.DateTimeUtils:getInstantChronology(org.joda.time.ReadableInstant) to listOf(org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.ReadableInstant:getChronology(), org.joda.time.chrono.ISOChronology:getInstance()),
		org.joda.time.DateTimeUtils:getIntervalChronology(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.ReadableInstant:getChronology(), org.joda.time.ReadableInstant:getChronology(), org.joda.time.chrono.ISOChronology:getInstance()),
		org.joda.time.DateTimeUtils:getIntervalChronology(org.joda.time.ReadableInterval) to listOf(org.joda.time.chrono.ISOChronology:getInstance(), org.joda.time.ReadableInterval:getChronology(), org.joda.time.chrono.ISOChronology:getInstance()),
		org.joda.time.DateTimeUtils:getReadableInterval(org.joda.time.ReadableInterval) to listOf(org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.Interval:<init>(long-long)),
		org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology) to listOf(org.joda.time.chrono.ISOChronology:getInstance()),
		org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getDefault()),
		org.joda.time.DateTimeUtils:getPeriodType(org.joda.time.PeriodType) to listOf(org.joda.time.PeriodType:standard()),
		org.joda.time.DateTimeUtils:getDurationMillis(org.joda.time.ReadableDuration) to listOf(org.joda.time.ReadableDuration:getMillis()),
		org.joda.time.DateTimeUtils:isContiguous(org.joda.time.ReadablePartial) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.ReadablePartial:size(), org.joda.time.ReadablePartial:getField(int), org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.DateTimeField:getRangeDurationField(), org.joda.time.DurationField:getType(), org.joda.time.DateTimeField:getDurationField(), org.joda.time.DurationField:getType()),
		org.joda.time.DateTimeUtils:getDateFormatSymbols(java.util.Locale) to listOf(java.lang.Class:getMethod(java.lang.String-java.lang.Class[]), java.lang.reflect.Method:invoke(java.lang.Object-java.lang.Object[]), java.text.DateFormatSymbols:<init>(java.util.Locale)),
		org.joda.time.DateTimeUtils:getDefaultTimeZoneNames() to listOf(java.util.concurrent.atomic.AtomicReference:get(), org.joda.time.DateTimeUtils:buildDefaultTimeZoneNames(), java.util.concurrent.atomic.AtomicReference:compareAndSet(java.lang.Object-java.lang.Object), java.util.concurrent.atomic.AtomicReference:get()),
		org.joda.time.DateTimeUtils:setDefaultTimeZoneNames(java.util.Map) to listOf(java.util.HashMap:<init>(java.util.Map), java.util.Collections:unmodifiableMap(java.util.Map), java.util.concurrent.atomic.AtomicReference:set(java.lang.Object)),
		org.joda.time.DateTimeUtils:buildDefaultTimeZoneNames() to listOf(java.util.LinkedHashMap:<init>(), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String), java.util.Collections:unmodifiableMap(java.util.Map)),
		org.joda.time.DateTimeUtils:put(java.util.Map-java.lang.String-java.lang.String) to listOf(org.joda.time.DateTimeZone:forID(java.lang.String), java.util.Map:put(java.lang.Object-java.lang.Object)),
		org.joda.time.DateTimeUtils:toJulianDayNumber(long) to listOf(org.joda.time.DateTimeUtils:toJulianDay(long), java.lang.Math:floor(double)),
		org.joda.time.DateTimeUtils:<clinit>() to listOf(org.joda.time.DateTimeUtils$SystemMillisProvider:<init>(), java.util.concurrent.atomic.AtomicReference:<init>()),
		org.joda.time.DurationFieldType$StandardDurationFieldType:<init>(java.lang.String-byte) to listOf(org.joda.time.DurationFieldType:<init>(java.lang.String)),
		org.joda.time.DurationFieldType$StandardDurationFieldType:getField(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:eras(), org.joda.time.Chronology:centuries(), org.joda.time.Chronology:weekyears(), org.joda.time.Chronology:years(), org.joda.time.Chronology:months(), org.joda.time.Chronology:weeks(), org.joda.time.Chronology:days(), org.joda.time.Chronology:halfdays(), org.joda.time.Chronology:hours(), org.joda.time.Chronology:minutes(), org.joda.time.Chronology:seconds(), org.joda.time.Chronology:millis(), java.lang.InternalError:<init>()),
		org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField) to listOf(org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType)),
		org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType)),
		org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DurationField-org.joda.time.DateTimeFieldType) to listOf(org.joda.time.DateTimeField:<init>(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:getType()),
		org.joda.time.field.DelegatedDateTimeField:getName() to listOf(org.joda.time.DateTimeFieldType:getName()),
		org.joda.time.field.DelegatedDateTimeField:isSupported() to listOf(org.joda.time.DateTimeField:isSupported()),
		org.joda.time.field.DelegatedDateTimeField:isLenient() to listOf(org.joda.time.DateTimeField:isLenient()),
		org.joda.time.field.DelegatedDateTimeField:get(long) to listOf(org.joda.time.DateTimeField:get(long)),
		org.joda.time.field.DelegatedDateTimeField:getAsText(long-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsText(long-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getAsText(long) to listOf(org.joda.time.DateTimeField:getAsText(long)),
		org.joda.time.field.DelegatedDateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsText(org.joda.time.ReadablePartial-int-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsText(org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getAsText(int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsText(int-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getAsShortText(long-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsShortText(long-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getAsShortText(long) to listOf(org.joda.time.DateTimeField:getAsShortText(long)),
		org.joda.time.field.DelegatedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsShortText(org.joda.time.ReadablePartial-int-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsShortText(org.joda.time.ReadablePartial-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getAsShortText(int-java.util.Locale) to listOf(org.joda.time.DateTimeField:getAsShortText(int-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:add(long-int) to listOf(org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.field.DelegatedDateTimeField:add(long-long) to listOf(org.joda.time.DateTimeField:add(long-long)),
		org.joda.time.field.DelegatedDateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.DelegatedDateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.DateTimeField:addWrapPartial(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.DelegatedDateTimeField:addWrapField(long-int) to listOf(org.joda.time.DateTimeField:addWrapField(long-int)),
		org.joda.time.field.DelegatedDateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.DateTimeField:addWrapField(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.DelegatedDateTimeField:getDifference(long-long) to listOf(org.joda.time.DateTimeField:getDifference(long-long)),
		org.joda.time.field.DelegatedDateTimeField:getDifferenceAsLong(long-long) to listOf(org.joda.time.DateTimeField:getDifferenceAsLong(long-long)),
		org.joda.time.field.DelegatedDateTimeField:set(long-int) to listOf(org.joda.time.DateTimeField:set(long-int)),
		org.joda.time.field.DelegatedDateTimeField:set(long-java.lang.String-java.util.Locale) to listOf(org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:set(long-java.lang.String) to listOf(org.joda.time.DateTimeField:set(long-java.lang.String)),
		org.joda.time.field.DelegatedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int) to listOf(org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int)),
		org.joda.time.field.DelegatedDateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale) to listOf(org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-java.lang.String-java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getDurationField() to listOf(org.joda.time.DateTimeField:getDurationField()),
		org.joda.time.field.DelegatedDateTimeField:getRangeDurationField() to listOf(org.joda.time.DateTimeField:getRangeDurationField()),
		org.joda.time.field.DelegatedDateTimeField:isLeap(long) to listOf(org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.field.DelegatedDateTimeField:getLeapAmount(long) to listOf(org.joda.time.DateTimeField:getLeapAmount(long)),
		org.joda.time.field.DelegatedDateTimeField:getLeapDurationField() to listOf(org.joda.time.DateTimeField:getLeapDurationField()),
		org.joda.time.field.DelegatedDateTimeField:getMinimumValue() to listOf(org.joda.time.DateTimeField:getMinimumValue()),
		org.joda.time.field.DelegatedDateTimeField:getMinimumValue(long) to listOf(org.joda.time.DateTimeField:getMinimumValue(long)),
		org.joda.time.field.DelegatedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial)),
		org.joda.time.field.DelegatedDateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.DateTimeField:getMinimumValue(org.joda.time.ReadablePartial-int[])),
		org.joda.time.field.DelegatedDateTimeField:getMaximumValue() to listOf(org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.DelegatedDateTimeField:getMaximumValue(long) to listOf(org.joda.time.DateTimeField:getMaximumValue(long)),
		org.joda.time.field.DelegatedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial) to listOf(org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial)),
		org.joda.time.field.DelegatedDateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[]) to listOf(org.joda.time.DateTimeField:getMaximumValue(org.joda.time.ReadablePartial-int[])),
		org.joda.time.field.DelegatedDateTimeField:getMaximumTextLength(java.util.Locale) to listOf(org.joda.time.DateTimeField:getMaximumTextLength(java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:getMaximumShortTextLength(java.util.Locale) to listOf(org.joda.time.DateTimeField:getMaximumShortTextLength(java.util.Locale)),
		org.joda.time.field.DelegatedDateTimeField:roundFloor(long) to listOf(org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.field.DelegatedDateTimeField:roundCeiling(long) to listOf(org.joda.time.DateTimeField:roundCeiling(long)),
		org.joda.time.field.DelegatedDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.DateTimeField:roundHalfFloor(long)),
		org.joda.time.field.DelegatedDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.DateTimeField:roundHalfCeiling(long)),
		org.joda.time.field.DelegatedDateTimeField:roundHalfEven(long) to listOf(org.joda.time.DateTimeField:roundHalfEven(long)),
		org.joda.time.field.DelegatedDateTimeField:remainder(long) to listOf(org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.field.DelegatedDateTimeField:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.field.DelegatedDateTimeField:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-int) to listOf(org.joda.time.DateTimeField:getType(), org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int-int-int)),
		org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int-int-int)),
		org.joda.time.field.OffsetDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType-int-int-int) to listOf(org.joda.time.field.DecoratedDateTimeField:<init>(org.joda.time.DateTimeField-org.joda.time.DateTimeFieldType), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.DateTimeField:getMinimumValue(), org.joda.time.DateTimeField:getMinimumValue(), org.joda.time.DateTimeField:getMaximumValue(), org.joda.time.DateTimeField:getMaximumValue()),
		org.joda.time.field.OffsetDateTimeField:get(long) to listOf(org.joda.time.field.DecoratedDateTimeField:get(long)),
		org.joda.time.field.OffsetDateTimeField:add(long-int) to listOf(org.joda.time.field.DecoratedDateTimeField:add(long-int), org.joda.time.field.OffsetDateTimeField:get(long), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int)),
		org.joda.time.field.OffsetDateTimeField:add(long-long) to listOf(org.joda.time.field.DecoratedDateTimeField:add(long-long), org.joda.time.field.OffsetDateTimeField:get(long), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int)),
		org.joda.time.field.OffsetDateTimeField:addWrapField(long-int) to listOf(org.joda.time.field.OffsetDateTimeField:get(long), org.joda.time.field.FieldUtils:getWrappedValue(int-int-int-int), org.joda.time.field.OffsetDateTimeField:set(long-int)),
		org.joda.time.field.OffsetDateTimeField:set(long-int) to listOf(org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.DecoratedDateTimeField:set(long-int)),
		org.joda.time.field.OffsetDateTimeField:isLeap(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:isLeap(long)),
		org.joda.time.field.OffsetDateTimeField:getLeapAmount(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getLeapAmount(long)),
		org.joda.time.field.OffsetDateTimeField:getLeapDurationField() to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:getLeapDurationField()),
		org.joda.time.field.OffsetDateTimeField:roundFloor(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundFloor(long)),
		org.joda.time.field.OffsetDateTimeField:roundCeiling(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundCeiling(long)),
		org.joda.time.field.OffsetDateTimeField:roundHalfFloor(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfFloor(long)),
		org.joda.time.field.OffsetDateTimeField:roundHalfCeiling(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfCeiling(long)),
		org.joda.time.field.OffsetDateTimeField:roundHalfEven(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:roundHalfEven(long)),
		org.joda.time.field.OffsetDateTimeField:remainder(long) to listOf(org.joda.time.field.OffsetDateTimeField:getWrappedField(), org.joda.time.DateTimeField:remainder(long)),
		org.joda.time.field.StrictDateTimeField:getInstance(org.joda.time.DateTimeField) to listOf(org.joda.time.field.LenientDateTimeField:getWrappedField(), org.joda.time.DateTimeField:isLenient(), org.joda.time.field.StrictDateTimeField:<init>(org.joda.time.DateTimeField)),
		org.joda.time.field.StrictDateTimeField:<init>(org.joda.time.DateTimeField) to listOf(org.joda.time.field.DelegatedDateTimeField:<init>(org.joda.time.DateTimeField)),
		org.joda.time.field.StrictDateTimeField:set(long-int) to listOf(org.joda.time.field.StrictDateTimeField:getMinimumValue(long), org.joda.time.field.StrictDateTimeField:getMaximumValue(long), org.joda.time.field.FieldUtils:verifyValueBounds(org.joda.time.DateTimeField-int-int-int), org.joda.time.field.DelegatedDateTimeField:set(long-int)),
		org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:<init>(char) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(java.lang.Appendable:append(char)),
		org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(java.lang.Appendable:append(char)),
		org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(java.lang.CharSequence:length(), java.lang.CharSequence:charAt(int), java.lang.Character:toUpperCase(char), java.lang.Character:toUpperCase(char), java.lang.Character:toLowerCase(char), java.lang.Character:toLowerCase(char)),
		org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:<init>(java.lang.String) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:estimatePrintedLength() to listOf(java.lang.String:length()),
		org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:printTo(java.lang.Appendable-long-org.joda.time.Chronology-int-org.joda.time.DateTimeZone-java.util.Locale) to listOf(java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:printTo(java.lang.Appendable-org.joda.time.ReadablePartial-java.util.Locale) to listOf(java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:estimateParsedLength() to listOf(java.lang.String:length()),
		org.joda.time.format.DateTimeFormatterBuilder$StringLiteral:parseInto(org.joda.time.format.DateTimeParserBucket-java.lang.CharSequence-int) to listOf(org.joda.time.format.DateTimeFormatterBuilder:csStartsWithIgnoreCase(java.lang.CharSequence-int-java.lang.String), java.lang.String:length()),
		org.joda.time.format.FormatUtils:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-int-int) to listOf(org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int)),
		org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int) to listOf(java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Appendable:append(java.lang.CharSequence), java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Math:log(double), java.lang.Appendable:append(char), java.lang.Integer:toString(int), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.StringBuffer-long-int) to listOf(org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-long-int)),
		org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-long-int) to listOf(org.joda.time.format.FormatUtils:appendPaddedInteger(java.lang.Appendable-int-int), java.lang.Long:toString(long), java.lang.Appendable:append(java.lang.CharSequence), java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Appendable:append(java.lang.CharSequence), java.lang.Math:log(double), java.lang.Appendable:append(char), java.lang.Long:toString(long), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.FormatUtils:writePaddedInteger(java.io.Writer-int-int) to listOf(java.io.Writer:write(int), java.io.Writer:write(int), java.io.Writer:write(java.lang.String), java.io.Writer:write(int), java.io.Writer:write(int), java.io.Writer:write(int), java.io.Writer:write(int), java.io.Writer:write(int), java.lang.Math:log(double), java.io.Writer:write(int), java.lang.Integer:toString(int), java.io.Writer:write(java.lang.String)),
		org.joda.time.format.FormatUtils:writePaddedInteger(java.io.Writer-long-int) to listOf(org.joda.time.format.FormatUtils:writePaddedInteger(java.io.Writer-int-int), java.lang.Long:toString(long), java.io.Writer:write(java.lang.String), java.io.Writer:write(int), java.io.Writer:write(int), java.io.Writer:write(java.lang.String), java.lang.Math:log(double), java.io.Writer:write(int), java.lang.Long:toString(long), java.io.Writer:write(java.lang.String)),
		org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.StringBuffer-int) to listOf(org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-int)),
		org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-int) to listOf(java.lang.Appendable:append(char), java.lang.Appendable:append(java.lang.CharSequence), java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Appendable:append(char), java.lang.Integer:toString(int), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.StringBuffer-long) to listOf(org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-long)),
		org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-long) to listOf(org.joda.time.format.FormatUtils:appendUnpaddedInteger(java.lang.Appendable-int), java.lang.Long:toString(long), java.lang.Appendable:append(java.lang.CharSequence)),
		org.joda.time.format.FormatUtils:writeUnpaddedInteger(java.io.Writer-int) to listOf(java.io.Writer:write(int), java.io.Writer:write(java.lang.String), java.io.Writer:write(int), java.io.Writer:write(int), java.io.Writer:write(int), java.lang.Integer:toString(int), java.io.Writer:write(java.lang.String)),
		org.joda.time.format.FormatUtils:writeUnpaddedInteger(java.io.Writer-long) to listOf(org.joda.time.format.FormatUtils:writeUnpaddedInteger(java.io.Writer-int), java.lang.Long:toString(long), java.io.Writer:write(java.lang.String)),
		org.joda.time.format.FormatUtils:calculateDigitCount(long) to listOf(org.joda.time.format.FormatUtils:calculateDigitCount(long), java.lang.Math:log(double)),
		org.joda.time.format.FormatUtils:parseTwoDigits(java.lang.CharSequence-int) to listOf(java.lang.CharSequence:charAt(int), java.lang.CharSequence:charAt(int)),
		org.joda.time.format.FormatUtils:createErrorMessage(java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:substring(int-int), java.lang.String:concat(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.String:length(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.String:substring(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.format.FormatUtils:<clinit>() to listOf(java.lang.Math:log(double)),
		org.joda.time.format.PeriodFormat$DynamicWordBased:<init>(org.joda.time.format.PeriodFormatter) to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormat$DynamicWordBased:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale) to listOf(org.joda.time.format.PeriodFormat$DynamicWordBased:getPrinter(java.util.Locale), org.joda.time.format.PeriodPrinter:countFieldsToPrint(org.joda.time.ReadablePeriod-int-java.util.Locale)),
		org.joda.time.format.PeriodFormat$DynamicWordBased:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodFormat$DynamicWordBased:getPrinter(java.util.Locale), org.joda.time.format.PeriodPrinter:calculatePrintedLength(org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormat$DynamicWordBased:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodFormat$DynamicWordBased:getPrinter(java.util.Locale), org.joda.time.format.PeriodPrinter:printTo(java.lang.StringBuffer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormat$DynamicWordBased:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale) to listOf(org.joda.time.format.PeriodFormat$DynamicWordBased:getPrinter(java.util.Locale), org.joda.time.format.PeriodPrinter:printTo(java.io.Writer-org.joda.time.ReadablePeriod-java.util.Locale)),
		org.joda.time.format.PeriodFormat$DynamicWordBased:getPrinter(java.util.Locale) to listOf(org.joda.time.format.PeriodFormatter:getLocale(), java.util.Locale:equals(java.lang.Object), org.joda.time.format.PeriodFormat:wordBased(java.util.Locale), org.joda.time.format.PeriodFormatter:getPrinter(), org.joda.time.format.PeriodFormatter:getPrinter()),
		org.joda.time.format.PeriodFormat$DynamicWordBased:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale) to listOf(org.joda.time.format.PeriodFormat$DynamicWordBased:getParser(java.util.Locale), org.joda.time.format.PeriodParser:parseInto(org.joda.time.ReadWritablePeriod-java.lang.String-int-java.util.Locale)),
		org.joda.time.format.PeriodFormat$DynamicWordBased:getParser(java.util.Locale) to listOf(org.joda.time.format.PeriodFormatter:getLocale(), java.util.Locale:equals(java.lang.Object), org.joda.time.format.PeriodFormat:wordBased(java.util.Locale), org.joda.time.format.PeriodFormatter:getParser(), org.joda.time.format.PeriodFormatter:getParser()),
		org.joda.time.format.PeriodFormat:<init>() to listOf(java.lang.Object:<init>()),
		org.joda.time.format.PeriodFormat:getDefault() to listOf(org.joda.time.format.PeriodFormat:wordBased(java.util.Locale)),
		org.joda.time.format.PeriodFormat:wordBased() to listOf(java.util.Locale:getDefault(), org.joda.time.format.PeriodFormat:wordBased(java.util.Locale)),
		org.joda.time.format.PeriodFormat:wordBased(java.util.Locale) to listOf(java.util.concurrent.ConcurrentMap:get(java.lang.Object), org.joda.time.format.PeriodFormat:buildWordBased(java.util.Locale), org.joda.time.format.PeriodFormat$DynamicWordBased:<init>(org.joda.time.format.PeriodFormatter), org.joda.time.format.PeriodFormatter:<init>(org.joda.time.format.PeriodPrinter-org.joda.time.format.PeriodParser-java.util.Locale-org.joda.time.PeriodType), java.util.concurrent.ConcurrentMap:putIfAbsent(java.lang.Object-java.lang.Object)),
		org.joda.time.format.PeriodFormat:buildWordBased(java.util.Locale) to listOf(java.util.ResourceBundle:getBundle(java.lang.String-java.util.Locale), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), org.joda.time.format.PeriodFormat:buildRegExFormatter(java.util.ResourceBundle-java.util.Locale), org.joda.time.format.PeriodFormat:buildNonRegExFormatter(java.util.ResourceBundle-java.util.Locale)),
		org.joda.time.format.PeriodFormat:buildRegExFormatter(java.util.ResourceBundle-java.util.Locale) to listOf(org.joda.time.format.PeriodFormat:retrieveVariants(java.util.ResourceBundle), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.format.PeriodFormatterBuilder:appendYears(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendMonths(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendWeeks(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendDays(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendHours(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendSeconds(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendMillis(), org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.lang.String:split(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String[]-java.lang.String[]), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), org.joda.time.format.PeriodFormatterBuilder:toFormatter(), org.joda.time.format.PeriodFormatter:withLocale(java.util.Locale)),
		org.joda.time.format.PeriodFormat:buildNonRegExFormatter(java.util.ResourceBundle-java.util.Locale) to listOf(org.joda.time.format.PeriodFormat:retrieveVariants(java.util.ResourceBundle), org.joda.time.format.PeriodFormatterBuilder:<init>(), org.joda.time.format.PeriodFormatterBuilder:appendYears(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendMonths(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendWeeks(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendDays(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendHours(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendMinutes(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendSeconds(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSeparator(java.lang.String-java.lang.String-java.lang.String[]), org.joda.time.format.PeriodFormatterBuilder:appendMillis(), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), org.joda.time.format.PeriodFormatterBuilder:appendSuffix(java.lang.String-java.lang.String), org.joda.time.format.PeriodFormatterBuilder:toFormatter(), org.joda.time.format.PeriodFormatter:withLocale(java.util.Locale)),
		org.joda.time.format.PeriodFormat:retrieveVariants(java.util.ResourceBundle) to listOf(java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String), java.util.ResourceBundle:getString(java.lang.String)),
		org.joda.time.format.PeriodFormat:containsKey(java.util.ResourceBundle-java.lang.String) to listOf(java.util.ResourceBundle:getKeys(), java.util.Enumeration:hasMoreElements(), java.util.Enumeration:nextElement(), java.lang.String:equals(java.lang.Object)),
		org.joda.time.format.PeriodFormat:<clinit>() to listOf(java.util.concurrent.ConcurrentHashMap:<init>()),
		org.joda.time.format.PeriodFormatterBuilder$PluralAffix:<init>(java.lang.String-java.lang.String) to listOf(org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix:<init>()),
		org.joda.time.format.PeriodFormatterBuilder$PluralAffix:calculatePrintedLength(int) to listOf(java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$PluralAffix:printTo(java.lang.StringBuffer-int) to listOf(java.lang.StringBuffer:append(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$PluralAffix:printTo(java.io.Writer-int) to listOf(java.io.Writer:write(java.lang.String)),
		org.joda.time.format.PeriodFormatterBuilder$PluralAffix:parse(java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:length(), java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:matchesOtherAffix(int-java.lang.String-int), java.lang.String:length(), java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:matchesOtherAffix(int-java.lang.String-int), java.lang.String:length()),
		org.joda.time.format.PeriodFormatterBuilder$PluralAffix:scan(java.lang.String-int) to listOf(java.lang.String:length(), java.lang.String:length(), java.lang.String:length(), java.lang.String:length(), java.lang.String:length(), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:matchesOtherAffix(int-java.lang.String-int), java.lang.String:regionMatches(boolean-int-java.lang.String-int-int), java.lang.String:length(), org.joda.time.format.PeriodFormatterBuilder$PluralAffix:matchesOtherAffix(int-java.lang.String-int)),
		org.joda.time.Hours:hours(int) to listOf(org.joda.time.Hours:<init>(int)),
		org.joda.time.Hours:hoursBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:hoursBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:hours(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.LocalTime:getLocalMillis(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.Hours:hours(int), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:hoursIn(org.joda.time.ReadableInterval) to listOf(org.joda.time.ReadableInterval:getStart(), org.joda.time.ReadableInterval:getEnd(), org.joda.time.DurationFieldType:hours(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:standardHoursIn(org.joda.time.ReadablePeriod) to listOf(org.joda.time.base.BaseSingleFieldPeriod:standardPeriodIn(org.joda.time.ReadablePeriod-long), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:parseHours(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:getHours(), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:<init>(int) to listOf(org.joda.time.base.BaseSingleFieldPeriod:<init>(int)),
		org.joda.time.Hours:readResolve() to listOf(org.joda.time.Hours:getValue(), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:getFieldType() to listOf(org.joda.time.DurationFieldType:hours()),
		org.joda.time.Hours:getPeriodType() to listOf(org.joda.time.PeriodType:hours()),
		org.joda.time.Hours:toStandardWeeks() to listOf(org.joda.time.Hours:getValue(), org.joda.time.Weeks:weeks(int)),
		org.joda.time.Hours:toStandardDays() to listOf(org.joda.time.Hours:getValue(), org.joda.time.Days:days(int)),
		org.joda.time.Hours:toStandardMinutes() to listOf(org.joda.time.Hours:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Minutes:minutes(int)),
		org.joda.time.Hours:toStandardSeconds() to listOf(org.joda.time.Hours:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Seconds:seconds(int)),
		org.joda.time.Hours:toStandardDuration() to listOf(org.joda.time.Hours:getValue(), org.joda.time.Duration:<init>(long)),
		org.joda.time.Hours:getHours() to listOf(org.joda.time.Hours:getValue()),
		org.joda.time.Hours:plus(int) to listOf(org.joda.time.Hours:getValue(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:plus(org.joda.time.Hours) to listOf(org.joda.time.Hours:getValue(), org.joda.time.Hours:plus(int)),
		org.joda.time.Hours:minus(int) to listOf(org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Hours:plus(int)),
		org.joda.time.Hours:minus(org.joda.time.Hours) to listOf(org.joda.time.Hours:getValue(), org.joda.time.Hours:minus(int)),
		org.joda.time.Hours:multipliedBy(int) to listOf(org.joda.time.Hours:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:dividedBy(int) to listOf(org.joda.time.Hours:getValue(), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:negated() to listOf(org.joda.time.Hours:getValue(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Hours:hours(int)),
		org.joda.time.Hours:isGreaterThan(org.joda.time.Hours) to listOf(org.joda.time.Hours:getValue(), org.joda.time.Hours:getValue(), org.joda.time.Hours:getValue()),
		org.joda.time.Hours:isLessThan(org.joda.time.Hours) to listOf(org.joda.time.Hours:getValue(), org.joda.time.Hours:getValue(), org.joda.time.Hours:getValue()),
		org.joda.time.Hours:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Hours:getValue(), java.lang.String:valueOf(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Hours:<clinit>() to listOf(org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.Hours:<init>(int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.PeriodType:hours(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType)),
		org.joda.time.LocalDateTime$Property:<init>(org.joda.time.LocalDateTime-org.joda.time.DateTimeField) to listOf(org.joda.time.field.AbstractReadableInstantFieldProperty:<init>()),
		org.joda.time.LocalDateTime$Property:writeObject(java.io.ObjectOutputStream) to listOf(java.io.ObjectOutputStream:writeObject(java.lang.Object), org.joda.time.DateTimeField:getType(), java.io.ObjectOutputStream:writeObject(java.lang.Object)),
		org.joda.time.LocalDateTime$Property:readObject(java.io.ObjectInputStream) to listOf(java.io.ObjectInputStream:readObject(), java.io.ObjectInputStream:readObject(), org.joda.time.LocalDateTime:getChronology(), org.joda.time.DateTimeFieldType:getField(org.joda.time.Chronology)),
		org.joda.time.LocalDateTime$Property:getMillis() to listOf(org.joda.time.LocalDateTime:getLocalMillis()),
		org.joda.time.LocalDateTime$Property:getChronology() to listOf(org.joda.time.LocalDateTime:getChronology()),
		org.joda.time.LocalDateTime$Property:addToCopy(int) to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:add(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:addToCopy(long) to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:add(long-long), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:addWrapFieldToCopy(int) to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:addWrapField(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:setCopy(int) to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-int), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:setCopy(java.lang.String-java.util.Locale) to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:setCopy(java.lang.String) to listOf(org.joda.time.LocalDateTime$Property:setCopy(java.lang.String-java.util.Locale)),
		org.joda.time.LocalDateTime$Property:withMaximumValue() to listOf(org.joda.time.LocalDateTime$Property:getMaximumValue(), org.joda.time.LocalDateTime$Property:setCopy(int)),
		org.joda.time.LocalDateTime$Property:withMinimumValue() to listOf(org.joda.time.LocalDateTime$Property:getMinimumValue(), org.joda.time.LocalDateTime$Property:setCopy(int)),
		org.joda.time.LocalDateTime$Property:roundFloorCopy() to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:roundFloor(long), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:roundCeilingCopy() to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:roundCeiling(long), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:roundHalfFloorCopy() to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:roundHalfFloor(long), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:roundHalfCeilingCopy() to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:roundHalfCeiling(long), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.LocalDateTime$Property:roundHalfEvenCopy() to listOf(org.joda.time.LocalDateTime:getLocalMillis(), org.joda.time.DateTimeField:roundHalfEven(long), org.joda.time.LocalDateTime:withLocalMillis(long)),
		org.joda.time.Months:months(int) to listOf(org.joda.time.Months:<init>(int)),
		org.joda.time.Months:monthsBetween(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Months:months(int)),
		org.joda.time.Months:monthsBetween(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial) to listOf(org.joda.time.ReadablePartial:getChronology(), org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:months(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.LocalDate:getLocalMillis(), org.joda.time.DurationField:getDifference(long-long), org.joda.time.Months:months(int), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadablePartial-org.joda.time.ReadablePartial-org.joda.time.ReadablePeriod), org.joda.time.Months:months(int)),
		org.joda.time.Months:monthsIn(org.joda.time.ReadableInterval) to listOf(org.joda.time.ReadableInterval:getStart(), org.joda.time.ReadableInterval:getEnd(), org.joda.time.DurationFieldType:months(), org.joda.time.base.BaseSingleFieldPeriod:between(org.joda.time.ReadableInstant-org.joda.time.ReadableInstant-org.joda.time.DurationFieldType), org.joda.time.Months:months(int)),
		org.joda.time.Months:parseMonths(java.lang.String) to listOf(org.joda.time.format.PeriodFormatter:parsePeriod(java.lang.String), org.joda.time.Period:getMonths(), org.joda.time.Months:months(int)),
		org.joda.time.Months:<init>(int) to listOf(org.joda.time.base.BaseSingleFieldPeriod:<init>(int)),
		org.joda.time.Months:readResolve() to listOf(org.joda.time.Months:getValue(), org.joda.time.Months:months(int)),
		org.joda.time.Months:getFieldType() to listOf(org.joda.time.DurationFieldType:months()),
		org.joda.time.Months:getPeriodType() to listOf(org.joda.time.PeriodType:months()),
		org.joda.time.Months:getMonths() to listOf(org.joda.time.Months:getValue()),
		org.joda.time.Months:plus(int) to listOf(org.joda.time.Months:getValue(), org.joda.time.field.FieldUtils:safeAdd(int-int), org.joda.time.Months:months(int)),
		org.joda.time.Months:plus(org.joda.time.Months) to listOf(org.joda.time.Months:getValue(), org.joda.time.Months:plus(int)),
		org.joda.time.Months:minus(int) to listOf(org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Months:plus(int)),
		org.joda.time.Months:minus(org.joda.time.Months) to listOf(org.joda.time.Months:getValue(), org.joda.time.Months:minus(int)),
		org.joda.time.Months:multipliedBy(int) to listOf(org.joda.time.Months:getValue(), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.Months:months(int)),
		org.joda.time.Months:dividedBy(int) to listOf(org.joda.time.Months:getValue(), org.joda.time.Months:months(int)),
		org.joda.time.Months:negated() to listOf(org.joda.time.Months:getValue(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.Months:months(int)),
		org.joda.time.Months:isGreaterThan(org.joda.time.Months) to listOf(org.joda.time.Months:getValue(), org.joda.time.Months:getValue(), org.joda.time.Months:getValue()),
		org.joda.time.Months:isLessThan(org.joda.time.Months) to listOf(org.joda.time.Months:getValue(), org.joda.time.Months:getValue(), org.joda.time.Months:getValue()),
		org.joda.time.Months:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.Months:getValue(), java.lang.String:valueOf(int), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.Months:<clinit>() to listOf(org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.Months:<init>(int), org.joda.time.format.ISOPeriodFormat:standard(), org.joda.time.PeriodType:months(), org.joda.time.format.PeriodFormatter:withParseType(org.joda.time.PeriodType)),
		org.joda.time.PeriodType:standard() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:months(), org.joda.time.DurationFieldType:weeks(), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:yearMonthDayTime() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:months(), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:yearMonthDay() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:months(), org.joda.time.DurationFieldType:days(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:yearWeekDayTime() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:weeks(), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:yearWeekDay() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:weeks(), org.joda.time.DurationFieldType:days(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:yearDayTime() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:yearDay() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.DurationFieldType:days(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:dayTime() to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:time() to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.DurationFieldType:minutes(), org.joda.time.DurationFieldType:seconds(), org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:years() to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:months() to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:weeks() to listOf(org.joda.time.DurationFieldType:weeks(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:days() to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:hours() to listOf(org.joda.time.DurationFieldType:hours(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:minutes() to listOf(org.joda.time.DurationFieldType:minutes(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:seconds() to listOf(org.joda.time.DurationFieldType:seconds(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:millis() to listOf(org.joda.time.DurationFieldType:millis(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:forFields(org.joda.time.DurationFieldType[]) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Map:isEmpty(), org.joda.time.PeriodType:standard(), org.joda.time.PeriodType:standard(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:yearMonthDayTime(), org.joda.time.PeriodType:yearMonthDayTime(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:yearMonthDay(), org.joda.time.PeriodType:yearMonthDay(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:yearWeekDayTime(), org.joda.time.PeriodType:yearWeekDayTime(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:yearWeekDay(), org.joda.time.PeriodType:yearWeekDay(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:yearDayTime(), org.joda.time.PeriodType:yearDayTime(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:yearDay(), org.joda.time.PeriodType:yearDay(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:dayTime(), org.joda.time.PeriodType:dayTime(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:time(), org.joda.time.PeriodType:time(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:years(), org.joda.time.PeriodType:years(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:months(), org.joda.time.PeriodType:months(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:weeks(), org.joda.time.PeriodType:weeks(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:days(), org.joda.time.PeriodType:days(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:hours(), org.joda.time.PeriodType:hours(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:minutes(), org.joda.time.PeriodType:minutes(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:seconds(), org.joda.time.PeriodType:seconds(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:millis(), org.joda.time.PeriodType:millis(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[]), java.util.Map:get(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.PeriodType:standard(), java.util.Arrays:asList(java.lang.Object[]), java.util.ArrayList:<init>(java.util.Collection), org.joda.time.DurationFieldType:years(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withYearsRemoved(), org.joda.time.DurationFieldType:months(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withMonthsRemoved(), org.joda.time.DurationFieldType:weeks(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withWeeksRemoved(), org.joda.time.DurationFieldType:days(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withDaysRemoved(), org.joda.time.DurationFieldType:hours(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withHoursRemoved(), org.joda.time.DurationFieldType:minutes(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withMinutesRemoved(), org.joda.time.DurationFieldType:seconds(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withSecondsRemoved(), org.joda.time.DurationFieldType:millis(), java.util.List:remove(java.lang.Object), org.joda.time.PeriodType:withMillisRemoved(), java.util.List:size(), java.util.Map:put(java.lang.Object-java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[]), java.util.Map:get(java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.Map:put(java.lang.Object-java.lang.Object)),
		org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[]) to listOf(java.lang.Object:<init>()),
		org.joda.time.PeriodType:isSupported(org.joda.time.DurationFieldType) to listOf(org.joda.time.PeriodType:indexOf(org.joda.time.DurationFieldType)),
		org.joda.time.PeriodType:indexOf(org.joda.time.DurationFieldType) to listOf(org.joda.time.PeriodType:size()),
		org.joda.time.PeriodType:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.PeriodType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString()),
		org.joda.time.PeriodType:getIndexedField(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.ReadablePeriod:getValue(int)),
		org.joda.time.PeriodType:setIndexedField(org.joda.time.ReadablePeriod-int-int[]-int) to listOf(java.lang.UnsupportedOperationException:<init>(java.lang.String)),
		org.joda.time.PeriodType:addIndexedField(org.joda.time.ReadablePeriod-int-int[]-int) to listOf(java.lang.UnsupportedOperationException:<init>(java.lang.String), org.joda.time.field.FieldUtils:safeAdd(int-int)),
		org.joda.time.PeriodType:withYearsRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withMonthsRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withWeeksRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withDaysRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withHoursRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withMinutesRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withSecondsRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withMillisRemoved() to listOf(org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String)),
		org.joda.time.PeriodType:withFieldRemoved(int-java.lang.String) to listOf(org.joda.time.PeriodType:size(), java.lang.StringBuilder:<init>(), org.joda.time.PeriodType:getName(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), org.joda.time.PeriodType:<init>(java.lang.String-org.joda.time.DurationFieldType[]-int[])),
		org.joda.time.PeriodType:equals(java.lang.Object) to listOf(java.util.Arrays:equals(java.lang.Object[]-java.lang.Object[])),
		org.joda.time.PeriodType:hashCode() to listOf(java.lang.Object:hashCode()),
		org.joda.time.PeriodType:<clinit>() to listOf(java.util.HashMap:<init>(int)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:readFrom(java.io.DataInput) to listOf(java.io.DataInput:readUnsignedByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readByte(), java.io.DataInput:readUnsignedByte(), java.io.DataInput:readBoolean(), org.joda.time.tz.DateTimeZoneBuilder:readMillis(java.io.DataInput), org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(char-int-int-int-boolean-int)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:<init>(char-int-int-int-boolean-int) to listOf(java.lang.Object:<init>(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString(), java.lang.IllegalArgumentException:<init>(java.lang.String)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:setInstant(int-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(org.joda.time.Chronology-long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(org.joda.time.Chronology-long)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:next(long-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), java.lang.Math:min(int-int), org.joda.time.DateTimeField:add(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(org.joda.time.Chronology-long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(org.joda.time.Chronology-long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(org.joda.time.Chronology-long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(org.joda.time.Chronology-long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(org.joda.time.Chronology-long), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:previous(long-int-int) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:add(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthPrevious(org.joda.time.Chronology-long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthPrevious(org.joda.time.Chronology-long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(org.joda.time.Chronology-long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthPrevious(org.joda.time.Chronology-long), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(org.joda.time.Chronology-long), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:millisOfDay(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:toString() to listOf(java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(boolean), java.lang.StringBuilder:append(char), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:append(char), java.lang.StringBuilder:toString()),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:writeTo(java.io.DataOutput) to listOf(java.io.DataOutput:writeByte(int), java.io.DataOutput:writeByte(int), java.io.DataOutput:writeByte(int), java.io.DataOutput:writeByte(int), java.io.DataOutput:writeBoolean(boolean), org.joda.time.tz.DateTimeZoneBuilder:writeMillis(java.io.DataOutput-long)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthNext(org.joda.time.Chronology-long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(org.joda.time.Chronology-long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:isLeap(long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(org.joda.time.Chronology-long)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonthPrevious(org.joda.time.Chronology-long) to listOf(org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(org.joda.time.Chronology-long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:isLeap(long), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:add(long-int), org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(org.joda.time.Chronology-long)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfMonth(org.joda.time.Chronology-long) to listOf(org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:set(long-int), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:add(long-int), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.tz.DateTimeZoneBuilder$OfYear:setDayOfWeek(org.joda.time.Chronology-long) to listOf(org.joda.time.Chronology:dayOfWeek(), org.joda.time.DateTimeField:get(long), org.joda.time.Chronology:dayOfWeek(), org.joda.time.DateTimeField:add(long-int)),
		org.joda.time.tz.FixedDateTimeZone:<init>(java.lang.String-java.lang.String-int-int) to listOf(org.joda.time.DateTimeZone:<init>(java.lang.String)),
		org.joda.time.tz.FixedDateTimeZone:toTimeZone() to listOf(org.joda.time.tz.FixedDateTimeZone:getID(), java.lang.String:length(), java.lang.String:startsWith(java.lang.String), java.lang.String:startsWith(java.lang.String), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.tz.FixedDateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.util.TimeZone:getTimeZone(java.lang.String), org.joda.time.tz.FixedDateTimeZone:getID(), java.util.SimpleTimeZone:<init>(int-java.lang.String)),
		org.joda.time.tz.FixedDateTimeZone:equals(java.lang.Object) to listOf(org.joda.time.tz.FixedDateTimeZone:getID(), org.joda.time.tz.FixedDateTimeZone:getID(), java.lang.String:equals(java.lang.Object)),
		org.joda.time.tz.FixedDateTimeZone:hashCode() to listOf(org.joda.time.tz.FixedDateTimeZone:getID(), java.lang.String:hashCode()),
		org.joda.time.tz.ZoneInfoCompiler:main(java.lang.String[]) to listOf(org.joda.time.tz.ZoneInfoCompiler:printUsage(), java.lang.String:equals(java.lang.Object), java.io.File:<init>(java.lang.String), java.lang.String:equals(java.lang.Object), java.io.File:<init>(java.lang.String), java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:printUsage(), org.joda.time.tz.ZoneInfoCompiler:printUsage(), org.joda.time.tz.ZoneInfoCompiler:printUsage(), java.io.File:<init>(java.lang.String), java.io.File:<init>(java.io.File-java.lang.String), org.joda.time.tz.ZoneInfoLogger:set(boolean), org.joda.time.tz.ZoneInfoCompiler:<init>(), org.joda.time.tz.ZoneInfoCompiler:compile(java.io.File-java.io.File[])),
		org.joda.time.tz.ZoneInfoCompiler:printUsage() to listOf(java.io.PrintStream:println(java.lang.String), java.io.PrintStream:println(java.lang.String), java.io.PrintStream:println(java.lang.String), java.io.PrintStream:println(java.lang.String), java.io.PrintStream:println(java.lang.String)),
		org.joda.time.tz.ZoneInfoCompiler:getStartOfYear() to listOf(org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear:<init>()),
		org.joda.time.tz.ZoneInfoCompiler:getLenientISOChronology() to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.LenientChronology:getInstance(org.joda.time.Chronology)),
		org.joda.time.tz.ZoneInfoCompiler:writeZoneInfoMap(java.io.DataOutputStream-java.util.Map) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Map:size(), java.util.HashMap:<init>(int), java.util.TreeMap:<init>(), java.util.Map:entrySet(), java.util.Set:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), java.util.Map$Entry:getKey(), java.util.Map:containsKey(java.lang.Object), java.lang.Short:valueOf(short), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.TreeMap:put(java.lang.Object-java.lang.Object), java.lang.InternalError:<init>(java.lang.String), java.util.Map$Entry:getValue(), org.joda.time.DateTimeZone:getID(), java.util.Map:containsKey(java.lang.Object), java.lang.Short:valueOf(short), java.util.Map:put(java.lang.Object-java.lang.Object), java.util.TreeMap:put(java.lang.Object-java.lang.Object), java.lang.InternalError:<init>(java.lang.String), java.util.TreeMap:size(), java.io.DataOutputStream:writeShort(int), java.util.TreeMap:values(), java.util.Collection:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), java.io.DataOutputStream:writeUTF(java.lang.String), java.util.Map:size(), java.io.DataOutputStream:writeShort(int), java.util.Map:entrySet(), java.util.Set:iterator(), java.util.Iterator:hasNext(), java.util.Iterator:next(), java.util.Map$Entry:getKey(), java.util.Map:get(java.lang.Object), java.lang.Short:shortValue(), java.io.DataOutputStream:writeShort(int), java.util.Map$Entry:getValue(), org.joda.time.DateTimeZone:getID(), java.util.Map:get(java.lang.Object), java.lang.Short:shortValue(), java.io.DataOutputStream:writeShort(int)),
		org.joda.time.tz.ZoneInfoCompiler:parseYear(java.lang.String-int) to listOf(java.lang.String:toLowerCase(java.util.Locale), java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), java.lang.String:equals(java.lang.Object), java.lang.Integer:parseInt(java.lang.String)),
		org.joda.time.tz.ZoneInfoCompiler:parseMonth(java.lang.String) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:monthOfYear(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.DateTimeField:get(long)),
		org.joda.time.tz.ZoneInfoCompiler:parseDayOfWeek(java.lang.String) to listOf(org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:dayOfWeek(), org.joda.time.DateTimeField:set(long-java.lang.String-java.util.Locale), org.joda.time.DateTimeField:get(long)),
		org.joda.time.tz.ZoneInfoCompiler:parseOptional(java.lang.String) to listOf(java.lang.String:equals(java.lang.Object)),
		org.joda.time.tz.ZoneInfoCompiler:parseTime(java.lang.String) to listOf(org.joda.time.format.ISODateTimeFormat:hourMinuteSecondFraction(), org.joda.time.tz.ZoneInfoCompiler:getLenientISOChronology(), org.joda.time.MutableDateTime:<init>(long-org.joda.time.Chronology), java.lang.String:startsWith(java.lang.String), org.joda.time.format.DateTimeFormatter:parseInto(org.joda.time.ReadWritableInstant-java.lang.String-int), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.MutableDateTime:getMillis()),
		org.joda.time.tz.ZoneInfoCompiler:test(java.lang.String-org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeZone:getID(), java.lang.String:equals(java.lang.Object), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getStandardOffset(long), org.joda.time.DateTimeZone:getNameKey(long), java.util.ArrayList:<init>(), org.joda.time.DateTimeZone:nextTransition(long), org.joda.time.DateTimeZone:getOffset(long), org.joda.time.DateTimeZone:getStandardOffset(long), org.joda.time.DateTimeZone:getNameKey(long), java.lang.String:equals(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.lang.String:length(), java.lang.String:equals(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.lang.Long:valueOf(long), java.util.List:add(java.lang.Object), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:year(), org.joda.time.DateTimeField:set(long-int), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.chrono.ISOChronology:year(), org.joda.time.DateTimeField:set(long-int), java.util.List:size(), org.joda.time.DateTimeZone:previousTransition(long), java.util.List:get(int), java.lang.Long:longValue(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:append(java.lang.String), org.joda.time.chrono.ISOChronology:getInstanceUTC(), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String)),
		org.joda.time.tz.ZoneInfoCompiler:<init>() to listOf(java.lang.Object:<init>(), java.util.HashMap:<init>(), java.util.ArrayList:<init>(), java.util.ArrayList:<init>(), java.util.ArrayList:<init>()),
		org.joda.time.tz.ZoneInfoCompiler:compile(java.io.File-java.io.File[]) to listOf(java.io.FileReader:<init>(java.io.File), java.io.BufferedReader:<init>(java.io.Reader), java.io.File:getName(), java.lang.String:equals(java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:parseDataFile(java.io.BufferedReader-boolean), java.io.BufferedReader:close(), java.io.BufferedReader:close(), java.io.File:exists(), java.io.File:mkdirs(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.io.IOException:<init>(java.lang.String), java.io.File:isDirectory(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.Object), java.lang.StringBuilder:toString(), java.io.IOException:<init>(java.lang.String), java.util.TreeMap:<init>(), java.util.TreeMap:<init>(), java.io.PrintStream:println(java.lang.String), java.util.List:size(), java.util.List:get(int), org.joda.time.tz.DateTimeZoneBuilder:<init>(), org.joda.time.tz.ZoneInfoCompiler$Zone:addToBuilder(org.joda.time.tz.DateTimeZoneBuilder-java.util.Map), org.joda.time.tz.DateTimeZoneBuilder:toDateTimeZone(java.lang.String-boolean), org.joda.time.DateTimeZone:getID(), org.joda.time.tz.ZoneInfoCompiler:test(java.lang.String-org.joda.time.DateTimeZone), org.joda.time.DateTimeZone:getID(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.DateTimeZone:getID(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:writeZone(java.io.File-org.joda.time.tz.DateTimeZoneBuilder-org.joda.time.DateTimeZone), java.util.List:size(), java.util.List:get(int), java.util.List:get(int), java.util.Map:get(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), org.joda.time.tz.DateTimeZoneBuilder:<init>(), org.joda.time.tz.ZoneInfoCompiler$Zone:addToBuilder(org.joda.time.tz.DateTimeZoneBuilder-java.util.Map), org.joda.time.tz.DateTimeZoneBuilder:toDateTimeZone(java.lang.String-boolean), org.joda.time.DateTimeZone:getID(), org.joda.time.tz.ZoneInfoCompiler:test(java.lang.String-org.joda.time.DateTimeZone), org.joda.time.DateTimeZone:getID(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.tz.ZoneInfoCompiler:writeZone(java.io.File-org.joda.time.tz.DateTimeZoneBuilder-org.joda.time.DateTimeZone), org.joda.time.DateTimeZone:getID(), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.tz.ZoneInfoLogger:verbose(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.util.List:size(), java.util.List:get(int), java.util.List:get(int), java.util.Map:get(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.tz.ZoneInfoLogger:verbose(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.io.PrintStream:println(java.lang.String), java.io.File:<init>(java.io.File-java.lang.String), java.io.File:getParentFile(), java.io.File:exists(), java.io.File:getParentFile(), java.io.File:mkdirs(), java.io.FileOutputStream:<init>(java.io.File), java.io.DataOutputStream:<init>(java.io.OutputStream), java.util.TreeMap:<init>(java.util.Comparator), java.util.Map:putAll(java.util.Map), org.joda.time.tz.ZoneInfoCompiler:writeZoneInfoMap(java.io.DataOutputStream-java.util.Map), java.io.DataOutputStream:close(), java.io.DataOutputStream:close()),
		org.joda.time.tz.ZoneInfoCompiler:writeZone(java.io.File-org.joda.time.tz.DateTimeZoneBuilder-org.joda.time.DateTimeZone) to listOf(org.joda.time.tz.ZoneInfoLogger:verbose(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), org.joda.time.DateTimeZone:getID(), java.io.File:<init>(java.io.File-java.lang.String), java.io.File:getParentFile(), java.io.File:exists(), java.io.File:getParentFile(), java.io.File:mkdirs(), java.io.FileOutputStream:<init>(java.io.File), org.joda.time.DateTimeZone:getID(), org.joda.time.tz.DateTimeZoneBuilder:writeTo(java.lang.String-java.io.OutputStream), java.io.OutputStream:close(), java.io.OutputStream:close(), java.io.FileInputStream:<init>(java.io.File), org.joda.time.DateTimeZone:getID(), org.joda.time.tz.DateTimeZoneBuilder:readFrom(java.io.InputStream-java.lang.String), java.io.InputStream:close(), org.joda.time.DateTimeZone:equals(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), org.joda.time.DateTimeZone:getID(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String)),
		org.joda.time.tz.ZoneInfoCompiler:parseDataFile(java.io.BufferedReader-boolean) to listOf(java.io.BufferedReader:readLine(), java.lang.String:trim(), java.lang.String:length(), java.lang.String:charAt(int), java.lang.String:indexOf(int), java.lang.String:substring(int-int), java.util.StringTokenizer:<init>(java.lang.String-java.lang.String), java.lang.String:charAt(int), java.lang.Character:isWhitespace(char), java.util.StringTokenizer:hasMoreTokens(), org.joda.time.tz.ZoneInfoCompiler$Zone:chain(java.util.StringTokenizer), java.util.List:add(java.lang.Object), java.util.StringTokenizer:hasMoreTokens(), java.util.StringTokenizer:nextToken(), java.lang.String:equalsIgnoreCase(java.lang.String), org.joda.time.tz.ZoneInfoCompiler$Rule:<init>(java.util.StringTokenizer), java.util.Map:get(java.lang.Object), org.joda.time.tz.ZoneInfoCompiler$RuleSet:<init>(org.joda.time.tz.ZoneInfoCompiler$Rule), java.util.Map:put(java.lang.Object-java.lang.Object), org.joda.time.tz.ZoneInfoCompiler$RuleSet:addRule(org.joda.time.tz.ZoneInfoCompiler$Rule), java.lang.String:equalsIgnoreCase(java.lang.String), java.util.StringTokenizer:countTokens(), java.lang.IllegalArgumentException:<init>(java.lang.String), org.joda.time.tz.ZoneInfoCompiler$Zone:<init>(java.util.StringTokenizer), java.lang.String:equalsIgnoreCase(java.lang.String), java.util.StringTokenizer:nextToken(), java.util.StringTokenizer:nextToken(), java.lang.String:equals(java.lang.Object), java.lang.String:startsWith(java.lang.String), java.lang.String:equals(java.lang.Object), java.util.List:add(java.lang.Object), java.util.List:add(java.lang.Object), java.util.List:add(java.lang.Object), java.util.List:add(java.lang.Object), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:toString(), java.io.PrintStream:println(java.lang.String), java.util.List:add(java.lang.Object)),
		org.joda.time.YearMonthDay:fromCalendarFields(java.util.Calendar) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Calendar:get(int), java.util.Calendar:get(int), java.util.Calendar:get(int), org.joda.time.YearMonthDay:<init>(int-int-int)),
		org.joda.time.YearMonthDay:fromDateFields(java.util.Date) to listOf(java.lang.IllegalArgumentException:<init>(java.lang.String), java.util.Date:getYear(), java.util.Date:getMonth(), java.util.Date:getDate(), org.joda.time.YearMonthDay:<init>(int-int-int)),
		org.joda.time.YearMonthDay:<init>() to listOf(org.joda.time.base.BasePartial:<init>()),
		org.joda.time.YearMonthDay:<init>(org.joda.time.DateTimeZone) to listOf(org.joda.time.chrono.ISOChronology:getInstance(org.joda.time.DateTimeZone), org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:<init>(org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:<init>(long) to listOf(org.joda.time.base.BasePartial:<init>(long)),
		org.joda.time.YearMonthDay:<init>(long-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(long-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:<init>(java.lang.Object) to listOf(org.joda.time.format.ISODateTimeFormat:dateOptionalTimeParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.YearMonthDay:<init>(java.lang.Object-org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.format.ISODateTimeFormat:dateOptionalTimeParser(), org.joda.time.base.BasePartial:<init>(java.lang.Object-org.joda.time.Chronology-org.joda.time.format.DateTimeFormatter)),
		org.joda.time.YearMonthDay:<init>(int-int-int) to listOf(org.joda.time.YearMonthDay:<init>(int-int-int-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:<init>(int-int-int-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(int[]-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[]) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-int[])),
		org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-org.joda.time.Chronology) to listOf(org.joda.time.base.BasePartial:<init>(org.joda.time.base.BasePartial-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:getField(int-org.joda.time.Chronology) to listOf(org.joda.time.Chronology:year(), org.joda.time.Chronology:monthOfYear(), org.joda.time.Chronology:dayOfMonth(), java.lang.StringBuilder:<init>(), java.lang.StringBuilder:append(java.lang.String), java.lang.StringBuilder:append(int), java.lang.StringBuilder:toString(), java.lang.IndexOutOfBoundsException:<init>(java.lang.String)),
		org.joda.time.YearMonthDay:getFieldTypes() to listOf(org.joda.time.DateTimeFieldType[]:clone()),
		org.joda.time.YearMonthDay:withChronologyRetainFields(org.joda.time.Chronology) to listOf(org.joda.time.DateTimeUtils:getChronology(org.joda.time.Chronology), org.joda.time.Chronology:withUTC(), org.joda.time.YearMonthDay:getChronology(), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-org.joda.time.Chronology), org.joda.time.YearMonthDay:getValues(), org.joda.time.Chronology:validate(org.joda.time.ReadablePartial-int[])),
		org.joda.time.YearMonthDay:withField(org.joda.time.DateTimeFieldType-int) to listOf(org.joda.time.YearMonthDay:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.YearMonthDay:getValue(int), org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay:getField(int), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int) to listOf(org.joda.time.YearMonthDay:indexOfSupported(org.joda.time.DurationFieldType), org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay:getField(int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.ReadablePeriod:size(), org.joda.time.ReadablePeriod:getFieldType(int), org.joda.time.YearMonthDay:indexOf(org.joda.time.DurationFieldType), org.joda.time.YearMonthDay:getField(int), org.joda.time.ReadablePeriod:getValue(int), org.joda.time.field.FieldUtils:safeMultiply(int-int), org.joda.time.DateTimeField:add(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay:plus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.YearMonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.YearMonthDay:plusYears(int) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonthDay:plusMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonthDay:plusDays(int) to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonthDay:minus(org.joda.time.ReadablePeriod) to listOf(org.joda.time.YearMonthDay:withPeriodAdded(org.joda.time.ReadablePeriod-int)),
		org.joda.time.YearMonthDay:minusYears(int) to listOf(org.joda.time.DurationFieldType:years(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonthDay:minusMonths(int) to listOf(org.joda.time.DurationFieldType:months(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonthDay:minusDays(int) to listOf(org.joda.time.DurationFieldType:days(), org.joda.time.field.FieldUtils:safeNegate(int), org.joda.time.YearMonthDay:withFieldAdded(org.joda.time.DurationFieldType-int)),
		org.joda.time.YearMonthDay:property(org.joda.time.DateTimeFieldType) to listOf(org.joda.time.YearMonthDay:indexOfSupported(org.joda.time.DateTimeFieldType), org.joda.time.YearMonthDay$Property:<init>(org.joda.time.YearMonthDay-int)),
		org.joda.time.YearMonthDay:toLocalDate() to listOf(org.joda.time.YearMonthDay:getYear(), org.joda.time.YearMonthDay:getMonthOfYear(), org.joda.time.YearMonthDay:getDayOfMonth(), org.joda.time.YearMonthDay:getChronology(), org.joda.time.LocalDate:<init>(int-int-int-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:toDateTimeAtMidnight() to listOf(org.joda.time.YearMonthDay:toDateTimeAtMidnight(org.joda.time.DateTimeZone)),
		org.joda.time.YearMonthDay:toDateTimeAtMidnight(org.joda.time.DateTimeZone) to listOf(org.joda.time.YearMonthDay:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.YearMonthDay:getYear(), org.joda.time.YearMonthDay:getMonthOfYear(), org.joda.time.YearMonthDay:getDayOfMonth(), org.joda.time.DateTime:<init>(int-int-int-int-int-int-int-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:toDateTimeAtCurrentTime() to listOf(org.joda.time.YearMonthDay:toDateTimeAtCurrentTime(org.joda.time.DateTimeZone)),
		org.joda.time.YearMonthDay:toDateTimeAtCurrentTime(org.joda.time.DateTimeZone) to listOf(org.joda.time.YearMonthDay:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:toDateMidnight() to listOf(org.joda.time.YearMonthDay:toDateMidnight(org.joda.time.DateTimeZone)),
		org.joda.time.YearMonthDay:toDateMidnight(org.joda.time.DateTimeZone) to listOf(org.joda.time.YearMonthDay:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.YearMonthDay:getYear(), org.joda.time.YearMonthDay:getMonthOfYear(), org.joda.time.YearMonthDay:getDayOfMonth(), org.joda.time.DateMidnight:<init>(int-int-int-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:toDateTime(org.joda.time.TimeOfDay) to listOf(org.joda.time.YearMonthDay:toDateTime(org.joda.time.TimeOfDay-org.joda.time.DateTimeZone)),
		org.joda.time.YearMonthDay:toDateTime(org.joda.time.TimeOfDay-org.joda.time.DateTimeZone) to listOf(org.joda.time.YearMonthDay:getChronology(), org.joda.time.Chronology:withZone(org.joda.time.DateTimeZone), org.joda.time.DateTimeUtils:currentTimeMillis(), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.Chronology:set(org.joda.time.ReadablePartial-long), org.joda.time.DateTime:<init>(long-org.joda.time.Chronology)),
		org.joda.time.YearMonthDay:toInterval() to listOf(org.joda.time.YearMonthDay:toInterval(org.joda.time.DateTimeZone)),
		org.joda.time.YearMonthDay:toInterval(org.joda.time.DateTimeZone) to listOf(org.joda.time.DateTimeUtils:getZone(org.joda.time.DateTimeZone), org.joda.time.YearMonthDay:toDateMidnight(org.joda.time.DateTimeZone), org.joda.time.DateMidnight:toInterval()),
		org.joda.time.YearMonthDay:getYear() to listOf(org.joda.time.YearMonthDay:getValue(int)),
		org.joda.time.YearMonthDay:getMonthOfYear() to listOf(org.joda.time.YearMonthDay:getValue(int)),
		org.joda.time.YearMonthDay:getDayOfMonth() to listOf(org.joda.time.YearMonthDay:getValue(int)),
		org.joda.time.YearMonthDay:withYear(int) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay:getChronology(), org.joda.time.Chronology:year(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay:withMonthOfYear(int) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay:getChronology(), org.joda.time.Chronology:monthOfYear(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay:withDayOfMonth(int) to listOf(org.joda.time.YearMonthDay:getValues(), org.joda.time.YearMonthDay:getChronology(), org.joda.time.Chronology:dayOfMonth(), org.joda.time.DateTimeField:set(org.joda.time.ReadablePartial-int-int[]-int), org.joda.time.YearMonthDay:<init>(org.joda.time.YearMonthDay-int[])),
		org.joda.time.YearMonthDay:year() to listOf(org.joda.time.YearMonthDay$Property:<init>(org.joda.time.YearMonthDay-int)),
		org.joda.time.YearMonthDay:monthOfYear() to listOf(org.joda.time.YearMonthDay$Property:<init>(org.joda.time.YearMonthDay-int)),
		org.joda.time.YearMonthDay:dayOfMonth() to listOf(org.joda.time.YearMonthDay$Property:<init>(org.joda.time.YearMonthDay-int)),
		org.joda.time.YearMonthDay:toString() to listOf(org.joda.time.format.ISODateTimeFormat:yearMonthDay(), org.joda.time.format.DateTimeFormatter:print(org.joda.time.ReadablePartial)),
		org.joda.time.YearMonthDay:<clinit>() to listOf(org.joda.time.DateTimeFieldType:year(), org.joda.time.DateTimeFieldType:monthOfYear(), org.joda.time.DateTimeFieldType:dayOfMonth()),
	)
)