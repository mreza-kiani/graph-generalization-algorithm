Graph(
	nodes = listOf(Assertions:assertEquals(Character-Character), MethodOrderer$MethodName:<clinit>(), Assertions:fail(String), TestInstance$Lifecycle:$values(), DisplayNameGenerator$ReplaceUnderscores:generateDisplayNameForClass(Class), DynamicTest:lambda$stream$3(ThrowingConsumer-Named), CleanupMode:valueOf(String), Assertions:assertNotEquals(float-float-float), Assertions:assertNotEquals(int-int-Supplier), Preconditions:notNull(Object-Supplier), TypeBasedParameterResolver:supportsParameter(ParameterContext-ExtensionContext), Assertions:assertEquals(Long-long-String), AssertEquals:failNotEqual(Object-Object-Object), AssertInstanceOf:<init>(), AssertTrue:assertTrue(boolean-String), Assertions:assertTimeout(Duration-ThrowingSupplier-String), Assertions:assertArrayEquals(byte[]-byte[]-Supplier), AssertionsKt:assertTimeout(Duration-Function0-Function0), Assertions:assertDoesNotThrow(Executable-Supplier), ExtensionContext$Namespace:create(Object[]), Assertions:assertEquals(Double-double-Supplier), JUnitException:<init>(String-Throwable), AssertionsKt$evaluateAndWrap$2:<init>(Throwable), AssertNotEquals:assertNotEquals(float-float-Supplier), AssertNotEquals:assertNotEquals(double-double-String), Assertions:assertTimeout(Duration-ThrowingSupplier), Assertions:assertFalse(BooleanSupplier-String), Assertions:assertNotEquals(Short-Short), AssertionsKt:assertDoesNotThrow(String-Function0), ClassOrderer$DisplayName:<init>(), Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier-Supplier), EnabledIfEnvironmentVariable:matches(), ClassOrderer$DisplayName:orderClasses(ClassOrdererContext), InvocationInterceptor:interceptDynamicTest(InvocationInterceptor$Invocation-DynamicTestInvocationContext-ExtensionContext), DisabledOnOsCondition:evaluateExecutionCondition(DisabledOnOs), Assertions:assertNotEquals(Float-float-String), ClassOrdererContext:getConfigurationParameter(String), AssertIterableEquals:assertIterableEquals(Iterable-Iterable), AssertIterableEquals:lambda$assertIteratorsAreEmpty$1(AtomicInteger-Object), Assertions:assertLinesMatch(Stream-Stream), TestAbortedException:<init>(String), Assertions:assertTrue(boolean-String), Assertions:assertArrayEquals(Object[]-Object[]-Supplier), ExtensionConfigurationException:<init>(String), DisabledIfEnvironmentVariableCondition:getEnvironmentVariable(String), ExecutableInvoker:invoke(Method), AssertThrowsExactly:assertThrowsExactly(Class-Executable-Supplier), ExtensionContext:getElement(), AssertEquals:assertEquals(short-short-Supplier), AssertLinesMatch:assertLinesMatch(Stream-Stream-Object), AssertTrue:assertTrue(BooleanSupplier-String), Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier), DisabledIfSystemPropertyCondition:<clinit>(), Assertions:assertArrayEquals(double[]-double[]-double), JRE:values(), Assertions:assertNotEquals(Byte-byte-Supplier), AssertEquals:assertEquals(float-float-float-Supplier), AssertArrayEquals:assertArrayEquals(double[]-double[]-Deque-Object), AssertArrayEquals:assertArrayEquals(double[]-double[]-double-Supplier), AssertEquals:assertEquals(double-double), AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-String), AssertArrayEquals:assertArrayEquals(byte[]-byte[]), Assertions:assertNotEquals(long-Long), DisabledIfEnvironmentVariableCondition:<init>(), AssertionsKt$convert$1:<init>(), Assertions:assertEquals(double-Double-String), Assertions:assertNotEquals(char-char), AssertAll:assertAll(String-Stream), EnabledForJreRange:min(), AbstractRepeatableAnnotationCondition:evaluateExecutionCondition(ExtensionContext), AssertionsKt$sam$org_junit_jupiter_api_function_Executable$0:<init>(Function0), ClassOrdererContext:getClassDescriptors(), MethodBasedCondition:getConditionMethod(String-ExtensionContext), ExtensionContext:getRequiredTestMethod(), Assertions:assertAll(Stream), AssertArrayEquals:assertArrayEquals(int[]-int[]-Deque-Object), Assumptions:assumeFalse(BooleanSupplier-Supplier), EnabledOnOsCondition:isEnabledBasedOnArchitecture(EnabledOnOs), AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier), DisplayNameGenerator$Simple:<clinit>(), ExtensionContext$Namespace:append(Object[]), AssertEquals:assertEquals(double-double-double), Assertions:assertEquals(Double-double-String), Assertions:assertNotEquals(double-double-double-String), AssertNotEquals:assertNotEquals(byte-byte), TypeBasedParameterResolver:lambda$enclosedTypeOfParameterResolver$0(), Assertions:assertEquals(float-float), AssertionsKt$sam$org_junit_jupiter_api_function_Executable$0:execute(), AssertionsKt:assertTimeoutPreemptively(Duration-String-Function0), DynamicContainer:dynamicContainer(String-Stream), AssertNotNull:assertNotNull(Object-Supplier), Logger:warn(Throwable-Supplier), DisplayNameGenerator$Simple:hasParameters(Method), Assertions:assertEquals(short-Short-String), AssertLinesMatch:<init>(), Assertions:assertNotEquals(short-Short-String), Assertions:assertNotEquals(Integer-Integer-Supplier), AbstractOsBasedExecutionCondition:<clinit>(), Logger:debug(Supplier), ExtensionContext:getParent(), DisplayNameGenerator$IndicativeSentences:findDisplayNameGeneration(Class), EnabledIfEnvironmentVariable:named(), AssertFalse:assertFalse(boolean-String), DisabledOnJre:value(), DisabledIfEnvironmentVariableCondition:<clinit>(), AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Supplier), AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Supplier), Assertions:assertNotEquals(Float-float), Assertions:assertEquals(Integer-Integer-String), MethodOrderer$Random:lambda$getCustomSeed$2(String), DisabledIfEnvironmentVariableCondition:evaluate(Annotation), ResourceAccessMode:<init>(String-int), AssertAll:<init>(), AssertNotEquals:assertNotEquals(double-double-double-String), Assertions:assertEquals(float-float-Supplier), Assertions:assertArrayEquals(char[]-char[]-Supplier), Assertions:assertNotEquals(Double-Double-String), Assertions:assertDoesNotThrow(Executable-String), Assertions:assertEquals(byte-Byte-String), AssertIterableEquals:assertIterableEquals(Iterable-Iterable-String), AssertArrayEquals:assertArrayEquals(float[]-float[]-Supplier), AssertFalse:<init>(), AssertionsKt$convert$1:apply(Function0), Assertions:assertEquals(Long-Long-Supplier), AssertionFailureBuilder:toString(Object), DisabledOnOsCondition:isEnabledBasedOnOs(DisabledOnOs), Assertions:assertEquals(char-Character-String), InvocationInterceptor:interceptBeforeAllMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), Assertions:assertTimeout(Duration-Executable-Supplier), AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Object), AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Deque-Object), Assertions:fail(Supplier), Assertions:assertEquals(Float-Float), Assertions:assertNotEquals(double-Double), Intrinsics:checkExpressionValueIsNotNull(Object-String), Assertions:assertEquals(int-Integer-String), DisplayNameGenerator:parameterTypesAsString(Method), AssertionsKt:assertThrows(Function0), AbstractRepeatableAnnotationCondition:<init>(Class), ExtensionContext:getTestInstance(), Timeout$ThreadMode:<init>(String-int), AbstractOsBasedExecutionCondition:enabledByDefault(), Assertions:assertEquals(Byte-Byte), EnabledOnJreCondition:<init>(), AssertTimeout:assertTimeoutPreemptively(Duration-Executable), AssertionFailureBuilder:formatValues(Object-Object), AssertFalse:assertFalse(boolean-Supplier), Assertions:assertFalse(boolean-Supplier), ClassOrderer$ClassName:<clinit>(), Assertions:assertArrayEquals(double[]-double[]-double-Supplier), ClassOrderer$DisplayName:<clinit>(), DisabledIfEnvironmentVariableCondition:evaluate(DisabledIfEnvironmentVariable), Assertions:assertNotEquals(Long-Long-Supplier), AssertionsKt:assertAll(String-Collection), Assertions:assertEquals(Double-Double-String), DisabledOnOsCondition:<init>(), DynamicNode:getTestSourceUri(), DisplayNameGenerator:generateDisplayNameForMethod(Class-Method), AssertDoesNotThrow:assertDoesNotThrow(Executable-Object), AssertFalse:assertFalse(BooleanSupplier), DisabledForJreRange:max(), MethodOrderer$DisplayName:<clinit>(), Assertions:fail(), Assertions:assertNotEquals(byte-byte), OS:parse(String), Assertions:assertNotEquals(Character-Character-String), OS:<clinit>(), DisabledIfCondition:<init>(), AssertNull:assertNull(Object-Supplier), Assertions:assertNotEquals(long-long-Supplier), Assertions:assertNotEquals(float-Float-String), Assertions:assertEquals(double-double-double-Supplier), Assertions:assertEquals(Character-Character-String), AssertNotEquals:assertNotEquals(byte-byte-String), Assertions:assertNotEquals(byte-byte-String), ExtensionContext$Store:get(Object-Class), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertIterableEquals:lambda$assertIteratorsAreEmpty$0(AtomicInteger-Object), ExecutionMode:values(), Assumptions:abort(String), TestInstantiationException:<init>(String-Throwable), AssertIterableEquals:failExpectedIterableIsNull(Deque-Object), DisplayNameGenerator$Simple:generateDisplayNameForClass(Class), DisplayNameGenerator$Standard:generateDisplayNameForClass(Class), DynamicTest:lambda$stream$2(ThrowingConsumer-Named), Assertions:assertNotEquals(long-long), Assertions:assertEquals(float-float-float-Supplier), DisplayNameGenerator$ReplaceUnderscores:replaceUnderscores(String), Assumptions:assumeFalse(boolean-Supplier), AssertArrayEquals:assertArrayEquals(int[]-int[]-Supplier), EnabledIfEnvironmentVariableCondition:<clinit>(), Preconditions:notBlank(String-Supplier), EnabledIfSystemPropertyCondition:lambda$evaluate$1(EnabledIfSystemProperty), MethodBasedCondition:invokeConditionMethod(Method-ExtensionContext), Assertions:assertArrayEquals(long[]-long[]-String), AssertArrayEquals:assertArrayEquals(short[]-short[]-Deque-Object), Assertions:assertSame(Object-Object), Assertions:assertThrowsExactly(Class-Executable-Supplier), Assertions:assertNotEquals(Double-double-String), Assertions:assertTimeoutPreemptively(Duration-Executable), Assertions:assertNotEquals(Short-short-String), AbstractRepeatableAnnotationCondition:lambda$logResult$1(Annotation-AnnotatedElement-ConditionEvaluationResult), Named:getName(), AssertEquals:assertEquals(float-float-Supplier), Assertions:assertEquals(char-char-String), DisplayNameGenerator$ReplaceUnderscores:<init>(), Assertions:assertEquals(Long-long-Supplier), AssertLinesMatch$LinesMatcher:<init>(List-List-Object), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:get(), JRE:isCurrentVersionWithinRange(JRE-JRE), Assertions:assertEquals(byte-byte-Supplier), AssertionsKt:assertDoesNotThrow(Function0-Function0), EnabledOnOsCondition:evaluateExecutionCondition(EnabledOnOs), AssertionsKt:assertTimeoutPreemptively(Duration-Function0), AssertInstanceOf:assertInstanceOf(Class-Object-Object), Assertions:assertNotEquals(byte-Byte-String), ExtensionContext$Namespace:<init>(List), AssertionFailureBuilder:build(), Assertions:assertArrayEquals(long[]-long[]-Supplier), Assertions:assertAll(String-Collection), AssertLinesMatch:assertLinesMatch(List-List-String), AssertNotEquals:assertNotEquals(int-int), Assertions:assertArrayEquals(boolean[]-boolean[]-Supplier), MethodDescriptor:getMethod(), AssertionFailedError:<init>(), DisplayNameGenerator$IndicativeSentences:generateDisplayNameForNestedClass(Class), Assertions:assertArrayEquals(float[]-float[]-Supplier), DisplayNameGenerator$IndicativeSentences:findIndicativeSentencesGeneration(Class), DisabledOnJreCondition:isEnabled(Annotation), Assertions:assertArrayEquals(short[]-short[]), AssertionUtils:fail(String-Throwable), Assertions:assertEquals(Byte-byte-String), EnabledOnJreCondition:isEnabled(Annotation), Executable:execute(ThrowingConsumer-Object), AssertNotEquals:assertNotEquals(float-float-float-String), AssertionUtils:assertValidDelta(double), AssertionFailureBuilder:assertionFailure(), AssertLinesMatch:assertLinesMatch(Stream-Stream), AssertEquals:assertEquals(int-int), Assertions:assertNotEquals(char-Character), EnabledOnOsCondition:evaluateExecutionCondition(Annotation), Assertions:assertEquals(long-Long-Supplier), Assertions:assertNotEquals(short-Short-Supplier), AssertionUtils:getCanonicalName(Class), AssertArrayEquals:assertArrayEquals(int[]-int[]-String), Assumptions:throwAssumptionFailed(String), ClassUtils:nullSafeToString(Class[]), BooleanExecutionCondition:isEnabled(Annotation), DisabledOnOs:architectures(), EnabledIfEnvironmentVariableCondition:<init>(), JRE:$values(), ExtensionContext:getTestMethod(), DynamicTest:lambda$stream$1(Function-ThrowingConsumer-Object), ClassOrderer$Random:lambda$getCustomSeed$1(String), EnabledIfSystemPropertyCondition:evaluate(Annotation), DisplayNameGenerator:generateDisplayNameForClass(Class), ExtensionContext$Store:getOrComputeIfAbsent(Class), Assertions:assertEquals(Double-Double), AssertEquals:assertEquals(float-float-float-String), Assertions:assertNotEquals(Double-Double-Supplier), Assertions:assertEquals(byte-byte), AssertAll:assertAll(String-Executable[]), AssertionFailureBuilder:reason(String), Assertions:assertArrayEquals(double[]-double[]-String), EnabledForJreRangeCondition:isEnabled(EnabledForJreRange), Assertions:assertEquals(Character-char-Supplier), DisabledIfEnvironmentVariable:matches(), DynamicTest:lambda$stream$0(ThrowingConsumer-Object), AssertArrayEquals:assertArrayEquals(double[]-double[]-double), AssertionFailureBuilder:message(Object), AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Object), DisplayNameGenerator$Standard:<init>(), ReflectionUtils:tryToLoadClass(String), ResourceAccessMode:$values(), AssertLinesMatch:lambda$parseFastForwardLimit$0(int), AssertArrayEquals:assertArrayEquals(short[]-short[]), AssertFalse:failNotFalse(Object), Assertions:assertNotEquals(Byte-byte), CleanupMode:<clinit>(), MethodOrderer$MethodName:parameterList(Method), AssertNotEquals:assertNotEquals(byte-byte-Supplier), Assertions:assertEquals(float-float-String), Assertions:assertNotEquals(byte-Byte-Supplier), Assertions:assertEquals(Short-short-Supplier), MethodOrderer$Random:lambda$static$0(), Logger:debug(Throwable-Supplier), AssertThrows:assertThrows(Class-Executable), Assertions:assertEquals(Object-Object-String), TestInstance$Lifecycle:valueOf(String), EnabledOnOsCondition:isEnabledBasedOnOs(EnabledOnOs), ModifierSupport:isStatic(Class), TestInstance$Lifecycle:values(), DynamicContainer:dynamicContainer(String-Iterable), DisabledOnOsCondition:createReason(boolean-boolean-boolean), Assertions:assertArrayEquals(byte[]-byte[]), DisplayNameGenerator$IndicativeSentences:lambda$getGeneratorFor$1(), Assertions:assertEquals(Integer-int-String), AssertNull:failNotNull(Object-Object), ClassOrderer$Random:getCustomSeed(ClassOrdererContext), Named:getPayload(), AssertNotEquals:assertNotEquals(double-double), ReflectionSupport:newInstance(Class-Object[]), AssertionUtils:formatIndexes(Deque), Assertions:assertTrue(BooleanSupplier-String), Assertions:assertNotEquals(double-double-double-Supplier), BooleanExecutionCondition:<init>(Class-String-String-Function), Assertions:assertNotEquals(char-char-Supplier), InvocationInterceptor:interceptAfterEachMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), MethodOrderer$DisplayName:<init>(), AssertArrayEquals:assertArrayEquals(long[]-long[]-String), AssertionFailureBuilder:buildAndThrow(), InvocationInterceptor:interceptTestTemplateMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), AssertTimeout:assertTimeoutPreemptively(Duration-Executable-String), AssertionsKt:convert(Stream), EnabledOnOsCondition:createReason(boolean-boolean-boolean), Assertions:assertEquals(short-Short-Supplier), DisabledIfSystemProperty:named(), DynamicTest:dynamicTest(String-URI-Executable), DisabledIfSystemPropertyCondition:evaluate(Annotation), OS:$values(), Assertions:assertNotEquals(Float-float-Supplier), Assertions:assertNotEquals(byte-byte-Supplier), AssertAll:lambda$assertAll$0(Executable), Assertions:assertArrayEquals(boolean[]-boolean[]-String), EnabledOnJreCondition:<clinit>(), ExtensionContext$Namespace:hashCode(), AssertNotEquals:assertNotEquals(int-int-String), TestReporter:publishEntry(String), Assertions:assertNotEquals(long-Long-Supplier), AssertArrayEquals:assertArrayEquals(char[]-char[]-Deque-Object), DisabledIfSystemProperty:disabledReason(), DisabledIfSystemProperty:matches(), AssertEquals:assertEquals(long-long-Supplier), Assertions:assertEquals(Double-Double-Supplier), Assertions:assertInstanceOf(Class-Object-Supplier), Assertions:assertNotEquals(long-Long-String), Assertions:assertEquals(int-Integer-Supplier), MethodBasedCondition:buildConditionEvaluationResult(boolean-Annotation), AssertNotEquals:assertNotEquals(double-double-Supplier), Assertions:assertEquals(Short-short-String), Assertions:assertEquals(long-long-Supplier), AssertIterableEquals:assertIterableElementsEqual(Object-Object-Deque-Object-Map), AssertionsKt$sam$i$java_util_function_Supplier$0:get(), TypeBasedParameterResolver:<init>(), Assertions:assertArrayEquals(Object[]-Object[]), AssertArrayEquals:assertArrayEquals(double[]-double[]), ArraysKt:toList(Object[]), TestInstance$Lifecycle[]:clone(), AssertNotEquals:assertNotEquals(float-float-String), Assertions:assertNotEquals(char-Character-Supplier), AssertIterableEquals$Status:valueOf(String), AssertNotNull:assertNotNull(Object), Assumptions:assumeTrue(boolean-String), Assumptions:assumeTrue(BooleanSupplier-String), AssertArrayEquals:assertArrayEquals(double[]-double[]-double-String), AssertionUtils:floatsAreEqual(float-float-float), Assertions:assertNotNull(Object-Supplier), AssertIterableEquals:<init>(), Try:getOrThrow(Function), Assertions:assertNotEquals(int-Integer), Assertions:assertArrayEquals(float[]-float[]-float-Supplier), ResourceAccessMode:valueOf(String), Preconditions:notNull(Object-String), Assertions:assertTimeoutPreemptively(Duration-Executable-String), EnabledIfCondition:<init>(), AssertTimeout:lambda$assertTimeoutPreemptively$3(Executable), AssertNotSame:failSame(Object-Object), EnabledIfEnvironmentVariableCondition:evaluate(EnabledIfEnvironmentVariable), Assertions:assertDoesNotThrow(ThrowingSupplier-String), Assertions:assertNotEquals(long-long-String), ToStringBuilder:toString(), Assertions:assertNotEquals(Long-long), ClassUtils:nullSafeToString(Function-Class[]), AssertTimeout$TimeoutThreadFactory:<init>(AssertTimeout$1), AssertSame:<init>(), Timeout$ThreadMode:values(), AssertionUtils:assertValidDelta(float), Assertions:assertNotEquals(Integer-int-Supplier), AssertNotSame:<init>(), Assertions:assertNotEquals(int-int-String), EnabledOnJreCondition:isEnabled(EnabledOnJre), Assertions:assertNotEquals(double-Double-String), Assertions:assertDoesNotThrow(ThrowingSupplier-Supplier), DisplayNameGenerator$IndicativeSentences:generateDisplayNameForClass(Class), AssertNotEquals:assertNotEquals(long-long-Supplier), AssertionsKt:assertAll(Function0[]), AssertArrayEquals:assertArrayEquals(long[]-long[]-Supplier), Assertions:assertArrayEquals(double[]-double[]-Supplier), TestReporter:publishEntry(Map), Assertions:assertArrayEquals(double[]-double[]-double-String), EnabledIfSystemPropertyCondition:lambda$evaluate$0(EnabledIfSystemProperty), Preconditions:condition(boolean-Supplier), DisabledForJreRangeCondition:<init>(), AssertDoesNotThrow:<init>(), Assertions:assertArrayEquals(int[]-int[]), Assertions:assertNotEquals(float-float), AssertEquals:assertEquals(int-int-String), Assertions:assertNotEquals(char-char-String), MethodOrderer:getDefaultExecutionMode(), Timeout$ThreadMode:valueOf(String), ExtensionContext:publishReportEntry(String-String), AssertionUtils:nullSafeGet(Supplier), AssertEquals:assertEquals(float-float-float), Assertions:assertTrue(boolean), AssertEquals:assertEquals(double-double-String), MethodBasedCondition:lambda$evaluateExecutionCondition$2(Optional-Boolean), JRE:<init>(String-int), AssertArrayEquals:assertArrayEquals(double[]-double[]-String), AssertionFailureBuilder:getClassName(Object), AssertTrue:assertTrue(boolean), Assertions:assertNotEquals(float-Float-Supplier), AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object-Map), AssertTrue:assertTrue(boolean-Supplier), EnabledOnOsCondition:<init>(), AssertTimeout:assertTimeout(Duration-Executable-Supplier), AssertIterableEquals:assertIteratorsAreEmpty(Iterator-Iterator-int-Deque-Object), AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Supplier), ThrowingConsumer:accept(Object), MethodOrdererContext:getConfigurationParameter(String), ResourceAccessMode:<clinit>(), OS:<init>(String-int), AssertArrayEquals:assertArrayEquals(long[]-long[]-Deque-Object), Assertions:assertArrayEquals(short[]-short[]-String), AbstractOsBasedExecutionCondition:evaluateExecutionCondition(ExtensionContext), AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Object), AssertAll:assertAll(Stream), AssertArrayEquals:failExpectedArrayIsNull(Deque-Object), MethodBasedCondition:lambda$getConditionMethod$3(String-Exception), AssertNotEquals:assertNotEquals(short-short-Supplier), AssertThrows:assertThrows(Class-Executable-Object), DynamicTest:stream(Stream-ThrowingConsumer), MethodBasedCondition:lambda$invokeConditionMethod$6(Method), AssertTimeout$TimeoutThreadFactory:newThread(Runnable), MethodBasedCondition:lambda$buildConditionEvaluationResult$7(Annotation-boolean), DisabledOnOsCondition:isEnabledBasedOnArchitecture(DisabledOnOs), DisabledOnOs:disabledReason(), AssertionFailedError:<init>(String), AssertionFailureBuilder:<init>(), Assertions:assertArrayEquals(boolean[]-boolean[]), Assertions:assertArrayEquals(float[]-float[]), Assertions:assertNotEquals(Integer-int-String), AssertEquals:assertEquals(byte-byte-String), Assertions:assertEquals(Short-short), Assertions:assertEquals(Long-long), ExtensionContext:publishReportEntry(String), AssertionUtils:fail(Supplier), MethodBasedCondition:acceptsExtensionContextOrNoArguments(Method), Assertions:assertEquals(Short-Short-String), Assertions:assertNotEquals(byte-Byte), AssertArrayEquals:assertArrayEquals(short[]-short[]-String), AssertTimeout$TimeoutThreadFactory:<init>(), DisplayNameGenerator$IndicativeSentences:<init>(), Assertions:assertTimeoutPreemptively(Duration-Executable-Supplier), DisplayNameGenerator$Simple:<init>(), AbstractRepeatableAnnotationCondition:logResult(Annotation-AnnotatedElement-ConditionEvaluationResult), TestInstances:getAllInstances(), JRE:<clinit>(), AssertEquals:assertEquals(double-double-double-String), Assertions:assertEquals(double-double-double-String), DisplayNameGenerator$ReplaceUnderscores:<clinit>(), MethodBasedCondition:enabledByDefault(), AssertionUtils:floatsAreEqual(float-float), AssertNotEquals:<init>(), AssertNotEquals:failEqual(Object-Object), Assertions:assertNotEquals(short-short), DisplayNameGenerator:getDisplayNameGenerator(Class), Assertions:assertIterableEquals(Iterable-Iterable-String), ReflectionUtils:findMethod(Class-String-Class[]), Assertions:assertAll(String-Stream), MethodOrdererContext:getMethodDescriptors(), AssertionsKt:assertThrows(String-Function0), AssertTimeout:<init>(), AssertionFailureBuilder:buildPrefix(String), DisabledForJreRangeCondition:isEnabled(Annotation), MethodBasedCondition:evaluateExecutionCondition(ExtensionContext), AssertNotEquals:assertNotEquals(short-short), Assertions:assertLinesMatch(List-List-String), Assertions:assertArrayEquals(int[]-int[]-String), TestInstance$Lifecycle:<init>(String-int), AssertTimeout:lambda$assertTimeoutPreemptively$2(Executable), AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Supplier), Assertions:assertLinesMatch(List-List-Supplier), AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), Assertions:assertNotNull(Object-String), AssertNotEquals:assertNotEquals(Object-Object-Supplier), MethodBasedCondition:lambda$findMethod$4(Class-String), AssertionsKt$sam$java_util_function_Supplier$0:<init>(Function0), AssertLinesMatch$LinesMatcher:assertLinesMatch(), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0), MethodOrderer$Alphanumeric:<init>(), AssertSame:failNotSame(Object-Object-Object), ReflectionUtils:parseFullyQualifiedMethodName(String), AssertArrayEquals:assertArrayEquals(long[]-long[]), AssertArrayEquals:assertArrayElementsEqual(Object-Object-Deque-Object), MethodDescriptor:findAnnotation(Class), Assertions:assertNotEquals(Double-Double), AssertEquals:assertEquals(Object-Object), Assertions:assertEquals(float-Float-String), AssertIterableEquals$Pair:<init>(Object-Object), Assertions:assertEquals(int-int), Assertions:assertEquals(Integer-Integer), Assertions:assertNotEquals(double-double-double), OS:determineCurrentOs(), AssertionFailureBuilder:expected(Object), EnabledIfSystemProperty:named(), ExceptionUtils:throwAsUncheckedException(Throwable), AssertionsKt:fail(Function0), MethodOrderer$MethodName:<init>(), MethodOrderer$Random:<init>(), Assertions:assertEquals(Long-Long-String), ConditionEvaluationResult:toString(), AssertNotEquals:assertNotEquals(char-char-String), Assertions:<init>(), DisabledIfSystemPropertyCondition:<init>(), ExtensionContextException:<init>(String), ExecutionMode[]:clone(), TypeBasedParameterResolver:getParameterType(ParameterContext), CleanupMode[]:clone(), TypeBasedParameterResolver:findTypeBasedParameterResolverSuperclass(Class), Assertions:assertArrayEquals(float[]-float[]-String), EnabledIfEnvironmentVariableCondition:lambda$evaluate$1(EnabledIfEnvironmentVariable), AssertEquals:assertEquals(char-char-Supplier), DisabledOnJreCondition:isEnabled(DisabledOnJre), ClassDescriptor:findAnnotation(Class), AssertThrowsExactly:assertThrowsExactly(Class-Executable), TestReporter:publishEntry(String-String), MethodBasedCondition:lambda$evaluateExecutionCondition$0(ExtensionContext-String), AssertNotSame:assertNotSame(Object-Object-Supplier), AssertAll:assertAll(Executable[]), Preconditions:notBlank(String-String), EnabledForJreRange:max(), Assertions:assertArrayEquals(float[]-float[]-float-String), AssertionsKt:assertAll(String-Stream), Assertions:assertNotEquals(Short-Short-Supplier), ExtensionContext:getRequiredTestInstance(), ToStringBuilder:append(String-Object), AssertArrayEquals:assertArrayEquals(char[]-char[]), AssertThrows:assertThrows(Class-Executable-Supplier), Assertions:assertNull(Object-Supplier), Assertions:assertEquals(short-Short), Assertions:assertLinesMatch(Stream-Stream-Supplier), JRE:valueOf(String), CleanupMode:<init>(String-int), MethodOrderer$Random:orderMethods(MethodOrdererContext), Resources:<init>(), DisplayNameGenerator$ReplaceUnderscores:generateDisplayNameForNestedClass(Class), DisabledOnOsCondition:evaluateExecutionCondition(Annotation), AssertThrowsExactly:<init>(), Assertions:assertNotEquals(Character-char-String), AssertArrayEquals:<init>(), OS:valueOf(String), Assertions:assertEquals(short-short-String), MethodOrderer$OrderAnnotation:<init>(), DisabledIfEnvironmentVariable:named(), Assertions:assertNull(Object-String), Assertions:assertEquals(double-Double), Assertions:assertNotEquals(Double-double), Assertions:assertEquals(long-Long), Assertions:assertNotEquals(char-Character-String), Assertions:assertFalse(boolean), Assertions:assertNotEquals(Short-Short-String), AssertLinesMatch$LinesMatcher:lambda$assertLinesMatch$0(int), EnabledIfSystemProperty:disabledReason(), Assertions:assertEquals(Float-float-String), AssertTimeout:lambda$assertTimeout$1(Executable), AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-String), MethodOrderer$DisplayName:orderMethods(MethodOrdererContext), Assumptions:assumeTrue(BooleanSupplier-Supplier), BooleanExecutionCondition:evaluateExecutionCondition(ExtensionContext), DisplayNameGenerator$Simple:generateDisplayNameForMethod(Class-Method), EnabledIfSystemPropertyCondition:evaluate(EnabledIfSystemProperty), ExecutionMode:<clinit>(), Assertions:assertNotEquals(double-Double-Supplier), ClassOrderer$ClassName:<init>(), AssertionsKt:fail(Throwable), AssertArrayEquals:assertArrayEquals(float[]-float[]), Assertions:assertArrayEquals(int[]-int[]-Supplier), Assertions:assertAll(Executable[]), Assertions:assertNotEquals(short-short-Supplier), Assertions:assertNotEquals(double-double-Supplier), DynamicContainer:<init>(String-URI-Stream), MethodBasedCondition:lambda$invokeConditionMethod$5(Method), DynamicTest:stream(Iterator-ThrowingConsumer), AssertionUtils:doublesAreEqual(double-double-double), Assumptions:<init>(), JUnitException:<init>(String), AssertDoesNotThrow:assertDoesNotThrow(Executable), TestInstantiationException:<init>(String), Logger:config(Supplier), EnabledIfSystemPropertyCondition:<clinit>(), Assertions:assertNotEquals(Integer-Integer), DisplayNameGenerator$IndicativeSentences:<clinit>(), Assertions:assertEquals(float-float-float), Assertions:assertFalse(boolean-String), ExecutableInvoker:invoke(Method-Object), AssertNotEquals:assertNotEquals(short-short-String), AssertDoesNotThrow:assertDoesNotThrow(Executable-Supplier), Assertions:assertIterableEquals(Iterable-Iterable), Assertions:assertNotEquals(int-int), Assertions:assertDoesNotThrow(Executable), ClassOrderer$Random:lambda$getCustomSeed$3(String), AssertionUtils:fail(Throwable), Assertions:assertNotEquals(Character-char), AssertEquals:assertEquals(char-char-String), AssertArrayEquals:assertArrayEquals(float[]-float[]-Deque-Object), Assertions:assertThrowsExactly(Class-Executable), Lambda:<init>(int), DisplayNameGenerator$Standard:generateDisplayNameForMethod(Class-Method), CleanupMode:values(), AssertAll:assertAll(Collection), AssertNotNull:<init>(), TestInstancePreDestroyCallback:preDestroyTestInstances(ExtensionContext-Consumer), AssertionUtils:fail(), ClassDescriptor:getTestClass(), AssertInstanceOf:assertInstanceOf(Class-Object-Supplier), Assertions:assertNotSame(Object-Object-Supplier), AssertionsKt$assertDoesNotThrow$1:<init>(String), DisplayNameGenerator$IndicativeSentences:getFragmentSeparator(Class), AssertLinesMatch:parseFastForwardLimit(String), AssertThrowsExactly:assertThrowsExactly(Class-Executable-Object), AssertEquals:assertEquals(byte-byte), AssertTimeout:assertTimeout(Duration-Executable-String), Assertions:assertNotEquals(int-Integer-String), DisplayNameGenerator:generateDisplayNameForNestedClass(Class), ExtensionContext:getRequiredTestClass(), AssertTimeout:assertTimeoutPreemptively(Duration-Executable-Supplier), AssertionsKt$assertThrows$3:<init>(Throwable), Assertions:assertThrows(Class-Executable), ExtensionContext$Namespace:<clinit>(), AssertionsKt$convert$1:<clinit>(), Assumptions:assumeTrue(boolean-Supplier), AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-String), AssertThrows:assertThrows(Class-Executable-String), Assertions:assertNotEquals(Object-Object-Supplier), AssertEquals:assertEquals(char-char), AssertNotEquals:assertNotEquals(char-char), AssertLinesMatch:assertLinesMatch(List-List), InvocationInterceptor:interceptBeforeEachMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), AssertionsKt:assertTimeout(Duration-String-Function0), Assertions:assertNotEquals(Double-double-Supplier), AnnotationUtils:findAnnotation(Optional-Class), AssertSame:assertSame(Object-Object), UnrecoverableExceptions:rethrowIfUnrecoverable(Throwable), AssertArrayEquals:assertArrayEquals(Object[]-Object[]-String), Preconditions:containsNoNullElements(Object[]-String), Assumptions:assumingThat(boolean-Executable), DisplayNameGenerator$Simple:generateDisplayNameForNestedClass(Class), ToStringBuilder:<init>(Object), ExtensionConfigurationException:<init>(String-Throwable), Assertions:assertEquals(Object-Object), Assertions:assertNotEquals(short-short-String), Assertions:assertEquals(double-double-String), ClassOrderer$OrderAnnotation:orderClasses(ClassOrdererContext), DisabledOnJreCondition:<init>(), DynamicTest:dynamicTest(String-Executable), AssertionUtils:objectsAreEqual(Object-Object), AssertNotEquals:assertNotEquals(double-double-double), Assertions:assertEquals(Float-float), MethodOrderer$Random:<clinit>(), Assertions:assertEquals(Character-char), ExtensionContext$Store:lambda$getOrComputeIfAbsent$0(Class), Assertions:assertEquals(Byte-byte-Supplier), Named$1:<init>(String-Object), AnnotationUtils:findRepeatableAnnotations(AnnotatedElement-Class), DisabledIfSystemPropertyCondition:lambda$evaluate$1(DisabledIfSystemProperty), AssertEquals:assertEquals(short-short-String), AssertionFailureBuilder:actual(Object), Assertions:assertNotEquals(Integer-Integer-String), Assumptions:assumeTrue(BooleanSupplier), AbstractRepeatableAnnotationCondition:lambda$evaluateExecutionCondition$0(AnnotatedElement-Annotation), Assertions:assertEquals(char-Character-Supplier), AssertDoesNotThrow:assertDoesNotThrow(Executable-String), InvocationInterceptor:interceptTestFactoryMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), AssertInstanceOf:assertInstanceOf(Class-Object), AssertionUtils:failIllegalDelta(String), Assertions:assertIterableEquals(Iterable-Iterable-Supplier), Assertions:assertSame(Object-Object-Supplier), AssertionsKt:assertAll(Collection), ClassOrderer$Random:<init>(), MethodOrderer$Random:lambda$getCustomSeed$3(String), Assertions:assertEquals(Byte-byte), ExecutionMode:$values(), Assertions:assertEquals(float-Float), AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier), AssertTimeout:assertTimeout(Duration-ThrowingSupplier), AssertionsKt:convert(Collection), DisplayNameGenerator$IndicativeSentences:lambda$getSentenceBeginning$0(Class), AssertTrue:assertTrue(BooleanSupplier), AssertEquals:assertEquals(float-float), ClassOrderer$ClassName:lambda$static$0(ClassDescriptor), Assertions:assertNotEquals(float-float-float-String), AssertEquals:assertEquals(double-double-Supplier), Assertions:assertEquals(double-double-Supplier), MethodOrderer$Random:lambda$getCustomSeed$1(String), Assertions:assertEquals(Character-Character-Supplier), MethodOrderer$MethodName:lambda$static$0(MethodDescriptor), EnabledOnOs:architectures(), EnabledOnOs:value(), InvocationInterceptor:interceptTestClassConstructor(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), AssertionsKt:assertAll(Stream), DynamicContainer:dynamicContainer(String-URI-Stream), Assertions:assertArrayEquals(short[]-short[]-Supplier), AssertIterableEquals$Pair:equals(Object), Assertions:assertFalse(BooleanSupplier-Supplier), Assertions:assertTrue(BooleanSupplier), ConditionEvaluationResult:disabled(String-String), EnabledIfEnvironmentVariable:disabledReason(), AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object), ExecutionMode:<init>(String-int), ExtensionContext:getRequiredTestInstances(), AbstractOsBasedExecutionCondition:<init>(Class), AssertArrayEquals:assertArrayEquals(char[]-char[]-String), Assertions:fail(Throwable), AssertIterableEquals:assertIterablesNotNull(Object-Object-Deque-Object), Assertions:assertNotEquals(Byte-Byte-Supplier), Assertions:assertEquals(Byte-Byte-Supplier), OS[]:clone(), AssertArrayEquals:assertArrayEquals(float[]-float[]-float), AssertArrayEquals:assertArrayEquals(short[]-short[]-Supplier), Assertions:assertNotNull(Object), Assumptions:assumeFalse(BooleanSupplier), ParameterContext:getParameter(), DisplayNameGenerator$IndicativeSentences:generateDisplayNameForMethod(Class-Method), AssertArrayEquals:assertArrayEquals(byte[]-byte[]-String), AssertArrayEquals:assertArrayEquals(double[]-double[]-double-Deque-Object), DisplayNameGenerator$ReplaceUnderscores:generateDisplayNameForMethod(Class-Method), Assertions:assertEquals(int-int-String), Assertions:assertEquals(long-long), Assertions:assertLinesMatch(List-List), ClassOrderer$Random:orderClasses(ClassOrdererContext), AssertTimeout$ExecutionTimeoutException:setStackTrace(StackTraceElement[]), ClassOrderer$Random:lambda$static$0(), AssertEquals:assertEquals(long-long-String), AssertIterableEquals$Status:<init>(String-int), AssertArrayEquals:assertArrayEquals(float[]-float[]-float-Supplier), Assertions:assertNotEquals(double-double-String), InvocationInterceptor:interceptAfterAllMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), EnabledIfEnvironmentVariableCondition:evaluate(Annotation), AssertLinesMatch:isFastForwardLine(String), AssertArrayEquals:nullSafeIndexes(Deque-int), Assertions:assertNotEquals(Long-long-String), AssertFalse:assertFalse(BooleanSupplier-String), AssertNotSame:assertNotSame(Object-Object), MethodBasedCondition:<init>(Class-Function-Function), Assumptions:assumeFalse(BooleanSupplier-String), ThrowingSupplier:get(Executable), AbstractOsBasedExecutionCondition:createReason(boolean-boolean-boolean), Assertions:assertNotEquals(Float-Float), AssertEquals:assertEquals(float-float-String), ParameterResolutionException:<init>(String-Throwable), ResourceAccessMode:values(), AssertEquals:assertEquals(Object-Object-Supplier), Assertions:assertAll(String-Executable[]), DisabledIfEnvironmentVariableCondition:lambda$evaluate$1(DisabledIfEnvironmentVariable), DisplayNameGenerator$Standard:<clinit>(), AssertLinesMatch:assertLinesMatch(Stream-Stream-String), AssertTimeout$ExecutionTimeoutException:<init>(String), AssertArrayEquals:failActualArrayIsNull(Deque-Object), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object), Named:of(String-Object), DisabledIfEnvironmentVariableCondition:lambda$evaluate$0(DisabledIfEnvironmentVariable), ReflectionUtils:getRequiredMethod(Class-String-Class[]), Assertions:assertNotEquals(Long-long-Supplier), Assertions:assertNotEquals(Character-char-Supplier), AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]), ExtensionContext:getTestClass(), AssertLinesMatch:matches(String-String), Assertions:assertEquals(byte-byte-String), AssertFalse:assertFalse(boolean), EnabledForJreRangeCondition:<init>(), AssertArrayEquals:assertArrayEquals(float[]-float[]-String), AssertArrayEquals:assertArrayEquals(char[]-char[]-Supplier), AssertLinesMatch$LinesMatcher:fail(String-Object[]), Assertions:assertArrayEquals(char[]-char[]-String), Assumptions:abort(Supplier), Assertions:fail(String-Throwable), AssertArrayEquals:assertArrayEquals(float[]-float[]-float-Deque-Object), Assertions:assertNotEquals(Object-Object-String), Assumptions:assumeFalse(boolean), MethodOrderer$MethodName:orderMethods(MethodOrdererContext), AssertThrowsExactly:assertThrowsExactly(Class-Executable-String), ClassOrderer$OrderAnnotation:getOrder(ClassDescriptor), Preconditions:containsNoNullElements(Collection-String), Assertions:assertEquals(char-char-Supplier), ExtensionContext:getTestInstances(), MethodOrderer$Random:getCustomSeed(MethodOrdererContext), AssertArrayEquals:assertArrayEquals(Object[]-Object[]), ExecutionMode:valueOf(String), Assertions:assertNotEquals(float-float-Supplier), Assertions:assertFalse(BooleanSupplier), Assertions:assertNotEquals(Byte-Byte-String), AssertionsKt$assertDoesNotThrow$1:invoke(), AssertNotEquals:assertNotEquals(float-float-float-Supplier), AssertionsKt$sam$i$java_util_function_Supplier$0:<init>(Function0), AssertTimeout:lambda$assertTimeoutPreemptively$4(AtomicReference-ThrowingSupplier), Function0:invoke(), AssertionsKt$evaluateAndWrap$2:get(), Assertions:assertNotEquals(Short-short-Supplier), Assertions:assertEquals(Integer-int), AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Supplier), Assertions:assertEquals(long-Long-String), Assertions:assertEquals(double-double-double), Assertions:assertNotEquals(Character-Character), MethodBasedCondition:lambda$evaluateExecutionCondition$1(ExtensionContext-Method), TypeBasedParameterResolver:enclosedTypeOfParameterResolver(), AssertionsKt:fail(String-Throwable), LoggerFactory:getLogger(Class), AssertNotEquals:assertNotEquals(Object-Object-String), Assertions:assertThrows(Class-Executable-Supplier), ClassOrderer$Random:<clinit>(), Assertions:assertTimeout(Duration-Executable-String), ConditionEvaluationResult:enabled(String), StringUtils:nullSafeToString(Object), Assertions:assertArrayEquals(char[]-char[]), MethodOrderer$OrderAnnotation:orderMethods(MethodOrdererContext), AssertNotSame:assertNotSame(Object-Object-String), ExtensionContext$Namespace:equals(Object), DisabledIfSystemPropertyCondition:lambda$evaluate$0(DisabledIfSystemProperty), AssertInstanceOf:assertInstanceOf(Class-Object-String), AssertNotEquals:assertNotEquals(long-long-String), AssertArrayEquals:assertArrayEquals(double[]-double[]-Supplier), AssertIterableEquals:failIterablesNotEqual(Object-Object-Deque-Object), Assertions:assertEquals(Float-float-Supplier), Assertions:assertEquals(Short-Short-Supplier), Assertions:assertNotEquals(Float-Float-Supplier), Assertions:assertSame(Object-Object-String), DisabledIfSystemPropertyCondition:evaluate(DisabledIfSystemProperty), EnabledOnOs:disabledReason(), Assertions:assertArrayEquals(byte[]-byte[]-String), AssertNotEquals:assertNotEquals(float-float-float), AssertionFailureBuilder:nullSafeGet(Object), Assumptions:assumeTrue(boolean), AssertionsKt$assertThrows$1:<init>(Throwable), AssertAll:assertAll(String-Collection), AssertNotEquals:assertNotEquals(int-int-Supplier), Assertions:assertEquals(Double-double), AssertNull:assertNull(Object-String), AssertionFailureBuilder:formatClassAndValue(Object-String), AssertIterableEquals$Status:$values(), Assertions:assertNotEquals(Integer-int), DynamicNode:<init>(String-URI), Logger:trace(Supplier), Assertions:assertNotEquals(float-float-String), DisplayNameGenerator$IndicativeSentences:getSentenceBeginning(Class), TestTemplateInvocationContext:getAdditionalExtensions(), ExecutableInvoker:invoke(Constructor), Assertions:assertEquals(Long-Long), Timeout$ThreadMode:<clinit>(), ParameterResolutionException:<init>(String), Assertions:assertEquals(Float-Float-Supplier), AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Deque-Object), AssertionsKt$assertThrows$2:invoke(), AssertNotNull:assertNotNull(Object-String), Assertions:assertEquals(byte-Byte-Supplier), Assertions:assertArrayEquals(long[]-long[]), Preconditions:condition(boolean-String), DynamicNode:toString(), AssertEquals:assertEquals(double-double-double-Supplier), AssertThrows:<init>(), AssertionFailedError:<init>(String-Object-Object-Throwable), AssertionsKt$convert$1:apply(Object), InvocationInterceptor:interceptTestMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext), AssertIterableEquals$Pair:hashCode(), AbstractRepeatableAnnotationCondition:getNoDisabledConditionsEncounteredResult(), Assertions:assertThrowsExactly(Class-Executable-String), AnnotationUtils:findAnnotation(AnnotatedElement-Class), Assertions:assertNotEquals(Byte-byte-String), Timeout$ThreadMode[]:clone(), Assertions:assertNotEquals(Character-Character-Supplier), CleanupMode:$values(), AssertionsKt:fail$default(String-Throwable-int-Object), AbstractRepeatableAnnotationCondition:evaluate(Annotation), ExtensionContext:publishReportEntry(Map), Assertions:assertDoesNotThrow(ThrowingSupplier), AssertArrayEquals:assertArrayEquals(float[]-float[]-float-String), ParameterContext:getDeclaringExecutable(), Assertions:assertEquals(short-short), AssertEquals:assertEquals(long-long), AssertNotEquals:assertNotEquals(long-long), Assertions:assertNotEquals(int-Integer-Supplier), AssertionsKt$evaluateAndWrap$1:<init>(Object), DisabledOnOs:value(), DisabledForJreRange:min(), InvocationInterceptor:interceptDynamicTest(InvocationInterceptor$Invocation-ExtensionContext), AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Supplier), BooleanExecutionCondition:lambda$evaluateExecutionCondition$0(Annotation), Assertions:assertEquals(byte-Byte), Assertions:assertNotSame(Object-Object-String), Assertions:assertNull(Object), Assertions:assertNotEquals(Float-Float-String), ThrowingSupplier:get(), DynamicTest:<init>(String-URI-Executable), Assertions:assertTimeout(Duration-Executable), DynamicTest:stream(Stream-Function-ThrowingConsumer), AssertEquals:assertEquals(short-short), Assertions:assertEquals(char-char), AssertNull:<init>(), ExtensionContext$Store:getOrComputeIfAbsent(Object-Function-Class), ConditionEvaluationResult:<init>(boolean-String), AssertNotEquals:assertNotEquals(char-char-Supplier), Assertions:assertEquals(double-double), Assertions:assertEquals(Short-Short), DynamicTest:stream(Iterator-Function-ThrowingConsumer), Executable:execute(ThrowingConsumer-Named), MethodBasedCondition:findMethod(Class-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt:evaluateAndWrap(Function0), AssertionUtils:doublesAreEqual(double-double), Assertions:assertEquals(short-short-Supplier), Assertions:assertEquals(int-Integer), MethodOrderer$MethodName:lambda$static$1(MethodDescriptor), StringUtils:isNotBlank(String), Assertions:assertNotEquals(Long-Long), AssertEquals:<init>(), AssertNotEquals:assertNotEquals(Object-Object), AssertionsKt$sam$java_util_function_Supplier$0:get(), Assertions:assertThrows(Class-Executable-String), AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Supplier), DisabledIfEnvironmentVariable:disabledReason(), AssertTimeout$TimeoutThreadFactory:<clinit>(), Preconditions:notEmpty(Object[]-String), MethodBasedCondition:isEnabled(boolean), AssertionFailureBuilder:cause(Throwable), EnabledIfSystemPropertyCondition:<init>(), TestInstance$Lifecycle:<clinit>(), AssertEquals:assertEquals(int-int-Supplier), ExtensionContext$Store:getOrDefault(Object-Class-Object), JRE:compareTo(Enum), DisplayNameGenerator$Standard:generateDisplayNameForNestedClass(Class), AnnotationUtils:findAnnotation(Class-Class-boolean), ClassOrderer$ClassName:orderClasses(ClassOrdererContext), Assertions:assertEquals(Integer-int-Supplier), Assertions:assertNotEquals(Object-Object), ConditionEvaluationResult:disabled(String), AssertIterableEquals$Status:values(), AssertTimeout:lambda$assertTimeout$0(Executable), AssertIterableEquals:failActualIterableIsNull(Deque-Object), MultipleFailuresError:<init>(String-List), AssertLinesMatch$LinesMatcher:assertLinesMatchWithFastForward(), Assertions:assertNotEquals(Short-short), Assumptions:assumingThat(BooleanSupplier-Executable), DisplayNameGenerator$IndicativeSentences:not(Class), AssertTimeout:assertTimeout(Duration-ThrowingSupplier-String), AssertionsKt$assertThrows$2:<init>(String), AssertIterableEquals$Status:<clinit>(), Assertions:assertArrayEquals(float[]-float[]-float), AssertLinesMatch$LinesMatcher:snippet(String), ResourceAccessMode[]:clone(), Assertions:assertEquals(Integer-Integer-Supplier), Assumptions:assumeFalse(boolean-String), Assertions:assertNotEquals(double-double), AssertTrue:failNotTrue(Object), EnabledIfEnvironmentVariableCondition:getEnvironmentVariable(String), ReflectionUtils:isArray(Object), AssertionsKt:assertTimeoutPreemptively(Duration-Function0-Function0), OS:values(), Assertions:assertEquals(double-Double-Supplier), Assertions:assertTimeout(Duration-ThrowingSupplier-Supplier), Assertions:assertEquals(float-Float-Supplier), Assertions:assertEquals(float-float-float-String), Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier-String), StringUtils:isBlank(String), Assertions:assertNotSame(Object-Object), Assertions:assertEquals(Float-Float-String), ReflectionUtils:newInstance(Class-Object[]), Assertions:assertLinesMatch(Stream-Stream-String), AssertionFailedError:<init>(String-Throwable), EnabledIfSystemProperty:matches(), AssertionsKt:assertDoesNotThrow(Function0), EnabledForJreRangeCondition:isEnabled(Annotation), AssertTimeout:assertTimeout(Duration-Executable), Assertions:assertInstanceOf(Class-Object-String), AssertionsKt:assertAll(String-Function0[]), AssertionsKt:assertThrows(Function0-Function0), Intrinsics:reifiedOperationMarker(int-String), BooleanExecutionCondition:enabledByDefault(), EnabledIfEnvironmentVariableCondition:lambda$evaluate$0(EnabledIfEnvironmentVariable), Assertions:assertTrue(boolean-Supplier), Assertions:assertEquals(Byte-Byte-String), AssertEquals:assertEquals(byte-byte-Supplier), AssertNotEquals:assertNotEquals(float-float), AssertTrue:<init>(), Assertions:assertArrayEquals(Object[]-Object[]-String), Assertions:assertInstanceOf(Class-Object), MethodOrderer$OrderAnnotation:getOrder(MethodDescriptor), TestTemplateInvocationContext:getDisplayName(int), AssertFalse:assertFalse(BooleanSupplier-Supplier), Assumptions:abort(), AssertNotNull:failNull(Object), AssertLinesMatch:assertLinesMatch(List-List-Object), Assertions:assertNotEquals(Byte-Byte), Assertions:assertAll(Collection), AssertDoesNotThrow:createAssertionFailedError(Object-Throwable), TestAbortedException:<init>(), Assertions:assertNotEquals(short-Short), InvocationInterceptor$Invocation:proceed(), Executable:execute(), AssertionUtils:<init>(), AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Deque-Object), AssertionsKt:assertTimeout(Duration-Function0), ClassOrderer$Random:lambda$getCustomSeed$2(String), AssertEquals:assertEquals(Object-Object-String), AssertNull:assertNull(Object), Assertions:assertNotEquals(Long-Long-String), AssertIterableEquals$Status[]:clone(), Named:named(String-Object), Assertions:assertEquals(Character-char-String), AssertSame:assertSame(Object-Object-Supplier), Assertions:assertEquals(char-Character), Assertions:assertEquals(long-long-String), Assertions:assertNotEquals(float-float-float-Supplier), DisabledForJreRangeCondition:isEnabled(DisabledForJreRange), EnabledOnJre:value(), Assertions:assertTrue(BooleanSupplier-Supplier), AssertionFailureBuilder:includeValuesInMessage(boolean), Timeout$ThreadMode:$values(), AssertSame:assertSame(Object-Object-String), JRE:determineCurrentVersion(), Assertions:assertArrayEquals(double[]-double[]), AssertionUtils:fail(String), Assertions:assertEquals(Object-Object-Supplier), ExecutableInvoker:invoke(Constructor-Object), AssertNotEquals:assertNotEquals(double-double-double-Supplier), ClassOrderer$OrderAnnotation:<init>(), DisplayNameGenerator$IndicativeSentences:getGeneratorFor(Class), JRE[]:clone(), AssertArrayEquals:assertArrayEquals(int[]-int[]), AssertDoesNotThrow:buildSuffix(String), CollectionsKt:collectionSizeOrDefault(Iterable-int), ReflectionUtils:invokeMethod(Method-Object-Object[]), AssertionFailureBuilder:toHash(Object), AssertTrue:assertTrue(BooleanSupplier-Supplier), Assertions:assertEquals(int-int-Supplier), Assertions:assertNotEquals(float-Float)),
	edges = mapOf(
		AssertAll:<init>() to listOf(),
		AssertAll:assertAll(Executable[]) to listOf(AssertAll:assertAll(String-Executable[])),
		AssertAll:assertAll(String-Executable[]) to listOf(Preconditions:notEmpty(Object[]-String), Preconditions:containsNoNullElements(Object[]-String), AssertAll:assertAll(String-Stream)),
		AssertAll:assertAll(Collection) to listOf(AssertAll:assertAll(String-Collection)),
		AssertAll:assertAll(String-Collection) to listOf(Preconditions:notNull(Object-String), Preconditions:containsNoNullElements(Collection-String), AssertAll:assertAll(String-Stream)),
		AssertAll:assertAll(Stream) to listOf(AssertAll:assertAll(String-Stream)),
		AssertAll:assertAll(String-Stream) to listOf(Preconditions:notNull(Object-String), MultipleFailuresError:<init>(String-List)),
		AssertAll:lambda$assertAll$0(Executable) to listOf(Preconditions:notNull(Object-String), Executable:execute(), UnrecoverableExceptions:rethrowIfUnrecoverable(Throwable)),
		AssertArrayEquals:<init>() to listOf(),
		AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]) to listOf(AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-String)),
		AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-String) to listOf(AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(char[]-char[]-String) to listOf(AssertArrayEquals:assertArrayEquals(char[]-char[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(char[]-char[]) to listOf(AssertArrayEquals:assertArrayEquals(char[]-char[]-String)),
		AssertArrayEquals:assertArrayEquals(char[]-char[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(char[]-char[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(byte[]-byte[]) to listOf(AssertArrayEquals:assertArrayEquals(byte[]-byte[]-String)),
		AssertArrayEquals:assertArrayEquals(byte[]-byte[]-String) to listOf(AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(short[]-short[]) to listOf(AssertArrayEquals:assertArrayEquals(short[]-short[]-String)),
		AssertArrayEquals:assertArrayEquals(short[]-short[]-String) to listOf(AssertArrayEquals:assertArrayEquals(short[]-short[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(short[]-short[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(short[]-short[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(int[]-int[]) to listOf(AssertArrayEquals:assertArrayEquals(int[]-int[]-String)),
		AssertArrayEquals:assertArrayEquals(int[]-int[]-String) to listOf(AssertArrayEquals:assertArrayEquals(int[]-int[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(int[]-int[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(int[]-int[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(long[]-long[]) to listOf(AssertArrayEquals:assertArrayEquals(long[]-long[]-String)),
		AssertArrayEquals:assertArrayEquals(long[]-long[]-String) to listOf(AssertArrayEquals:assertArrayEquals(long[]-long[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(long[]-long[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(long[]-long[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-String)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]-String) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]-float) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-float-String)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]-float-String) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-float-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]-float-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-float-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-String)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]-String) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]-double) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-double-String)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]-double-String) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-double-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]-double-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-double-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(Object[]-Object[]) to listOf(AssertArrayEquals:assertArrayEquals(Object[]-Object[]-String)),
		AssertArrayEquals:assertArrayEquals(Object[]-Object[]-String) to listOf(AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(char[]-char[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(short[]-short[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(int[]-int[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(long[]-long[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertionUtils:floatsAreEqual(float-float), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(float[]-float[]-float-Deque-Object) to listOf(AssertionUtils:assertValidDelta(float), AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertionUtils:floatsAreEqual(float-float-float), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertionUtils:doublesAreEqual(double-double), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(double[]-double[]-double-Deque-Object) to listOf(AssertionUtils:assertValidDelta(double), AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertionUtils:doublesAreEqual(double-double-double), AssertArrayEquals:nullSafeIndexes(Deque-int), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Deque-Object) to listOf(AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object), AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object), AssertArrayEquals:assertArrayElementsEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArrayElementsEqual(Object-Object-Deque-Object) to listOf(AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Deque-Object), AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Deque-Object), AssertArrayEquals:assertArrayEquals(short[]-short[]-Deque-Object), AssertArrayEquals:assertArrayEquals(int[]-int[]-Deque-Object), AssertArrayEquals:assertArrayEquals(long[]-long[]-Deque-Object), AssertArrayEquals:assertArrayEquals(char[]-char[]-Deque-Object), AssertArrayEquals:assertArrayEquals(float[]-float[]-Deque-Object), AssertArrayEquals:assertArrayEquals(double[]-double[]-Deque-Object), AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Deque-Object), ReflectionUtils:isArray(Object), AssertArrayEquals:failExpectedArrayIsNull(Deque-Object), ReflectionUtils:isArray(Object), AssertArrayEquals:failActualArrayIsNull(Deque-Object), AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object)),
		AssertArrayEquals:assertArraysNotNull(Object-Object-Deque-Object) to listOf(AssertArrayEquals:failExpectedArrayIsNull(Deque-Object), AssertArrayEquals:failActualArrayIsNull(Deque-Object)),
		AssertArrayEquals:failExpectedArrayIsNull(Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertArrayEquals:failActualArrayIsNull(Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertArrayEquals:assertArraysHaveSameLength(int-int-Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertArrayEquals:failArraysNotEqual(Object-Object-Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertArrayEquals:nullSafeIndexes(Deque-int) to listOf(),
		AssertDoesNotThrow:<init>() to listOf(),
		AssertDoesNotThrow:assertDoesNotThrow(Executable) to listOf(AssertDoesNotThrow:assertDoesNotThrow(Executable-Object)),
		AssertDoesNotThrow:assertDoesNotThrow(Executable-String) to listOf(AssertDoesNotThrow:assertDoesNotThrow(Executable-Object)),
		AssertDoesNotThrow:assertDoesNotThrow(Executable-Supplier) to listOf(AssertDoesNotThrow:assertDoesNotThrow(Executable-Object)),
		AssertDoesNotThrow:assertDoesNotThrow(Executable-Object) to listOf(Executable:execute(), UnrecoverableExceptions:rethrowIfUnrecoverable(Throwable), AssertDoesNotThrow:createAssertionFailedError(Object-Throwable)),
		AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier) to listOf(AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Object)),
		AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-String) to listOf(AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Object)),
		AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Supplier) to listOf(AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Object)),
		AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Object) to listOf(ThrowingSupplier:get(), UnrecoverableExceptions:rethrowIfUnrecoverable(Throwable), AssertDoesNotThrow:createAssertionFailedError(Object-Throwable)),
		AssertDoesNotThrow:createAssertionFailedError(Object-Throwable) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertDoesNotThrow:buildSuffix(String), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:cause(Throwable), AssertionFailureBuilder:build()),
		AssertDoesNotThrow:buildSuffix(String) to listOf(StringUtils:isNotBlank(String)),
		AssertEquals:<init>() to listOf(),
		AssertEquals:assertEquals(byte-byte) to listOf(AssertEquals:assertEquals(byte-byte-String)),
		AssertEquals:assertEquals(byte-byte-String) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(byte-byte-Supplier) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(char-char) to listOf(AssertEquals:assertEquals(char-char-String)),
		AssertEquals:assertEquals(char-char-String) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(char-char-Supplier) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(double-double) to listOf(AssertEquals:assertEquals(double-double-String)),
		AssertEquals:assertEquals(double-double-String) to listOf(AssertionUtils:doublesAreEqual(double-double), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(double-double-Supplier) to listOf(AssertionUtils:doublesAreEqual(double-double), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(double-double-double) to listOf(AssertEquals:assertEquals(double-double-double-String)),
		AssertEquals:assertEquals(double-double-double-String) to listOf(AssertionUtils:doublesAreEqual(double-double-double), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(double-double-double-Supplier) to listOf(AssertionUtils:doublesAreEqual(double-double-double), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(float-float) to listOf(AssertEquals:assertEquals(float-float-String)),
		AssertEquals:assertEquals(float-float-String) to listOf(AssertionUtils:floatsAreEqual(float-float), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(float-float-Supplier) to listOf(AssertionUtils:floatsAreEqual(float-float), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(float-float-float) to listOf(AssertEquals:assertEquals(float-float-float-String)),
		AssertEquals:assertEquals(float-float-float-String) to listOf(AssertionUtils:floatsAreEqual(float-float-float), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(float-float-float-Supplier) to listOf(AssertionUtils:floatsAreEqual(float-float-float), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(short-short) to listOf(AssertEquals:assertEquals(short-short-String)),
		AssertEquals:assertEquals(short-short-String) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(short-short-Supplier) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(int-int) to listOf(AssertEquals:assertEquals(int-int-String)),
		AssertEquals:assertEquals(int-int-String) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(int-int-Supplier) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(long-long) to listOf(AssertEquals:assertEquals(long-long-String)),
		AssertEquals:assertEquals(long-long-String) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(long-long-Supplier) to listOf(AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(Object-Object) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		AssertEquals:assertEquals(Object-Object-String) to listOf(AssertionUtils:objectsAreEqual(Object-Object), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:assertEquals(Object-Object-Supplier) to listOf(AssertionUtils:objectsAreEqual(Object-Object), AssertEquals:failNotEqual(Object-Object-Object)),
		AssertEquals:failNotEqual(Object-Object-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertFalse:<init>() to listOf(),
		AssertFalse:assertFalse(boolean) to listOf(AssertFalse:assertFalse(boolean-String)),
		AssertFalse:assertFalse(boolean-String) to listOf(AssertFalse:failNotFalse(Object)),
		AssertFalse:assertFalse(boolean-Supplier) to listOf(AssertFalse:failNotFalse(Object)),
		AssertFalse:assertFalse(BooleanSupplier) to listOf(AssertFalse:assertFalse(boolean-String)),
		AssertFalse:assertFalse(BooleanSupplier-String) to listOf(AssertFalse:assertFalse(boolean-String)),
		AssertFalse:assertFalse(BooleanSupplier-Supplier) to listOf(AssertFalse:assertFalse(boolean-Supplier)),
		AssertFalse:failNotFalse(Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertInstanceOf:<init>() to listOf(),
		AssertInstanceOf:assertInstanceOf(Class-Object) to listOf(AssertInstanceOf:assertInstanceOf(Class-Object-Object)),
		AssertInstanceOf:assertInstanceOf(Class-Object-String) to listOf(AssertInstanceOf:assertInstanceOf(Class-Object-Object)),
		AssertInstanceOf:assertInstanceOf(Class-Object-Supplier) to listOf(AssertInstanceOf:assertInstanceOf(Class-Object-Object)),
		AssertInstanceOf:assertInstanceOf(Class-Object-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertIterableEquals$Pair:<init>(Object-Object) to listOf(),
		AssertIterableEquals$Pair:equals(Object) to listOf(),
		AssertIterableEquals$Pair:hashCode() to listOf(),
		AssertIterableEquals$Status:values() to listOf(AssertIterableEquals$Status[]:clone()),
		AssertIterableEquals$Status:valueOf(String) to listOf(),
		AssertIterableEquals$Status:<init>(String-int) to listOf(),
		AssertIterableEquals$Status:<clinit>() to listOf(AssertIterableEquals$Status:<init>(String-int), AssertIterableEquals$Status:<init>(String-int), AssertIterableEquals$Status:$values()),
		AssertIterableEquals:<init>() to listOf(),
		AssertIterableEquals:assertIterableEquals(Iterable-Iterable) to listOf(AssertIterableEquals:assertIterableEquals(Iterable-Iterable-String)),
		AssertIterableEquals:assertIterableEquals(Iterable-Iterable-String) to listOf(AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object)),
		AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Supplier) to listOf(AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object)),
		AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object) to listOf(AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object-Map)),
		AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object-Map) to listOf(AssertIterableEquals:assertIterablesNotNull(Object-Object-Deque-Object), AssertIterableEquals:assertIterableElementsEqual(Object-Object-Deque-Object-Map), AssertIterableEquals:assertIteratorsAreEmpty(Iterator-Iterator-int-Deque-Object)),
		AssertIterableEquals:assertIterableElementsEqual(Object-Object-Deque-Object-Map) to listOf(AssertIterableEquals$Pair:<init>(Object-Object), AssertIterableEquals:failIterablesNotEqual(Object-Object-Deque-Object), AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Deque-Object-Map), AssertIterableEquals:assertIterablesNotNull(Object-Object-Deque-Object), AssertIterableEquals:failIterablesNotEqual(Object-Object-Deque-Object)),
		AssertIterableEquals:assertIterablesNotNull(Object-Object-Deque-Object) to listOf(AssertIterableEquals:failExpectedIterableIsNull(Deque-Object), AssertIterableEquals:failActualIterableIsNull(Deque-Object)),
		AssertIterableEquals:failExpectedIterableIsNull(Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertIterableEquals:failActualIterableIsNull(Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertIterableEquals:assertIteratorsAreEmpty(Iterator-Iterator-int-Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertIterableEquals:failIterablesNotEqual(Object-Object-Deque-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:formatIndexes(Deque), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertIterableEquals:lambda$assertIteratorsAreEmpty$1(AtomicInteger-Object) to listOf(),
		AssertIterableEquals:lambda$assertIteratorsAreEmpty$0(AtomicInteger-Object) to listOf(),
		AssertLinesMatch$LinesMatcher:<init>(List-List-Object) to listOf(),
		AssertLinesMatch$LinesMatcher:assertLinesMatch() to listOf(AssertLinesMatch$LinesMatcher:fail(String-Object[]), AssertLinesMatch$LinesMatcher:assertLinesMatchWithFastForward()),
		AssertLinesMatch$LinesMatcher:assertLinesMatchWithFastForward() to listOf(AssertLinesMatch$LinesMatcher:snippet(String), AssertLinesMatch$LinesMatcher:fail(String-Object[]), AssertLinesMatch:matches(String-String), AssertLinesMatch:isFastForwardLine(String), AssertLinesMatch:parseFastForwardLimit(String), AssertLinesMatch$LinesMatcher:fail(String-Object[]), AssertLinesMatch$LinesMatcher:fail(String-Object[]), AssertLinesMatch$LinesMatcher:snippet(String), AssertLinesMatch$LinesMatcher:fail(String-Object[]), AssertLinesMatch:matches(String-String), AssertLinesMatch$LinesMatcher:fail(String-Object[]), AssertLinesMatch$LinesMatcher:fail(String-Object[])),
		AssertLinesMatch$LinesMatcher:snippet(String) to listOf(),
		AssertLinesMatch$LinesMatcher:fail(String-Object[]) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:includeValuesInMessage(boolean), AssertionFailureBuilder:buildAndThrow()),
		AssertLinesMatch$LinesMatcher:lambda$assertLinesMatch$0(int) to listOf(AssertLinesMatch:matches(String-String)),
		AssertLinesMatch:<init>() to listOf(),
		AssertLinesMatch:assertLinesMatch(List-List) to listOf(AssertLinesMatch:assertLinesMatch(List-List-Object)),
		AssertLinesMatch:assertLinesMatch(List-List-String) to listOf(AssertLinesMatch:assertLinesMatch(List-List-Object)),
		AssertLinesMatch:assertLinesMatch(Stream-Stream) to listOf(AssertLinesMatch:assertLinesMatch(Stream-Stream-Object)),
		AssertLinesMatch:assertLinesMatch(Stream-Stream-String) to listOf(AssertLinesMatch:assertLinesMatch(Stream-Stream-Object)),
		AssertLinesMatch:assertLinesMatch(Stream-Stream-Object) to listOf(Preconditions:notNull(Object-String), Preconditions:notNull(Object-String), AssertLinesMatch:assertLinesMatch(List-List-Object)),
		AssertLinesMatch:assertLinesMatch(List-List-Object) to listOf(Preconditions:notNull(Object-String), Preconditions:notNull(Object-String), AssertLinesMatch$LinesMatcher:<init>(List-List-Object), AssertLinesMatch$LinesMatcher:assertLinesMatch()),
		AssertLinesMatch:isFastForwardLine(String) to listOf(),
		AssertLinesMatch:parseFastForwardLimit(String) to listOf(Preconditions:condition(boolean-Supplier)),
		AssertLinesMatch:matches(String-String) to listOf(Preconditions:notNull(Object-String), Preconditions:notNull(Object-String)),
		AssertLinesMatch:lambda$parseFastForwardLimit$0(int) to listOf(),
		AssertNotEquals:<init>() to listOf(),
		AssertNotEquals:assertNotEquals(byte-byte) to listOf(AssertNotEquals:assertNotEquals(byte-byte-String)),
		AssertNotEquals:assertNotEquals(byte-byte-String) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(byte-byte-Supplier) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(short-short) to listOf(AssertNotEquals:assertNotEquals(short-short-String)),
		AssertNotEquals:assertNotEquals(short-short-String) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(short-short-Supplier) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(int-int) to listOf(AssertNotEquals:assertNotEquals(int-int-String)),
		AssertNotEquals:assertNotEquals(int-int-String) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(int-int-Supplier) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(long-long) to listOf(AssertNotEquals:assertNotEquals(long-long-String)),
		AssertNotEquals:assertNotEquals(long-long-String) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(long-long-Supplier) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(float-float) to listOf(AssertNotEquals:assertNotEquals(float-float-String)),
		AssertNotEquals:assertNotEquals(float-float-String) to listOf(AssertionUtils:floatsAreEqual(float-float), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(float-float-Supplier) to listOf(AssertionUtils:floatsAreEqual(float-float), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(float-float-float) to listOf(AssertNotEquals:assertNotEquals(float-float-float-String)),
		AssertNotEquals:assertNotEquals(float-float-float-String) to listOf(AssertionUtils:floatsAreEqual(float-float-float), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(float-float-float-Supplier) to listOf(AssertionUtils:floatsAreEqual(float-float-float), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(double-double) to listOf(AssertNotEquals:assertNotEquals(double-double-String)),
		AssertNotEquals:assertNotEquals(double-double-String) to listOf(AssertionUtils:doublesAreEqual(double-double), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(double-double-Supplier) to listOf(AssertionUtils:doublesAreEqual(double-double), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(double-double-double) to listOf(AssertNotEquals:assertNotEquals(double-double-double-String)),
		AssertNotEquals:assertNotEquals(double-double-double-String) to listOf(AssertionUtils:doublesAreEqual(double-double-double), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(double-double-double-Supplier) to listOf(AssertionUtils:doublesAreEqual(double-double-double), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(char-char) to listOf(AssertNotEquals:assertNotEquals(char-char-String)),
		AssertNotEquals:assertNotEquals(char-char-String) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(char-char-Supplier) to listOf(AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(Object-Object) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		AssertNotEquals:assertNotEquals(Object-Object-String) to listOf(AssertionUtils:objectsAreEqual(Object-Object), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:assertNotEquals(Object-Object-Supplier) to listOf(AssertionUtils:objectsAreEqual(Object-Object), AssertNotEquals:failEqual(Object-Object)),
		AssertNotEquals:failEqual(Object-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertNotNull:<init>() to listOf(),
		AssertNotNull:assertNotNull(Object) to listOf(AssertNotNull:assertNotNull(Object-String)),
		AssertNotNull:assertNotNull(Object-String) to listOf(AssertNotNull:failNull(Object)),
		AssertNotNull:assertNotNull(Object-Supplier) to listOf(AssertNotNull:failNull(Object)),
		AssertNotNull:failNull(Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertNotSame:<init>() to listOf(),
		AssertNotSame:assertNotSame(Object-Object) to listOf(AssertNotSame:assertNotSame(Object-Object-String)),
		AssertNotSame:assertNotSame(Object-Object-String) to listOf(AssertNotSame:failSame(Object-Object)),
		AssertNotSame:assertNotSame(Object-Object-Supplier) to listOf(AssertNotSame:failSame(Object-Object)),
		AssertNotSame:failSame(Object-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertNull:<init>() to listOf(),
		AssertNull:assertNull(Object) to listOf(AssertNull:assertNull(Object-String)),
		AssertNull:assertNull(Object-String) to listOf(AssertNull:failNotNull(Object-Object)),
		AssertNull:assertNull(Object-Supplier) to listOf(AssertNull:failNotNull(Object-Object)),
		AssertNull:failNotNull(Object-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertSame:<init>() to listOf(),
		AssertSame:assertSame(Object-Object) to listOf(AssertSame:assertSame(Object-Object-String)),
		AssertSame:assertSame(Object-Object-String) to listOf(AssertSame:failNotSame(Object-Object-Object)),
		AssertSame:assertSame(Object-Object-Supplier) to listOf(AssertSame:failNotSame(Object-Object-Object)),
		AssertSame:failNotSame(Object-Object-Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertThrows:<init>() to listOf(),
		AssertThrows:assertThrows(Class-Executable) to listOf(AssertThrows:assertThrows(Class-Executable-Object)),
		AssertThrows:assertThrows(Class-Executable-String) to listOf(AssertThrows:assertThrows(Class-Executable-Object)),
		AssertThrows:assertThrows(Class-Executable-Supplier) to listOf(AssertThrows:assertThrows(Class-Executable-Object)),
		AssertThrows:assertThrows(Class-Executable-Object) to listOf(Executable:execute(), UnrecoverableExceptions:rethrowIfUnrecoverable(Throwable), AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:cause(Throwable), AssertionFailureBuilder:build(), AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:getCanonicalName(Class), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:build()),
		AssertThrowsExactly:<init>() to listOf(),
		AssertThrowsExactly:assertThrowsExactly(Class-Executable) to listOf(AssertThrowsExactly:assertThrowsExactly(Class-Executable-Object)),
		AssertThrowsExactly:assertThrowsExactly(Class-Executable-String) to listOf(AssertThrowsExactly:assertThrowsExactly(Class-Executable-Object)),
		AssertThrowsExactly:assertThrowsExactly(Class-Executable-Supplier) to listOf(AssertThrowsExactly:assertThrowsExactly(Class-Executable-Object)),
		AssertThrowsExactly:assertThrowsExactly(Class-Executable-Object) to listOf(Executable:execute(), UnrecoverableExceptions:rethrowIfUnrecoverable(Throwable), AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:cause(Throwable), AssertionFailureBuilder:build(), AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionUtils:getCanonicalName(Class), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:build()),
		AssertTimeout$ExecutionTimeoutException:<init>(String) to listOf(JUnitException:<init>(String)),
		AssertTimeout$TimeoutThreadFactory:<init>() to listOf(),
		AssertTimeout$TimeoutThreadFactory:newThread(Runnable) to listOf(),
		AssertTimeout$TimeoutThreadFactory:<init>(AssertTimeout$1) to listOf(AssertTimeout$TimeoutThreadFactory:<init>()),
		AssertTimeout$TimeoutThreadFactory:<clinit>() to listOf(),
		AssertTimeout:<init>() to listOf(),
		AssertTimeout:assertTimeout(Duration-Executable) to listOf(AssertTimeout:assertTimeout(Duration-Executable-String)),
		AssertTimeout:assertTimeout(Duration-Executable-String) to listOf(ThrowingSupplier:get(Executable), AssertTimeout:assertTimeout(Duration-ThrowingSupplier-String)),
		AssertTimeout:assertTimeout(Duration-Executable-Supplier) to listOf(ThrowingSupplier:get(Executable), AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Supplier)),
		AssertTimeout:assertTimeout(Duration-ThrowingSupplier) to listOf(AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Object)),
		AssertTimeout:assertTimeout(Duration-ThrowingSupplier-String) to listOf(AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Object)),
		AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Supplier) to listOf(AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Object)),
		AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Object) to listOf(ThrowingSupplier:get(), ExceptionUtils:throwAsUncheckedException(Throwable), AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:reason(String), AssertionFailureBuilder:buildAndThrow()),
		AssertTimeout:assertTimeoutPreemptively(Duration-Executable) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-Executable-String)),
		AssertTimeout:assertTimeoutPreemptively(Duration-Executable-String) to listOf(ThrowingSupplier:get(Executable), AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-String)),
		AssertTimeout:assertTimeoutPreemptively(Duration-Executable-Supplier) to listOf(ThrowingSupplier:get(Executable), AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Supplier)),
		AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Object)),
		AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-String) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Object)),
		AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Supplier) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Object)),
		AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Object) to listOf(AssertTimeout$TimeoutThreadFactory:<init>(AssertTimeout$1), AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:reason(String), AssertTimeout$ExecutionTimeoutException:<init>(String), AssertTimeout$ExecutionTimeoutException:setStackTrace(StackTraceElement[]), AssertionFailureBuilder:cause(Throwable), AssertionFailureBuilder:build(), ExceptionUtils:throwAsUncheckedException(Throwable), ExceptionUtils:throwAsUncheckedException(Throwable)),
		AssertTimeout:lambda$assertTimeoutPreemptively$4(AtomicReference-ThrowingSupplier) to listOf(ThrowingSupplier:get(), ExceptionUtils:throwAsUncheckedException(Throwable)),
		AssertTimeout:lambda$assertTimeoutPreemptively$3(Executable) to listOf(Executable:execute()),
		AssertTimeout:lambda$assertTimeoutPreemptively$2(Executable) to listOf(Executable:execute()),
		AssertTimeout:lambda$assertTimeout$1(Executable) to listOf(Executable:execute()),
		AssertTimeout:lambda$assertTimeout$0(Executable) to listOf(Executable:execute()),
		AssertTrue:<init>() to listOf(),
		AssertTrue:assertTrue(boolean) to listOf(AssertTrue:assertTrue(boolean-String)),
		AssertTrue:assertTrue(boolean-String) to listOf(AssertTrue:failNotTrue(Object)),
		AssertTrue:assertTrue(boolean-Supplier) to listOf(AssertTrue:failNotTrue(Object)),
		AssertTrue:assertTrue(BooleanSupplier) to listOf(AssertTrue:assertTrue(boolean-String)),
		AssertTrue:assertTrue(BooleanSupplier-String) to listOf(AssertTrue:assertTrue(boolean-String)),
		AssertTrue:assertTrue(BooleanSupplier-Supplier) to listOf(AssertTrue:assertTrue(boolean-Supplier)),
		AssertTrue:failNotTrue(Object) to listOf(AssertionFailureBuilder:assertionFailure(), AssertionFailureBuilder:message(Object), AssertionFailureBuilder:expected(Object), AssertionFailureBuilder:actual(Object), AssertionFailureBuilder:buildAndThrow()),
		AssertionFailureBuilder:assertionFailure() to listOf(AssertionFailureBuilder:<init>()),
		AssertionFailureBuilder:<init>() to listOf(),
		AssertionFailureBuilder:buildAndThrow() to listOf(AssertionFailureBuilder:build()),
		AssertionFailureBuilder:build() to listOf(AssertionFailureBuilder:nullSafeGet(Object), AssertionFailureBuilder:formatValues(Object-Object), AssertionFailureBuilder:nullSafeGet(Object), AssertionFailureBuilder:buildPrefix(String), AssertionFailedError:<init>(String-Object-Object-Throwable), AssertionFailedError:<init>(String-Throwable)),
		AssertionFailureBuilder:nullSafeGet(Object) to listOf(StringUtils:nullSafeToString(Object), StringUtils:nullSafeToString(Object)),
		AssertionFailureBuilder:buildPrefix(String) to listOf(StringUtils:isNotBlank(String)),
		AssertionFailureBuilder:formatValues(Object-Object) to listOf(AssertionFailureBuilder:toString(Object), AssertionFailureBuilder:toString(Object), AssertionFailureBuilder:formatClassAndValue(Object-String), AssertionFailureBuilder:formatClassAndValue(Object-String)),
		AssertionFailureBuilder:formatClassAndValue(Object-String) to listOf(AssertionFailureBuilder:getClassName(Object), AssertionFailureBuilder:toHash(Object)),
		AssertionFailureBuilder:toString(Object) to listOf(AssertionUtils:getCanonicalName(Class), StringUtils:nullSafeToString(Object)),
		AssertionFailureBuilder:toHash(Object) to listOf(),
		AssertionFailureBuilder:getClassName(Object) to listOf(AssertionUtils:getCanonicalName(Class)),
		AssertionUtils:<init>() to listOf(),
		AssertionUtils:fail() to listOf(AssertionFailedError:<init>()),
		AssertionUtils:fail(String) to listOf(AssertionFailedError:<init>(String)),
		AssertionUtils:fail(String-Throwable) to listOf(AssertionFailedError:<init>(String-Throwable)),
		AssertionUtils:fail(Throwable) to listOf(AssertionFailedError:<init>(String-Throwable)),
		AssertionUtils:fail(Supplier) to listOf(AssertionUtils:nullSafeGet(Supplier), AssertionFailedError:<init>(String)),
		AssertionUtils:nullSafeGet(Supplier) to listOf(),
		AssertionUtils:getCanonicalName(Class) to listOf(UnrecoverableExceptions:rethrowIfUnrecoverable(Throwable)),
		AssertionUtils:formatIndexes(Deque) to listOf(),
		AssertionUtils:floatsAreEqual(float-float-float) to listOf(AssertionUtils:assertValidDelta(float), AssertionUtils:floatsAreEqual(float-float)),
		AssertionUtils:assertValidDelta(float) to listOf(AssertionUtils:failIllegalDelta(String)),
		AssertionUtils:assertValidDelta(double) to listOf(AssertionUtils:failIllegalDelta(String)),
		AssertionUtils:floatsAreEqual(float-float) to listOf(),
		AssertionUtils:doublesAreEqual(double-double-double) to listOf(AssertionUtils:assertValidDelta(double), AssertionUtils:doublesAreEqual(double-double)),
		AssertionUtils:doublesAreEqual(double-double) to listOf(),
		AssertionUtils:objectsAreEqual(Object-Object) to listOf(),
		AssertionUtils:failIllegalDelta(String) to listOf(AssertionUtils:fail(String)),
		Assertions:<init>() to listOf(),
		Assertions:fail() to listOf(AssertionUtils:fail()),
		Assertions:fail(String) to listOf(AssertionUtils:fail(String)),
		Assertions:fail(String-Throwable) to listOf(AssertionUtils:fail(String-Throwable)),
		Assertions:fail(Throwable) to listOf(AssertionUtils:fail(Throwable)),
		Assertions:fail(Supplier) to listOf(AssertionUtils:fail(Supplier)),
		Assertions:assertTrue(boolean) to listOf(AssertTrue:assertTrue(boolean)),
		Assertions:assertTrue(boolean-Supplier) to listOf(AssertTrue:assertTrue(boolean-Supplier)),
		Assertions:assertTrue(BooleanSupplier) to listOf(AssertTrue:assertTrue(BooleanSupplier)),
		Assertions:assertTrue(BooleanSupplier-String) to listOf(AssertTrue:assertTrue(BooleanSupplier-String)),
		Assertions:assertTrue(boolean-String) to listOf(AssertTrue:assertTrue(boolean-String)),
		Assertions:assertTrue(BooleanSupplier-Supplier) to listOf(AssertTrue:assertTrue(BooleanSupplier-Supplier)),
		Assertions:assertFalse(boolean) to listOf(AssertFalse:assertFalse(boolean)),
		Assertions:assertFalse(boolean-String) to listOf(AssertFalse:assertFalse(boolean-String)),
		Assertions:assertFalse(boolean-Supplier) to listOf(AssertFalse:assertFalse(boolean-Supplier)),
		Assertions:assertFalse(BooleanSupplier) to listOf(AssertFalse:assertFalse(BooleanSupplier)),
		Assertions:assertFalse(BooleanSupplier-String) to listOf(AssertFalse:assertFalse(BooleanSupplier-String)),
		Assertions:assertFalse(BooleanSupplier-Supplier) to listOf(AssertFalse:assertFalse(BooleanSupplier-Supplier)),
		Assertions:assertNull(Object) to listOf(AssertNull:assertNull(Object)),
		Assertions:assertNull(Object-String) to listOf(AssertNull:assertNull(Object-String)),
		Assertions:assertNull(Object-Supplier) to listOf(AssertNull:assertNull(Object-Supplier)),
		Assertions:assertNotNull(Object) to listOf(AssertNotNull:assertNotNull(Object)),
		Assertions:assertNotNull(Object-String) to listOf(AssertNotNull:assertNotNull(Object-String)),
		Assertions:assertNotNull(Object-Supplier) to listOf(AssertNotNull:assertNotNull(Object-Supplier)),
		Assertions:assertEquals(short-short) to listOf(AssertEquals:assertEquals(short-short)),
		Assertions:assertEquals(short-Short) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Short-short) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Short-Short) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(short-short-String) to listOf(AssertEquals:assertEquals(short-short-String)),
		Assertions:assertEquals(short-Short-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Short-short-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Short-Short-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(short-short-Supplier) to listOf(AssertEquals:assertEquals(short-short-Supplier)),
		Assertions:assertEquals(short-Short-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Short-short-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Short-Short-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(byte-byte) to listOf(AssertEquals:assertEquals(byte-byte)),
		Assertions:assertEquals(byte-Byte) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Byte-byte) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Byte-Byte) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(byte-byte-String) to listOf(AssertEquals:assertEquals(byte-byte-String)),
		Assertions:assertEquals(byte-Byte-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Byte-byte-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Byte-Byte-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(byte-byte-Supplier) to listOf(AssertEquals:assertEquals(byte-byte-Supplier)),
		Assertions:assertEquals(byte-Byte-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Byte-byte-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Byte-Byte-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(int-int) to listOf(AssertEquals:assertEquals(int-int)),
		Assertions:assertEquals(int-Integer) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Integer-int) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Integer-Integer) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(int-int-String) to listOf(AssertEquals:assertEquals(int-int-String)),
		Assertions:assertEquals(int-Integer-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Integer-int-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Integer-Integer-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(int-int-Supplier) to listOf(AssertEquals:assertEquals(int-int-Supplier)),
		Assertions:assertEquals(int-Integer-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Integer-int-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Integer-Integer-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(long-long) to listOf(AssertEquals:assertEquals(long-long)),
		Assertions:assertEquals(long-Long) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Long-long) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Long-Long) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(long-long-String) to listOf(AssertEquals:assertEquals(long-long-String)),
		Assertions:assertEquals(long-Long-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Long-long-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Long-Long-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(long-long-Supplier) to listOf(AssertEquals:assertEquals(long-long-Supplier)),
		Assertions:assertEquals(long-Long-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Long-long-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Long-Long-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(float-float) to listOf(AssertEquals:assertEquals(float-float)),
		Assertions:assertEquals(float-Float) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Float-float) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Float-Float) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(float-float-String) to listOf(AssertEquals:assertEquals(float-float-String)),
		Assertions:assertEquals(float-Float-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Float-float-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Float-Float-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(float-float-Supplier) to listOf(AssertEquals:assertEquals(float-float-Supplier)),
		Assertions:assertEquals(float-Float-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Float-float-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Float-Float-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(float-float-float) to listOf(AssertEquals:assertEquals(float-float-float)),
		Assertions:assertEquals(float-float-float-String) to listOf(AssertEquals:assertEquals(float-float-float-String)),
		Assertions:assertEquals(float-float-float-Supplier) to listOf(AssertEquals:assertEquals(float-float-float-Supplier)),
		Assertions:assertEquals(double-double) to listOf(AssertEquals:assertEquals(double-double)),
		Assertions:assertEquals(double-Double) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Double-double) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Double-Double) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(double-double-String) to listOf(AssertEquals:assertEquals(double-double-String)),
		Assertions:assertEquals(double-Double-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Double-double-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Double-Double-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(double-double-Supplier) to listOf(AssertEquals:assertEquals(double-double-Supplier)),
		Assertions:assertEquals(double-Double-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Double-double-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Double-Double-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(double-double-double) to listOf(AssertEquals:assertEquals(double-double-double)),
		Assertions:assertEquals(double-double-double-String) to listOf(AssertEquals:assertEquals(double-double-double-String)),
		Assertions:assertEquals(double-double-double-Supplier) to listOf(AssertEquals:assertEquals(double-double-double-Supplier)),
		Assertions:assertEquals(char-char) to listOf(AssertEquals:assertEquals(char-char)),
		Assertions:assertEquals(char-Character) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Character-char) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Character-Character) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(char-char-String) to listOf(AssertEquals:assertEquals(char-char-String)),
		Assertions:assertEquals(char-Character-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Character-char-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Character-Character-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(char-char-Supplier) to listOf(AssertEquals:assertEquals(char-char-Supplier)),
		Assertions:assertEquals(char-Character-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Character-char-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Character-Character-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertEquals(Object-Object) to listOf(AssertEquals:assertEquals(Object-Object)),
		Assertions:assertEquals(Object-Object-String) to listOf(AssertEquals:assertEquals(Object-Object-String)),
		Assertions:assertEquals(Object-Object-Supplier) to listOf(AssertEquals:assertEquals(Object-Object-Supplier)),
		Assertions:assertArrayEquals(boolean[]-boolean[]) to listOf(AssertArrayEquals:assertArrayEquals(boolean[]-boolean[])),
		Assertions:assertArrayEquals(boolean[]-boolean[]-String) to listOf(AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-String)),
		Assertions:assertArrayEquals(boolean[]-boolean[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(boolean[]-boolean[]-Supplier)),
		Assertions:assertArrayEquals(char[]-char[]) to listOf(AssertArrayEquals:assertArrayEquals(char[]-char[])),
		Assertions:assertArrayEquals(char[]-char[]-String) to listOf(AssertArrayEquals:assertArrayEquals(char[]-char[]-String)),
		Assertions:assertArrayEquals(char[]-char[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(char[]-char[]-Supplier)),
		Assertions:assertArrayEquals(byte[]-byte[]) to listOf(AssertArrayEquals:assertArrayEquals(byte[]-byte[])),
		Assertions:assertArrayEquals(byte[]-byte[]-String) to listOf(AssertArrayEquals:assertArrayEquals(byte[]-byte[]-String)),
		Assertions:assertArrayEquals(byte[]-byte[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(byte[]-byte[]-Supplier)),
		Assertions:assertArrayEquals(short[]-short[]) to listOf(AssertArrayEquals:assertArrayEquals(short[]-short[])),
		Assertions:assertArrayEquals(short[]-short[]-String) to listOf(AssertArrayEquals:assertArrayEquals(short[]-short[]-String)),
		Assertions:assertArrayEquals(short[]-short[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(short[]-short[]-Supplier)),
		Assertions:assertArrayEquals(int[]-int[]) to listOf(AssertArrayEquals:assertArrayEquals(int[]-int[])),
		Assertions:assertArrayEquals(int[]-int[]-String) to listOf(AssertArrayEquals:assertArrayEquals(int[]-int[]-String)),
		Assertions:assertArrayEquals(int[]-int[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(int[]-int[]-Supplier)),
		Assertions:assertArrayEquals(long[]-long[]) to listOf(AssertArrayEquals:assertArrayEquals(long[]-long[])),
		Assertions:assertArrayEquals(long[]-long[]-String) to listOf(AssertArrayEquals:assertArrayEquals(long[]-long[]-String)),
		Assertions:assertArrayEquals(long[]-long[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(long[]-long[]-Supplier)),
		Assertions:assertArrayEquals(float[]-float[]) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[])),
		Assertions:assertArrayEquals(float[]-float[]-String) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-String)),
		Assertions:assertArrayEquals(float[]-float[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-Supplier)),
		Assertions:assertArrayEquals(float[]-float[]-float) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-float)),
		Assertions:assertArrayEquals(float[]-float[]-float-String) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-float-String)),
		Assertions:assertArrayEquals(float[]-float[]-float-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(float[]-float[]-float-Supplier)),
		Assertions:assertArrayEquals(double[]-double[]) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[])),
		Assertions:assertArrayEquals(double[]-double[]-String) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-String)),
		Assertions:assertArrayEquals(double[]-double[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-Supplier)),
		Assertions:assertArrayEquals(double[]-double[]-double) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-double)),
		Assertions:assertArrayEquals(double[]-double[]-double-String) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-double-String)),
		Assertions:assertArrayEquals(double[]-double[]-double-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(double[]-double[]-double-Supplier)),
		Assertions:assertArrayEquals(Object[]-Object[]) to listOf(AssertArrayEquals:assertArrayEquals(Object[]-Object[])),
		Assertions:assertArrayEquals(Object[]-Object[]-String) to listOf(AssertArrayEquals:assertArrayEquals(Object[]-Object[]-String)),
		Assertions:assertArrayEquals(Object[]-Object[]-Supplier) to listOf(AssertArrayEquals:assertArrayEquals(Object[]-Object[]-Supplier)),
		Assertions:assertIterableEquals(Iterable-Iterable) to listOf(AssertIterableEquals:assertIterableEquals(Iterable-Iterable)),
		Assertions:assertIterableEquals(Iterable-Iterable-String) to listOf(AssertIterableEquals:assertIterableEquals(Iterable-Iterable-String)),
		Assertions:assertIterableEquals(Iterable-Iterable-Supplier) to listOf(AssertIterableEquals:assertIterableEquals(Iterable-Iterable-Supplier)),
		Assertions:assertLinesMatch(List-List) to listOf(AssertLinesMatch:assertLinesMatch(List-List)),
		Assertions:assertLinesMatch(List-List-String) to listOf(AssertLinesMatch:assertLinesMatch(List-List-String)),
		Assertions:assertLinesMatch(List-List-Supplier) to listOf(AssertLinesMatch:assertLinesMatch(List-List-Object)),
		Assertions:assertLinesMatch(Stream-Stream) to listOf(AssertLinesMatch:assertLinesMatch(Stream-Stream)),
		Assertions:assertLinesMatch(Stream-Stream-String) to listOf(AssertLinesMatch:assertLinesMatch(Stream-Stream-String)),
		Assertions:assertLinesMatch(Stream-Stream-Supplier) to listOf(AssertLinesMatch:assertLinesMatch(Stream-Stream-Object)),
		Assertions:assertNotEquals(byte-byte) to listOf(AssertNotEquals:assertNotEquals(byte-byte)),
		Assertions:assertNotEquals(byte-Byte) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Byte-byte) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Byte-Byte) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(byte-byte-String) to listOf(AssertNotEquals:assertNotEquals(byte-byte-String)),
		Assertions:assertNotEquals(byte-Byte-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Byte-byte-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Byte-Byte-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(byte-byte-Supplier) to listOf(AssertNotEquals:assertNotEquals(byte-byte-Supplier)),
		Assertions:assertNotEquals(byte-Byte-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Byte-byte-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Byte-Byte-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(short-short) to listOf(AssertNotEquals:assertNotEquals(short-short)),
		Assertions:assertNotEquals(short-Short) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Short-short) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Short-Short) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(short-short-String) to listOf(AssertNotEquals:assertNotEquals(short-short-String)),
		Assertions:assertNotEquals(short-Short-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Short-short-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Short-Short-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(short-short-Supplier) to listOf(AssertNotEquals:assertNotEquals(short-short-Supplier)),
		Assertions:assertNotEquals(short-Short-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Short-short-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Short-Short-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(int-int) to listOf(AssertNotEquals:assertNotEquals(int-int)),
		Assertions:assertNotEquals(int-Integer) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Integer-int) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Integer-Integer) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(int-int-String) to listOf(AssertNotEquals:assertNotEquals(int-int-String)),
		Assertions:assertNotEquals(int-Integer-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Integer-int-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Integer-Integer-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(int-int-Supplier) to listOf(AssertNotEquals:assertNotEquals(int-int-Supplier)),
		Assertions:assertNotEquals(int-Integer-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Integer-int-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Integer-Integer-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(long-long) to listOf(AssertNotEquals:assertNotEquals(long-long)),
		Assertions:assertNotEquals(long-Long) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Long-long) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Long-Long) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(long-long-String) to listOf(AssertNotEquals:assertNotEquals(long-long-String)),
		Assertions:assertNotEquals(long-Long-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Long-long-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Long-Long-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(long-long-Supplier) to listOf(AssertNotEquals:assertNotEquals(long-long-Supplier)),
		Assertions:assertNotEquals(long-Long-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Long-long-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Long-Long-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(float-float) to listOf(AssertNotEquals:assertNotEquals(float-float)),
		Assertions:assertNotEquals(float-Float) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Float-float) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Float-Float) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(float-float-String) to listOf(AssertNotEquals:assertNotEquals(float-float-String)),
		Assertions:assertNotEquals(float-Float-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Float-float-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Float-Float-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(float-float-Supplier) to listOf(AssertNotEquals:assertNotEquals(float-float-Supplier)),
		Assertions:assertNotEquals(float-Float-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Float-float-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Float-Float-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(float-float-float) to listOf(AssertNotEquals:assertNotEquals(float-float-float)),
		Assertions:assertNotEquals(float-float-float-String) to listOf(AssertNotEquals:assertNotEquals(float-float-float-String)),
		Assertions:assertNotEquals(float-float-float-Supplier) to listOf(AssertNotEquals:assertNotEquals(float-float-float-Supplier)),
		Assertions:assertNotEquals(double-double) to listOf(AssertNotEquals:assertNotEquals(double-double)),
		Assertions:assertNotEquals(double-Double) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Double-double) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Double-Double) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(double-double-String) to listOf(AssertNotEquals:assertNotEquals(double-double-String)),
		Assertions:assertNotEquals(double-Double-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Double-double-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Double-Double-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(double-double-Supplier) to listOf(AssertNotEquals:assertNotEquals(double-double-Supplier)),
		Assertions:assertNotEquals(double-Double-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Double-double-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Double-Double-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(double-double-double) to listOf(AssertNotEquals:assertNotEquals(double-double-double)),
		Assertions:assertNotEquals(double-double-double-String) to listOf(AssertNotEquals:assertNotEquals(double-double-double-String)),
		Assertions:assertNotEquals(double-double-double-Supplier) to listOf(AssertNotEquals:assertNotEquals(double-double-double-Supplier)),
		Assertions:assertNotEquals(char-char) to listOf(AssertNotEquals:assertNotEquals(char-char)),
		Assertions:assertNotEquals(char-Character) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Character-char) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Character-Character) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(char-char-String) to listOf(AssertNotEquals:assertNotEquals(char-char-String)),
		Assertions:assertNotEquals(char-Character-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Character-char-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Character-Character-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(char-char-Supplier) to listOf(AssertNotEquals:assertNotEquals(char-char-Supplier)),
		Assertions:assertNotEquals(char-Character-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Character-char-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Character-Character-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertNotEquals(Object-Object) to listOf(AssertNotEquals:assertNotEquals(Object-Object)),
		Assertions:assertNotEquals(Object-Object-String) to listOf(AssertNotEquals:assertNotEquals(Object-Object-String)),
		Assertions:assertNotEquals(Object-Object-Supplier) to listOf(AssertNotEquals:assertNotEquals(Object-Object-Supplier)),
		Assertions:assertSame(Object-Object) to listOf(AssertSame:assertSame(Object-Object)),
		Assertions:assertSame(Object-Object-String) to listOf(AssertSame:assertSame(Object-Object-String)),
		Assertions:assertSame(Object-Object-Supplier) to listOf(AssertSame:assertSame(Object-Object-Supplier)),
		Assertions:assertNotSame(Object-Object) to listOf(AssertNotSame:assertNotSame(Object-Object)),
		Assertions:assertNotSame(Object-Object-String) to listOf(AssertNotSame:assertNotSame(Object-Object-String)),
		Assertions:assertNotSame(Object-Object-Supplier) to listOf(AssertNotSame:assertNotSame(Object-Object-Supplier)),
		Assertions:assertAll(Executable[]) to listOf(AssertAll:assertAll(Executable[])),
		Assertions:assertAll(String-Executable[]) to listOf(AssertAll:assertAll(String-Executable[])),
		Assertions:assertAll(Collection) to listOf(AssertAll:assertAll(Collection)),
		Assertions:assertAll(String-Collection) to listOf(AssertAll:assertAll(String-Collection)),
		Assertions:assertAll(Stream) to listOf(AssertAll:assertAll(Stream)),
		Assertions:assertAll(String-Stream) to listOf(AssertAll:assertAll(String-Stream)),
		Assertions:assertThrowsExactly(Class-Executable) to listOf(AssertThrowsExactly:assertThrowsExactly(Class-Executable)),
		Assertions:assertThrowsExactly(Class-Executable-String) to listOf(AssertThrowsExactly:assertThrowsExactly(Class-Executable-String)),
		Assertions:assertThrowsExactly(Class-Executable-Supplier) to listOf(AssertThrowsExactly:assertThrowsExactly(Class-Executable-Supplier)),
		Assertions:assertThrows(Class-Executable) to listOf(AssertThrows:assertThrows(Class-Executable)),
		Assertions:assertThrows(Class-Executable-String) to listOf(AssertThrows:assertThrows(Class-Executable-String)),
		Assertions:assertThrows(Class-Executable-Supplier) to listOf(AssertThrows:assertThrows(Class-Executable-Supplier)),
		Assertions:assertDoesNotThrow(Executable) to listOf(AssertDoesNotThrow:assertDoesNotThrow(Executable)),
		Assertions:assertDoesNotThrow(Executable-String) to listOf(AssertDoesNotThrow:assertDoesNotThrow(Executable-String)),
		Assertions:assertDoesNotThrow(Executable-Supplier) to listOf(AssertDoesNotThrow:assertDoesNotThrow(Executable-Supplier)),
		Assertions:assertDoesNotThrow(ThrowingSupplier) to listOf(AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier)),
		Assertions:assertDoesNotThrow(ThrowingSupplier-String) to listOf(AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-String)),
		Assertions:assertDoesNotThrow(ThrowingSupplier-Supplier) to listOf(AssertDoesNotThrow:assertDoesNotThrow(ThrowingSupplier-Supplier)),
		Assertions:assertTimeout(Duration-Executable) to listOf(AssertTimeout:assertTimeout(Duration-Executable)),
		Assertions:assertTimeout(Duration-Executable-String) to listOf(AssertTimeout:assertTimeout(Duration-Executable-String)),
		Assertions:assertTimeout(Duration-Executable-Supplier) to listOf(AssertTimeout:assertTimeout(Duration-Executable-Supplier)),
		Assertions:assertTimeout(Duration-ThrowingSupplier) to listOf(AssertTimeout:assertTimeout(Duration-ThrowingSupplier)),
		Assertions:assertTimeout(Duration-ThrowingSupplier-String) to listOf(AssertTimeout:assertTimeout(Duration-ThrowingSupplier-String)),
		Assertions:assertTimeout(Duration-ThrowingSupplier-Supplier) to listOf(AssertTimeout:assertTimeout(Duration-ThrowingSupplier-Supplier)),
		Assertions:assertTimeoutPreemptively(Duration-Executable) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-Executable)),
		Assertions:assertTimeoutPreemptively(Duration-Executable-String) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-Executable-String)),
		Assertions:assertTimeoutPreemptively(Duration-Executable-Supplier) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-Executable-Supplier)),
		Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier)),
		Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier-String) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-String)),
		Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier-Supplier) to listOf(AssertTimeout:assertTimeoutPreemptively(Duration-ThrowingSupplier-Supplier)),
		Assertions:assertInstanceOf(Class-Object) to listOf(AssertInstanceOf:assertInstanceOf(Class-Object)),
		Assertions:assertInstanceOf(Class-Object-String) to listOf(AssertInstanceOf:assertInstanceOf(Class-Object-String)),
		Assertions:assertInstanceOf(Class-Object-Supplier) to listOf(AssertInstanceOf:assertInstanceOf(Class-Object-Supplier)),
		AssertionsKt$assertDoesNotThrow$1:invoke() to listOf(AssertionsKt$assertDoesNotThrow$1:invoke()),
		AssertionsKt$assertDoesNotThrow$1:<init>(String) to listOf(Lambda:<init>(int)),
		AssertionsKt$assertThrows$1:<init>(Throwable) to listOf(),
		AssertionsKt$assertThrows$2:invoke() to listOf(AssertionsKt$assertThrows$2:invoke()),
		AssertionsKt$assertThrows$2:<init>(String) to listOf(Lambda:<init>(int)),
		AssertionsKt$assertThrows$3:<init>(Throwable) to listOf(),
		AssertionsKt$convert$1:apply(Object) to listOf(AssertionsKt$convert$1:apply(Function0)),
		AssertionsKt$convert$1:apply(Function0) to listOf(AssertionsKt$sam$org_junit_jupiter_api_function_Executable$0:<init>(Function0)),
		AssertionsKt$convert$1:<init>() to listOf(),
		AssertionsKt$convert$1:<clinit>() to listOf(AssertionsKt$convert$1:<init>()),
		AssertionsKt$evaluateAndWrap$1:<init>(Object) to listOf(),
		AssertionsKt$evaluateAndWrap$2:get() to listOf(AssertionsKt$evaluateAndWrap$2:get()),
		AssertionsKt$evaluateAndWrap$2:<init>(Throwable) to listOf(),
		AssertionsKt$sam$i$java_util_function_Supplier$0:<init>(Function0) to listOf(),
		AssertionsKt$sam$i$java_util_function_Supplier$0:get() to listOf(Function0:invoke()),
		AssertionsKt$sam$java_util_function_Supplier$0:<init>(Function0) to listOf(),
		AssertionsKt$sam$java_util_function_Supplier$0:get() to listOf(Function0:invoke()),
		AssertionsKt$sam$org_junit_jupiter_api_function_Executable$0:<init>(Function0) to listOf(),
		AssertionsKt$sam$org_junit_jupiter_api_function_Executable$0:execute() to listOf(Function0:invoke(), Intrinsics:checkExpressionValueIsNotNull(Object-String)),
		AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0) to listOf(),
		AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:get() to listOf(Function0:invoke()),
		AssertionsKt:fail(String-Throwable) to listOf(Assertions:fail(String-Throwable), Intrinsics:checkExpressionValueIsNotNull(Object-String)),
		AssertionsKt:fail$default(String-Throwable-int-Object) to listOf(AssertionsKt:fail(String-Throwable)),
		AssertionsKt:fail(Function0) to listOf(AssertionsKt$sam$java_util_function_Supplier$0:<init>(Function0), Assertions:fail(Supplier), Intrinsics:checkExpressionValueIsNotNull(Object-String)),
		AssertionsKt:fail(Throwable) to listOf(Assertions:fail(Throwable), Intrinsics:checkExpressionValueIsNotNull(Object-String)),
		AssertionsKt:convert(Stream) to listOf(),
		AssertionsKt:assertAll(Stream) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt:convert(Stream), Assertions:assertAll(Stream)),
		AssertionsKt:assertAll(String-Stream) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt:convert(Stream), Assertions:assertAll(String-Stream)),
		AssertionsKt:convert(Collection) to listOf(CollectionsKt:collectionSizeOrDefault(Iterable-int), AssertionsKt$sam$org_junit_jupiter_api_function_Executable$0:<init>(Function0)),
		AssertionsKt:assertAll(Collection) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt:convert(Collection), Assertions:assertAll(Collection)),
		AssertionsKt:assertAll(String-Collection) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt:convert(Collection), Assertions:assertAll(String-Collection)),
		AssertionsKt:assertAll(Function0[]) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), ArraysKt:toList(Object[]), Intrinsics:checkExpressionValueIsNotNull(Object-String), AssertionsKt:assertAll(Stream)),
		AssertionsKt:assertAll(String-Function0[]) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), ArraysKt:toList(Object[]), Intrinsics:checkExpressionValueIsNotNull(Object-String), AssertionsKt:assertAll(String-Stream)),
		AssertionsKt:assertThrows(Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Function0:invoke(), Intrinsics:reifiedOperationMarker(int-String), AssertionsKt$assertThrows$1:<init>(Throwable), Assertions:assertThrows(Class-Executable), Intrinsics:checkExpressionValueIsNotNull(Object-String)),
		AssertionsKt:assertThrows(String-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$assertThrows$2:<init>(String), Function0:invoke(), Intrinsics:reifiedOperationMarker(int-String), AssertionsKt$assertThrows$3:<init>(Throwable), AssertionsKt$sam$i$java_util_function_Supplier$0:<init>(Function0), Assertions:assertThrows(Class-Executable-Supplier), Intrinsics:checkExpressionValueIsNotNull(Object-String)),
		AssertionsKt:assertThrows(Function0-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), Function0:invoke(), Intrinsics:reifiedOperationMarker(int-String), AssertionsKt$assertThrows$3:<init>(Throwable), AssertionsKt$sam$i$java_util_function_Supplier$0:<init>(Function0), Assertions:assertThrows(Class-Executable-Supplier), Intrinsics:checkExpressionValueIsNotNull(Object-String)),
		AssertionsKt:assertDoesNotThrow(Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Function0:invoke(), AssertionsKt$evaluateAndWrap$1:<init>(Object), AssertionsKt$evaluateAndWrap$2:<init>(Throwable), Assertions:assertDoesNotThrow(ThrowingSupplier)),
		AssertionsKt:assertDoesNotThrow(String-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$assertDoesNotThrow$1:<init>(String), Function0:invoke(), AssertionsKt$evaluateAndWrap$1:<init>(Object), AssertionsKt$evaluateAndWrap$2:<init>(Throwable), AssertionsKt$sam$i$java_util_function_Supplier$0:<init>(Function0), Assertions:assertDoesNotThrow(ThrowingSupplier-Supplier)),
		AssertionsKt:assertDoesNotThrow(Function0-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), Function0:invoke(), AssertionsKt$evaluateAndWrap$1:<init>(Object), AssertionsKt$evaluateAndWrap$2:<init>(Throwable), AssertionsKt$sam$i$java_util_function_Supplier$0:<init>(Function0), Assertions:assertDoesNotThrow(ThrowingSupplier-Supplier)),
		AssertionsKt:evaluateAndWrap(Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Function0:invoke(), AssertionsKt$evaluateAndWrap$1:<init>(Object), AssertionsKt$evaluateAndWrap$2:<init>(Throwable)),
		AssertionsKt:assertTimeout(Duration-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0), Assertions:assertTimeout(Duration-ThrowingSupplier)),
		AssertionsKt:assertTimeout(Duration-String-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0), Assertions:assertTimeout(Duration-ThrowingSupplier-String)),
		AssertionsKt:assertTimeout(Duration-Function0-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0), AssertionsKt$sam$java_util_function_Supplier$0:<init>(Function0), Assertions:assertTimeout(Duration-ThrowingSupplier-Supplier)),
		AssertionsKt:assertTimeoutPreemptively(Duration-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0), Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier)),
		AssertionsKt:assertTimeoutPreemptively(Duration-String-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0), Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier-String)),
		AssertionsKt:assertTimeoutPreemptively(Duration-Function0-Function0) to listOf(Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), Intrinsics:checkParameterIsNotNull(Object-String), AssertionsKt$sam$org_junit_jupiter_api_function_ThrowingSupplier$0:<init>(Function0), AssertionsKt$sam$java_util_function_Supplier$0:<init>(Function0), Assertions:assertTimeoutPreemptively(Duration-ThrowingSupplier-Supplier)),
		Assumptions:<init>() to listOf(),
		Assumptions:assumeTrue(boolean) to listOf(Assumptions:assumeTrue(boolean-String)),
		Assumptions:assumeTrue(BooleanSupplier) to listOf(Assumptions:assumeTrue(boolean-String)),
		Assumptions:assumeTrue(BooleanSupplier-String) to listOf(Assumptions:assumeTrue(boolean-String)),
		Assumptions:assumeTrue(boolean-Supplier) to listOf(Assumptions:throwAssumptionFailed(String)),
		Assumptions:assumeTrue(boolean-String) to listOf(Assumptions:throwAssumptionFailed(String)),
		Assumptions:assumeTrue(BooleanSupplier-Supplier) to listOf(Assumptions:assumeTrue(boolean-Supplier)),
		Assumptions:assumeFalse(boolean) to listOf(Assumptions:assumeFalse(boolean-String)),
		Assumptions:assumeFalse(BooleanSupplier) to listOf(Assumptions:assumeFalse(boolean-String)),
		Assumptions:assumeFalse(BooleanSupplier-String) to listOf(Assumptions:assumeFalse(boolean-String)),
		Assumptions:assumeFalse(boolean-Supplier) to listOf(Assumptions:throwAssumptionFailed(String)),
		Assumptions:assumeFalse(boolean-String) to listOf(Assumptions:throwAssumptionFailed(String)),
		Assumptions:assumeFalse(BooleanSupplier-Supplier) to listOf(Assumptions:assumeFalse(boolean-Supplier)),
		Assumptions:assumingThat(BooleanSupplier-Executable) to listOf(Assumptions:assumingThat(boolean-Executable)),
		Assumptions:assumingThat(boolean-Executable) to listOf(Executable:execute(), ExceptionUtils:throwAsUncheckedException(Throwable)),
		Assumptions:abort() to listOf(TestAbortedException:<init>()),
		Assumptions:abort(String) to listOf(TestAbortedException:<init>(String)),
		Assumptions:abort(Supplier) to listOf(TestAbortedException:<init>(String)),
		Assumptions:throwAssumptionFailed(String) to listOf(StringUtils:isNotBlank(String), TestAbortedException:<init>(String)),
		ClassOrderer$ClassName:<init>() to listOf(),
		ClassOrderer$ClassName:orderClasses(ClassOrdererContext) to listOf(ClassOrdererContext:getClassDescriptors()),
		ClassOrderer$ClassName:lambda$static$0(ClassDescriptor) to listOf(ClassDescriptor:getTestClass()),
		ClassOrderer$ClassName:<clinit>() to listOf(),
		ClassOrderer$DisplayName:<init>() to listOf(),
		ClassOrderer$DisplayName:orderClasses(ClassOrdererContext) to listOf(ClassOrdererContext:getClassDescriptors()),
		ClassOrderer$DisplayName:<clinit>() to listOf(),
		ClassOrderer$OrderAnnotation:<init>() to listOf(),
		ClassOrderer$OrderAnnotation:orderClasses(ClassOrdererContext) to listOf(ClassOrdererContext:getClassDescriptors()),
		ClassOrderer$OrderAnnotation:getOrder(ClassDescriptor) to listOf(ClassDescriptor:findAnnotation(Class)),
		ClassOrderer$Random:<init>() to listOf(),
		ClassOrderer$Random:orderClasses(ClassOrdererContext) to listOf(ClassOrdererContext:getClassDescriptors(), ClassOrderer$Random:getCustomSeed(ClassOrdererContext)),
		ClassOrderer$Random:getCustomSeed(ClassOrdererContext) to listOf(ClassOrdererContext:getConfigurationParameter(String)),
		ClassOrderer$Random:lambda$getCustomSeed$3(String) to listOf(Logger:config(Supplier), Logger:warn(Throwable-Supplier)),
		ClassOrderer$Random:lambda$getCustomSeed$2(String) to listOf(),
		ClassOrderer$Random:lambda$getCustomSeed$1(String) to listOf(),
		ClassOrderer$Random:lambda$static$0() to listOf(),
		ClassOrderer$Random:<clinit>() to listOf(LoggerFactory:getLogger(Class), Logger:config(Supplier)),
		DisplayNameGenerator$IndicativeSentences:<init>() to listOf(),
		DisplayNameGenerator$IndicativeSentences:generateDisplayNameForClass(Class) to listOf(DisplayNameGenerator$IndicativeSentences:getGeneratorFor(Class), DisplayNameGenerator:generateDisplayNameForClass(Class)),
		DisplayNameGenerator$IndicativeSentences:generateDisplayNameForNestedClass(Class) to listOf(DisplayNameGenerator$IndicativeSentences:getSentenceBeginning(Class)),
		DisplayNameGenerator$IndicativeSentences:generateDisplayNameForMethod(Class-Method) to listOf(DisplayNameGenerator$IndicativeSentences:getSentenceBeginning(Class), DisplayNameGenerator$IndicativeSentences:getFragmentSeparator(Class), DisplayNameGenerator$IndicativeSentences:getGeneratorFor(Class), DisplayNameGenerator:generateDisplayNameForMethod(Class-Method)),
		DisplayNameGenerator$IndicativeSentences:getSentenceBeginning(Class) to listOf(ModifierSupport:isStatic(Class), AnnotationUtils:findAnnotation(AnnotatedElement-Class), DisplayNameGenerator$IndicativeSentences:findDisplayNameGeneration(Class), DisplayNameGenerator$IndicativeSentences:not(Class), DisplayNameGenerator:getDisplayNameGenerator(Class), DisplayNameGenerator:generateDisplayNameForClass(Class), DisplayNameGenerator$IndicativeSentences:generateDisplayNameForClass(Class), DisplayNameGenerator$IndicativeSentences:findDisplayNameGeneration(Class), DisplayNameGenerator$IndicativeSentences:getSentenceBeginning(Class), DisplayNameGenerator$IndicativeSentences:getFragmentSeparator(Class)),
		DisplayNameGenerator$IndicativeSentences:getFragmentSeparator(Class) to listOf(DisplayNameGenerator$IndicativeSentences:findIndicativeSentencesGeneration(Class)),
		DisplayNameGenerator$IndicativeSentences:getGeneratorFor(Class) to listOf(DisplayNameGenerator$IndicativeSentences:findIndicativeSentencesGeneration(Class), DisplayNameGenerator$IndicativeSentences:not(Class)),
		DisplayNameGenerator$IndicativeSentences:findDisplayNameGeneration(Class) to listOf(AnnotationUtils:findAnnotation(Class-Class-boolean)),
		DisplayNameGenerator$IndicativeSentences:findIndicativeSentencesGeneration(Class) to listOf(AnnotationUtils:findAnnotation(Class-Class-boolean)),
		DisplayNameGenerator$IndicativeSentences:not(Class) to listOf(),
		DisplayNameGenerator$IndicativeSentences:lambda$getGeneratorFor$1() to listOf(DisplayNameGenerator:getDisplayNameGenerator(Class)),
		DisplayNameGenerator$IndicativeSentences:lambda$getSentenceBeginning$0(Class) to listOf(DisplayNameGenerator$IndicativeSentences:getGeneratorFor(Class), DisplayNameGenerator:generateDisplayNameForNestedClass(Class)),
		DisplayNameGenerator$IndicativeSentences:<clinit>() to listOf(DisplayNameGenerator$IndicativeSentences:<init>()),
		DisplayNameGenerator$ReplaceUnderscores:<init>() to listOf(DisplayNameGenerator$Simple:<init>()),
		DisplayNameGenerator$ReplaceUnderscores:generateDisplayNameForClass(Class) to listOf(DisplayNameGenerator$Simple:generateDisplayNameForClass(Class), DisplayNameGenerator$ReplaceUnderscores:replaceUnderscores(String)),
		DisplayNameGenerator$ReplaceUnderscores:generateDisplayNameForNestedClass(Class) to listOf(DisplayNameGenerator$Simple:generateDisplayNameForNestedClass(Class), DisplayNameGenerator$ReplaceUnderscores:replaceUnderscores(String)),
		DisplayNameGenerator$ReplaceUnderscores:generateDisplayNameForMethod(Class-Method) to listOf(DisplayNameGenerator$Simple:generateDisplayNameForMethod(Class-Method), DisplayNameGenerator$ReplaceUnderscores:replaceUnderscores(String)),
		DisplayNameGenerator$ReplaceUnderscores:replaceUnderscores(String) to listOf(),
		DisplayNameGenerator$ReplaceUnderscores:<clinit>() to listOf(DisplayNameGenerator$ReplaceUnderscores:<init>()),
		DisplayNameGenerator$Simple:<init>() to listOf(DisplayNameGenerator$Standard:<init>()),
		DisplayNameGenerator$Simple:generateDisplayNameForMethod(Class-Method) to listOf(DisplayNameGenerator$Simple:hasParameters(Method), DisplayNameGenerator:parameterTypesAsString(Method)),
		DisplayNameGenerator$Simple:hasParameters(Method) to listOf(),
		DisplayNameGenerator$Simple:<clinit>() to listOf(DisplayNameGenerator$Simple:<init>()),
		DisplayNameGenerator$Standard:<init>() to listOf(),
		DisplayNameGenerator$Standard:generateDisplayNameForClass(Class) to listOf(),
		DisplayNameGenerator$Standard:generateDisplayNameForNestedClass(Class) to listOf(),
		DisplayNameGenerator$Standard:generateDisplayNameForMethod(Class-Method) to listOf(DisplayNameGenerator:parameterTypesAsString(Method)),
		DisplayNameGenerator$Standard:<clinit>() to listOf(DisplayNameGenerator$Standard:<init>()),
		DisplayNameGenerator:parameterTypesAsString(Method) to listOf(Preconditions:notNull(Object-String), ClassUtils:nullSafeToString(Function-Class[])),
		DisplayNameGenerator:getDisplayNameGenerator(Class) to listOf(Preconditions:notNull(Object-String), Preconditions:condition(boolean-String), ReflectionUtils:newInstance(Class-Object[])),
		DynamicContainer:dynamicContainer(String-Iterable) to listOf(DynamicContainer:dynamicContainer(String-URI-Stream)),
		DynamicContainer:dynamicContainer(String-Stream) to listOf(DynamicContainer:dynamicContainer(String-URI-Stream)),
		DynamicContainer:dynamicContainer(String-URI-Stream) to listOf(DynamicContainer:<init>(String-URI-Stream)),
		DynamicContainer:<init>(String-URI-Stream) to listOf(DynamicNode:<init>(String-URI), Preconditions:notNull(Object-String)),
		DynamicNode:<init>(String-URI) to listOf(Preconditions:notBlank(String-String)),
		DynamicNode:getTestSourceUri() to listOf(),
		DynamicNode:toString() to listOf(ToStringBuilder:<init>(Object), ToStringBuilder:append(String-Object), ToStringBuilder:append(String-Object), ToStringBuilder:toString()),
		DynamicTest:dynamicTest(String-Executable) to listOf(DynamicTest:<init>(String-URI-Executable)),
		DynamicTest:dynamicTest(String-URI-Executable) to listOf(DynamicTest:<init>(String-URI-Executable)),
		DynamicTest:stream(Iterator-Function-ThrowingConsumer) to listOf(Preconditions:notNull(Object-String), DynamicTest:stream(Stream-Function-ThrowingConsumer)),
		DynamicTest:stream(Stream-Function-ThrowingConsumer) to listOf(Preconditions:notNull(Object-String), Preconditions:notNull(Object-String), Preconditions:notNull(Object-String)),
		DynamicTest:stream(Iterator-ThrowingConsumer) to listOf(Preconditions:notNull(Object-String), DynamicTest:stream(Stream-ThrowingConsumer)),
		DynamicTest:stream(Stream-ThrowingConsumer) to listOf(Preconditions:notNull(Object-String), Preconditions:notNull(Object-String)),
		DynamicTest:<init>(String-URI-Executable) to listOf(DynamicNode:<init>(String-URI), Preconditions:notNull(Object-String)),
		DynamicTest:lambda$stream$3(ThrowingConsumer-Named) to listOf(Named:getName(), Executable:execute(ThrowingConsumer-Named), DynamicTest:dynamicTest(String-Executable)),
		DynamicTest:lambda$stream$2(ThrowingConsumer-Named) to listOf(Named:getPayload(), ThrowingConsumer:accept(Object)),
		DynamicTest:lambda$stream$1(Function-ThrowingConsumer-Object) to listOf(Executable:execute(ThrowingConsumer-Object), DynamicTest:dynamicTest(String-Executable)),
		DynamicTest:lambda$stream$0(ThrowingConsumer-Object) to listOf(ThrowingConsumer:accept(Object)),
		MethodOrderer$Alphanumeric:<init>() to listOf(MethodOrderer$MethodName:<init>()),
		MethodOrderer$DisplayName:<init>() to listOf(),
		MethodOrderer$DisplayName:orderMethods(MethodOrdererContext) to listOf(MethodOrdererContext:getMethodDescriptors()),
		MethodOrderer$DisplayName:<clinit>() to listOf(),
		MethodOrderer$MethodName:<init>() to listOf(),
		MethodOrderer$MethodName:orderMethods(MethodOrdererContext) to listOf(MethodOrdererContext:getMethodDescriptors()),
		MethodOrderer$MethodName:parameterList(Method) to listOf(ClassUtils:nullSafeToString(Class[])),
		MethodOrderer$MethodName:lambda$static$1(MethodDescriptor) to listOf(MethodDescriptor:getMethod(), MethodOrderer$MethodName:parameterList(Method)),
		MethodOrderer$MethodName:lambda$static$0(MethodDescriptor) to listOf(MethodDescriptor:getMethod()),
		MethodOrderer$MethodName:<clinit>() to listOf(),
		MethodOrderer$OrderAnnotation:<init>() to listOf(),
		MethodOrderer$OrderAnnotation:orderMethods(MethodOrdererContext) to listOf(MethodOrdererContext:getMethodDescriptors()),
		MethodOrderer$OrderAnnotation:getOrder(MethodDescriptor) to listOf(MethodDescriptor:findAnnotation(Class)),
		MethodOrderer$Random:<init>() to listOf(),
		MethodOrderer$Random:orderMethods(MethodOrdererContext) to listOf(MethodOrdererContext:getMethodDescriptors(), MethodOrderer$Random:getCustomSeed(MethodOrdererContext)),
		MethodOrderer$Random:getCustomSeed(MethodOrdererContext) to listOf(MethodOrdererContext:getConfigurationParameter(String)),
		MethodOrderer$Random:lambda$getCustomSeed$3(String) to listOf(Logger:config(Supplier), Logger:warn(Throwable-Supplier)),
		MethodOrderer$Random:lambda$getCustomSeed$2(String) to listOf(),
		MethodOrderer$Random:lambda$getCustomSeed$1(String) to listOf(),
		MethodOrderer$Random:lambda$static$0() to listOf(),
		MethodOrderer$Random:<clinit>() to listOf(LoggerFactory:getLogger(Class), Logger:config(Supplier)),
		MethodOrderer:getDefaultExecutionMode() to listOf(),
		Named$1:<init>(String-Object) to listOf(),
		Named:of(String-Object) to listOf(Preconditions:notBlank(String-String), Named$1:<init>(String-Object)),
		Named:named(String-Object) to listOf(Named:of(String-Object)),
		TestInstance$Lifecycle:values() to listOf(TestInstance$Lifecycle[]:clone()),
		TestInstance$Lifecycle:valueOf(String) to listOf(),
		TestInstance$Lifecycle:<init>(String-int) to listOf(),
		TestInstance$Lifecycle:<clinit>() to listOf(TestInstance$Lifecycle:<init>(String-int), TestInstance$Lifecycle:<init>(String-int), TestInstance$Lifecycle:$values()),
		TestReporter:publishEntry(String-String) to listOf(TestReporter:publishEntry(Map)),
		TestReporter:publishEntry(String) to listOf(TestReporter:publishEntry(String-String)),
		Timeout$ThreadMode:values() to listOf(Timeout$ThreadMode[]:clone()),
		Timeout$ThreadMode:valueOf(String) to listOf(),
		Timeout$ThreadMode:<init>(String-int) to listOf(),
		Timeout$ThreadMode:<clinit>() to listOf(Timeout$ThreadMode:<init>(String-int), Timeout$ThreadMode:<init>(String-int), Timeout$ThreadMode:<init>(String-int), Timeout$ThreadMode:$values()),
		AbstractOsBasedExecutionCondition:<init>(Class) to listOf(),
		AbstractOsBasedExecutionCondition:evaluateExecutionCondition(ExtensionContext) to listOf(ExtensionContext:getElement(), AnnotationUtils:findAnnotation(Optional-Class)),
		AbstractOsBasedExecutionCondition:createReason(boolean-boolean-boolean) to listOf(),
		AbstractOsBasedExecutionCondition:enabledByDefault() to listOf(ConditionEvaluationResult:enabled(String)),
		AbstractOsBasedExecutionCondition:<clinit>() to listOf(),
		AbstractRepeatableAnnotationCondition:<init>(Class) to listOf(LoggerFactory:getLogger(Class)),
		AbstractRepeatableAnnotationCondition:evaluateExecutionCondition(ExtensionContext) to listOf(ExtensionContext:getElement(), AnnotationUtils:findRepeatableAnnotations(AnnotatedElement-Class), AbstractRepeatableAnnotationCondition:getNoDisabledConditionsEncounteredResult(), AbstractRepeatableAnnotationCondition:getNoDisabledConditionsEncounteredResult()),
		AbstractRepeatableAnnotationCondition:logResult(Annotation-AnnotatedElement-ConditionEvaluationResult) to listOf(Logger:trace(Supplier)),
		AbstractRepeatableAnnotationCondition:lambda$logResult$1(Annotation-AnnotatedElement-ConditionEvaluationResult) to listOf(),
		AbstractRepeatableAnnotationCondition:lambda$evaluateExecutionCondition$0(AnnotatedElement-Annotation) to listOf(AbstractRepeatableAnnotationCondition:evaluate(Annotation), AbstractRepeatableAnnotationCondition:logResult(Annotation-AnnotatedElement-ConditionEvaluationResult)),
		BooleanExecutionCondition:<init>(Class-String-String-Function) to listOf(),
		BooleanExecutionCondition:evaluateExecutionCondition(ExtensionContext) to listOf(ExtensionContext:getElement(), AnnotationUtils:findAnnotation(Optional-Class)),
		BooleanExecutionCondition:enabledByDefault() to listOf(ConditionEvaluationResult:enabled(String)),
		BooleanExecutionCondition:lambda$evaluateExecutionCondition$0(Annotation) to listOf(BooleanExecutionCondition:isEnabled(Annotation), ConditionEvaluationResult:enabled(String), ConditionEvaluationResult:disabled(String-String)),
		DisabledForJreRangeCondition:<init>() to listOf(BooleanExecutionCondition:<init>(Class-String-String-Function)),
		DisabledForJreRangeCondition:isEnabled(DisabledForJreRange) to listOf(DisabledForJreRange:min(), DisabledForJreRange:max(), Preconditions:condition(boolean-String), JRE:compareTo(Enum), Preconditions:condition(boolean-String), JRE:isCurrentVersionWithinRange(JRE-JRE)),
		DisabledForJreRangeCondition:isEnabled(Annotation) to listOf(DisabledForJreRangeCondition:isEnabled(DisabledForJreRange)),
		DisabledIfCondition:<init>() to listOf(MethodBasedCondition:<init>(Class-Function-Function)),
		DisabledIfEnvironmentVariableCondition:<init>() to listOf(AbstractRepeatableAnnotationCondition:<init>(Class)),
		DisabledIfEnvironmentVariableCondition:evaluate(DisabledIfEnvironmentVariable) to listOf(DisabledIfEnvironmentVariable:named(), DisabledIfEnvironmentVariable:matches(), Preconditions:notBlank(String-Supplier), Preconditions:notBlank(String-Supplier), DisabledIfEnvironmentVariableCondition:getEnvironmentVariable(String), ConditionEvaluationResult:enabled(String), DisabledIfEnvironmentVariable:disabledReason(), ConditionEvaluationResult:disabled(String-String), ConditionEvaluationResult:enabled(String)),
		DisabledIfEnvironmentVariableCondition:getEnvironmentVariable(String) to listOf(),
		DisabledIfEnvironmentVariableCondition:evaluate(Annotation) to listOf(DisabledIfEnvironmentVariableCondition:evaluate(DisabledIfEnvironmentVariable)),
		DisabledIfEnvironmentVariableCondition:lambda$evaluate$1(DisabledIfEnvironmentVariable) to listOf(),
		DisabledIfEnvironmentVariableCondition:lambda$evaluate$0(DisabledIfEnvironmentVariable) to listOf(),
		DisabledIfEnvironmentVariableCondition:<clinit>() to listOf(ConditionEvaluationResult:enabled(String)),
		DisabledIfSystemPropertyCondition:<init>() to listOf(AbstractRepeatableAnnotationCondition:<init>(Class)),
		DisabledIfSystemPropertyCondition:evaluate(DisabledIfSystemProperty) to listOf(DisabledIfSystemProperty:named(), DisabledIfSystemProperty:matches(), Preconditions:notBlank(String-Supplier), Preconditions:notBlank(String-Supplier), ConditionEvaluationResult:enabled(String), DisabledIfSystemProperty:disabledReason(), ConditionEvaluationResult:disabled(String-String), ConditionEvaluationResult:enabled(String)),
		DisabledIfSystemPropertyCondition:evaluate(Annotation) to listOf(DisabledIfSystemPropertyCondition:evaluate(DisabledIfSystemProperty)),
		DisabledIfSystemPropertyCondition:lambda$evaluate$1(DisabledIfSystemProperty) to listOf(),
		DisabledIfSystemPropertyCondition:lambda$evaluate$0(DisabledIfSystemProperty) to listOf(),
		DisabledIfSystemPropertyCondition:<clinit>() to listOf(ConditionEvaluationResult:enabled(String)),
		DisabledOnJreCondition:<init>() to listOf(BooleanExecutionCondition:<init>(Class-String-String-Function)),
		DisabledOnJreCondition:isEnabled(DisabledOnJre) to listOf(DisabledOnJre:value(), Preconditions:condition(boolean-String)),
		DisabledOnJreCondition:isEnabled(Annotation) to listOf(DisabledOnJreCondition:isEnabled(DisabledOnJre)),
		DisabledOnOsCondition:<init>() to listOf(AbstractOsBasedExecutionCondition:<init>(Class)),
		DisabledOnOsCondition:evaluateExecutionCondition(DisabledOnOs) to listOf(DisabledOnOs:value(), DisabledOnOs:architectures(), Preconditions:condition(boolean-String), DisabledOnOsCondition:isEnabledBasedOnOs(DisabledOnOs), DisabledOnOsCondition:isEnabledBasedOnArchitecture(DisabledOnOs), DisabledOnOsCondition:createReason(boolean-boolean-boolean), ConditionEvaluationResult:enabled(String), DisabledOnOs:disabledReason(), ConditionEvaluationResult:disabled(String-String)),
		DisabledOnOsCondition:isEnabledBasedOnOs(DisabledOnOs) to listOf(DisabledOnOs:value()),
		DisabledOnOsCondition:isEnabledBasedOnArchitecture(DisabledOnOs) to listOf(DisabledOnOs:architectures()),
		DisabledOnOsCondition:evaluateExecutionCondition(Annotation) to listOf(DisabledOnOsCondition:evaluateExecutionCondition(DisabledOnOs)),
		EnabledForJreRangeCondition:<init>() to listOf(BooleanExecutionCondition:<init>(Class-String-String-Function)),
		EnabledForJreRangeCondition:isEnabled(EnabledForJreRange) to listOf(EnabledForJreRange:min(), EnabledForJreRange:max(), Preconditions:condition(boolean-String), JRE:compareTo(Enum), Preconditions:condition(boolean-String), JRE:isCurrentVersionWithinRange(JRE-JRE)),
		EnabledForJreRangeCondition:isEnabled(Annotation) to listOf(EnabledForJreRangeCondition:isEnabled(EnabledForJreRange)),
		EnabledIfCondition:<init>() to listOf(MethodBasedCondition:<init>(Class-Function-Function)),
		EnabledIfEnvironmentVariableCondition:<init>() to listOf(AbstractRepeatableAnnotationCondition:<init>(Class)),
		EnabledIfEnvironmentVariableCondition:evaluate(EnabledIfEnvironmentVariable) to listOf(EnabledIfEnvironmentVariable:named(), EnabledIfEnvironmentVariable:matches(), Preconditions:notBlank(String-Supplier), Preconditions:notBlank(String-Supplier), EnabledIfEnvironmentVariableCondition:getEnvironmentVariable(String), EnabledIfEnvironmentVariable:disabledReason(), ConditionEvaluationResult:disabled(String-String), ConditionEvaluationResult:enabled(String), EnabledIfEnvironmentVariable:disabledReason(), ConditionEvaluationResult:disabled(String-String)),
		EnabledIfEnvironmentVariableCondition:getEnvironmentVariable(String) to listOf(),
		EnabledIfEnvironmentVariableCondition:evaluate(Annotation) to listOf(EnabledIfEnvironmentVariableCondition:evaluate(EnabledIfEnvironmentVariable)),
		EnabledIfEnvironmentVariableCondition:lambda$evaluate$1(EnabledIfEnvironmentVariable) to listOf(),
		EnabledIfEnvironmentVariableCondition:lambda$evaluate$0(EnabledIfEnvironmentVariable) to listOf(),
		EnabledIfEnvironmentVariableCondition:<clinit>() to listOf(ConditionEvaluationResult:enabled(String)),
		EnabledIfSystemPropertyCondition:<init>() to listOf(AbstractRepeatableAnnotationCondition:<init>(Class)),
		EnabledIfSystemPropertyCondition:evaluate(EnabledIfSystemProperty) to listOf(EnabledIfSystemProperty:named(), EnabledIfSystemProperty:matches(), Preconditions:notBlank(String-Supplier), Preconditions:notBlank(String-Supplier), EnabledIfSystemProperty:disabledReason(), ConditionEvaluationResult:disabled(String-String), ConditionEvaluationResult:enabled(String), EnabledIfSystemProperty:disabledReason(), ConditionEvaluationResult:disabled(String-String)),
		EnabledIfSystemPropertyCondition:evaluate(Annotation) to listOf(EnabledIfSystemPropertyCondition:evaluate(EnabledIfSystemProperty)),
		EnabledIfSystemPropertyCondition:lambda$evaluate$1(EnabledIfSystemProperty) to listOf(),
		EnabledIfSystemPropertyCondition:lambda$evaluate$0(EnabledIfSystemProperty) to listOf(),
		EnabledIfSystemPropertyCondition:<clinit>() to listOf(ConditionEvaluationResult:enabled(String)),
		EnabledOnJreCondition:<init>() to listOf(BooleanExecutionCondition:<init>(Class-String-String-Function)),
		EnabledOnJreCondition:isEnabled(EnabledOnJre) to listOf(EnabledOnJre:value(), Preconditions:condition(boolean-String)),
		EnabledOnJreCondition:isEnabled(Annotation) to listOf(EnabledOnJreCondition:isEnabled(EnabledOnJre)),
		EnabledOnJreCondition:<clinit>() to listOf(),
		EnabledOnOsCondition:<init>() to listOf(AbstractOsBasedExecutionCondition:<init>(Class)),
		EnabledOnOsCondition:evaluateExecutionCondition(EnabledOnOs) to listOf(EnabledOnOs:value(), EnabledOnOs:architectures(), Preconditions:condition(boolean-String), EnabledOnOsCondition:isEnabledBasedOnOs(EnabledOnOs), EnabledOnOsCondition:isEnabledBasedOnArchitecture(EnabledOnOs), EnabledOnOsCondition:createReason(boolean-boolean-boolean), ConditionEvaluationResult:enabled(String), EnabledOnOs:disabledReason(), ConditionEvaluationResult:disabled(String-String)),
		EnabledOnOsCondition:isEnabledBasedOnOs(EnabledOnOs) to listOf(EnabledOnOs:value()),
		EnabledOnOsCondition:isEnabledBasedOnArchitecture(EnabledOnOs) to listOf(EnabledOnOs:architectures()),
		EnabledOnOsCondition:evaluateExecutionCondition(Annotation) to listOf(EnabledOnOsCondition:evaluateExecutionCondition(EnabledOnOs)),
		JRE:values() to listOf(JRE[]:clone()),
		JRE:valueOf(String) to listOf(),
		JRE:<init>(String-int) to listOf(),
		JRE:determineCurrentVersion() to listOf(StringUtils:isBlank(String), Logger:debug(Supplier), ReflectionUtils:invokeMethod(Method-Object-Object[]), ReflectionUtils:invokeMethod(Method-Object-Object[]), Logger:debug(Throwable-Supplier)),
		JRE:isCurrentVersionWithinRange(JRE-JRE) to listOf(),
		JRE:<clinit>() to listOf(JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:<init>(String-int), JRE:$values(), LoggerFactory:getLogger(Class), JRE:determineCurrentVersion()),
		MethodBasedCondition:<init>(Class-Function-Function) to listOf(),
		MethodBasedCondition:evaluateExecutionCondition(ExtensionContext) to listOf(ExtensionContext:getElement(), AnnotationUtils:findAnnotation(Optional-Class)),
		MethodBasedCondition:getConditionMethod(String-ExtensionContext) to listOf(ExtensionContext:getRequiredTestClass(), MethodBasedCondition:findMethod(Class-String), ReflectionUtils:parseFullyQualifiedMethodName(String), ReflectionUtils:tryToLoadClass(String), Try:getOrThrow(Function), MethodBasedCondition:findMethod(Class-String)),
		MethodBasedCondition:findMethod(Class-String) to listOf(ReflectionUtils:findMethod(Class-String-Class[])),
		MethodBasedCondition:invokeConditionMethod(Method-ExtensionContext) to listOf(Preconditions:condition(boolean-Supplier), MethodBasedCondition:acceptsExtensionContextOrNoArguments(Method), Preconditions:condition(boolean-Supplier), ExtensionContext:getTestInstance(), ReflectionUtils:invokeMethod(Method-Object-Object[]), ReflectionUtils:invokeMethod(Method-Object-Object[])),
		MethodBasedCondition:acceptsExtensionContextOrNoArguments(Method) to listOf(),
		MethodBasedCondition:buildConditionEvaluationResult(boolean-Annotation) to listOf(MethodBasedCondition:isEnabled(boolean), ConditionEvaluationResult:enabled(String), StringUtils:isNotBlank(String), ConditionEvaluationResult:disabled(String), ConditionEvaluationResult:disabled(String)),
		MethodBasedCondition:enabledByDefault() to listOf(ConditionEvaluationResult:enabled(String)),
		MethodBasedCondition:lambda$buildConditionEvaluationResult$7(Annotation-boolean) to listOf(),
		MethodBasedCondition:lambda$invokeConditionMethod$6(Method) to listOf(),
		MethodBasedCondition:lambda$invokeConditionMethod$5(Method) to listOf(),
		MethodBasedCondition:lambda$findMethod$4(Class-String) to listOf(ReflectionUtils:getRequiredMethod(Class-String-Class[])),
		MethodBasedCondition:lambda$getConditionMethod$3(String-Exception) to listOf(JUnitException:<init>(String-Throwable)),
		MethodBasedCondition:lambda$evaluateExecutionCondition$2(Optional-Boolean) to listOf(MethodBasedCondition:buildConditionEvaluationResult(boolean-Annotation)),
		MethodBasedCondition:lambda$evaluateExecutionCondition$1(ExtensionContext-Method) to listOf(MethodBasedCondition:invokeConditionMethod(Method-ExtensionContext)),
		MethodBasedCondition:lambda$evaluateExecutionCondition$0(ExtensionContext-String) to listOf(MethodBasedCondition:getConditionMethod(String-ExtensionContext)),
		OS:values() to listOf(OS[]:clone()),
		OS:valueOf(String) to listOf(),
		OS:<init>(String-int) to listOf(),
		OS:determineCurrentOs() to listOf(OS:parse(String)),
		OS:parse(String) to listOf(StringUtils:isBlank(String), Logger:debug(Supplier)),
		OS:<clinit>() to listOf(OS:<init>(String-int), OS:<init>(String-int), OS:<init>(String-int), OS:<init>(String-int), OS:<init>(String-int), OS:<init>(String-int), OS:<init>(String-int), OS:<init>(String-int), OS:$values(), LoggerFactory:getLogger(Class), OS:determineCurrentOs()),
		ConditionEvaluationResult:enabled(String) to listOf(ConditionEvaluationResult:<init>(boolean-String)),
		ConditionEvaluationResult:disabled(String) to listOf(ConditionEvaluationResult:<init>(boolean-String)),
		ConditionEvaluationResult:disabled(String-String) to listOf(StringUtils:isBlank(String), ConditionEvaluationResult:disabled(String), ConditionEvaluationResult:disabled(String)),
		ConditionEvaluationResult:<init>(boolean-String) to listOf(),
		ConditionEvaluationResult:toString() to listOf(ToStringBuilder:<init>(Object), ToStringBuilder:append(String-Object), ToStringBuilder:append(String-Object), ToStringBuilder:toString()),
		ExecutableInvoker:invoke(Method) to listOf(ExecutableInvoker:invoke(Method-Object)),
		ExecutableInvoker:invoke(Constructor) to listOf(ExecutableInvoker:invoke(Constructor-Object)),
		ExtensionConfigurationException:<init>(String) to listOf(JUnitException:<init>(String)),
		ExtensionConfigurationException:<init>(String-Throwable) to listOf(JUnitException:<init>(String-Throwable)),
		ExtensionContext$Namespace:create(Object[]) to listOf(Preconditions:notEmpty(Object[]-String), Preconditions:containsNoNullElements(Object[]-String), ExtensionContext$Namespace:<init>(List)),
		ExtensionContext$Namespace:<init>(List) to listOf(),
		ExtensionContext$Namespace:equals(Object) to listOf(),
		ExtensionContext$Namespace:hashCode() to listOf(),
		ExtensionContext$Namespace:append(Object[]) to listOf(Preconditions:notEmpty(Object[]-String), Preconditions:containsNoNullElements(Object[]-String), ExtensionContext$Namespace:<init>(List)),
		ExtensionContext$Namespace:<clinit>() to listOf(ExtensionContext$Namespace:create(Object[])),
		ExtensionContext$Store:getOrDefault(Object-Class-Object) to listOf(ExtensionContext$Store:get(Object-Class)),
		ExtensionContext$Store:getOrComputeIfAbsent(Class) to listOf(ExtensionContext$Store:getOrComputeIfAbsent(Object-Function-Class)),
		ExtensionContext$Store:lambda$getOrComputeIfAbsent$0(Class) to listOf(ReflectionSupport:newInstance(Class-Object[])),
		ExtensionContext:getRequiredTestClass() to listOf(ExtensionContext:getTestClass(), Preconditions:notNull(Object-String)),
		ExtensionContext:getRequiredTestInstance() to listOf(ExtensionContext:getTestInstance(), Preconditions:notNull(Object-String)),
		ExtensionContext:getRequiredTestInstances() to listOf(ExtensionContext:getTestInstances(), Preconditions:notNull(Object-String)),
		ExtensionContext:getRequiredTestMethod() to listOf(ExtensionContext:getTestMethod(), Preconditions:notNull(Object-String)),
		ExtensionContext:publishReportEntry(String-String) to listOf(ExtensionContext:publishReportEntry(Map)),
		ExtensionContext:publishReportEntry(String) to listOf(ExtensionContext:publishReportEntry(String-String)),
		ExtensionContextException:<init>(String) to listOf(JUnitException:<init>(String)),
		InvocationInterceptor:interceptTestClassConstructor(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptBeforeAllMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptBeforeEachMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptTestMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptTestFactoryMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptTestTemplateMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptDynamicTest(InvocationInterceptor$Invocation-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptDynamicTest(InvocationInterceptor$Invocation-DynamicTestInvocationContext-ExtensionContext) to listOf(InvocationInterceptor:interceptDynamicTest(InvocationInterceptor$Invocation-ExtensionContext)),
		InvocationInterceptor:interceptAfterEachMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		InvocationInterceptor:interceptAfterAllMethod(InvocationInterceptor$Invocation-ReflectiveInvocationContext-ExtensionContext) to listOf(InvocationInterceptor$Invocation:proceed()),
		ParameterContext:getDeclaringExecutable() to listOf(ParameterContext:getParameter()),
		ParameterResolutionException:<init>(String) to listOf(JUnitException:<init>(String)),
		ParameterResolutionException:<init>(String-Throwable) to listOf(JUnitException:<init>(String-Throwable)),
		TestInstancePreDestroyCallback:preDestroyTestInstances(ExtensionContext-Consumer) to listOf(ExtensionContext:getRequiredTestInstances(), TestInstances:getAllInstances(), ExtensionContext:getParent(), ExtensionContext:getTestInstances(), ExtensionContext:getParent()),
		TestInstantiationException:<init>(String) to listOf(JUnitException:<init>(String)),
		TestInstantiationException:<init>(String-Throwable) to listOf(JUnitException:<init>(String-Throwable)),
		TestTemplateInvocationContext:getDisplayName(int) to listOf(),
		TestTemplateInvocationContext:getAdditionalExtensions() to listOf(),
		TypeBasedParameterResolver:<init>() to listOf(TypeBasedParameterResolver:enclosedTypeOfParameterResolver()),
		TypeBasedParameterResolver:supportsParameter(ParameterContext-ExtensionContext) to listOf(TypeBasedParameterResolver:getParameterType(ParameterContext)),
		TypeBasedParameterResolver:getParameterType(ParameterContext) to listOf(ParameterContext:getParameter()),
		TypeBasedParameterResolver:enclosedTypeOfParameterResolver() to listOf(TypeBasedParameterResolver:findTypeBasedParameterResolverSuperclass(Class), Preconditions:notNull(Object-Supplier)),
		TypeBasedParameterResolver:findTypeBasedParameterResolverSuperclass(Class) to listOf(TypeBasedParameterResolver:findTypeBasedParameterResolverSuperclass(Class)),
		TypeBasedParameterResolver:lambda$enclosedTypeOfParameterResolver$0() to listOf(),
		CleanupMode:values() to listOf(CleanupMode[]:clone()),
		CleanupMode:valueOf(String) to listOf(),
		CleanupMode:<init>(String-int) to listOf(),
		CleanupMode:<clinit>() to listOf(CleanupMode:<init>(String-int), CleanupMode:<init>(String-int), CleanupMode:<init>(String-int), CleanupMode:<init>(String-int), CleanupMode:$values()),
		ExecutionMode:values() to listOf(ExecutionMode[]:clone()),
		ExecutionMode:valueOf(String) to listOf(),
		ExecutionMode:<init>(String-int) to listOf(),
		ExecutionMode:<clinit>() to listOf(ExecutionMode:<init>(String-int), ExecutionMode:<init>(String-int), ExecutionMode:$values()),
		ResourceAccessMode:values() to listOf(ResourceAccessMode[]:clone()),
		ResourceAccessMode:valueOf(String) to listOf(),
		ResourceAccessMode:<init>(String-int) to listOf(),
		ResourceAccessMode:<clinit>() to listOf(ResourceAccessMode:<init>(String-int), ResourceAccessMode:<init>(String-int), ResourceAccessMode:$values()),
		Resources:<init>() to listOf(),
	)
)